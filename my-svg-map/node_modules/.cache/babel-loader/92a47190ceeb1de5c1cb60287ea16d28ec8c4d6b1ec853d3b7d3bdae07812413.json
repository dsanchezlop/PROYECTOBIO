{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport hello from \"./components/HelloWorld.vue\";\nimport map from \"./components/SVGMap.vue\";\nimport login from \"./components/Login.vue\";\nimport map_flora from \"./components/FloraMaps.vue\";\nimport database from \"./components/Database.vue\";\nimport register from \"./components/Register.vue\";\nimport profile from \"./components/Profile.vue\";\nimport logout from \"./components/Logout.vue\";\nimport charts from \"./components/Charts.vue\";\nimport contact from \"./components/Contact.vue\";\n\n//Routes\nconst _routes = [{\n  path: \"/\",\n  name: \"hello\",\n  component: hello\n}, {\n  path: \"/map\",\n  name: \"map\",\n  component: map\n}, {\n  path: \"/map_flora\",\n  name: \"map_flora\",\n  component: map_flora\n}, {\n  path: \"/database\",\n  name: \"database\",\n  component: database\n}, {\n  path: \"/register\",\n  name: \"register\",\n  component: register\n}, {\n  path: \"/profile\",\n  name: \"profile\",\n  component: profile\n}, {\n  path: \"/logout\",\n  name: \"logout\",\n  component: logout\n}, {\n  path: \"/charts\",\n  name: \"charts\",\n  component: charts\n}, {\n  path: \"/contact\",\n  name: \"contact\",\n  component: contact\n}, {\n  path: '/login',\n  name: 'login',\n  component: Login,\n  meta: {\n    requiresGuest: true\n  }\n}, {\n  path: '/register',\n  name: 'register',\n  component: Register,\n  meta: {\n    requiresGuest: true\n  }\n}, {\n  path: '/profile',\n  name: 'profile',\n  component: Profile,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/logout',\n  name: 'logout',\n  component: Logout,\n  meta: {\n    requiresAuth: true\n  }\n}];\n\n//Create router\nconst router = createRouter({\n  history: createWebHistory(),\n  routes: _routes\n});\n\n// authentication check\nrouter.beforeEach((to, from, next) => {\n  const loggedIn = document.cookie.includes('isLoggedIn=true');\n\n  // redirect to login page if user is not logged in and trying to access a protected page\n  if (to.matched.some(record => record.meta.requiresAuth) && !loggedIn) {\n    next('/login');\n    return;\n  }\n\n  // redirect to home page if user is logged in and trying to access login/register page\n  if (to.matched.some(record => record.meta.requiresGuest) && loggedIn) {\n    next('/');\n    return;\n  }\n  next();\n});\n\n//Export router\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","hello","map","login","map_flora","database","register","profile","logout","charts","contact","_routes","path","name","component","Login","meta","requiresGuest","Register","Profile","requiresAuth","Logout","router","history","routes","beforeEach","to","from","next","loggedIn","document","cookie","includes","matched","some","record"],"sources":["C:/Users/daniv/Documents/GitHub/PROYECTOBIO/my-svg-map/src/router.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router';\r\nimport hello from \"./components/HelloWorld.vue\";\r\nimport map from \"./components/SVGMap.vue\";\r\nimport login from \"./components/Login.vue\";\r\nimport map_flora from \"./components/FloraMaps.vue\";\r\nimport database from \"./components/Database.vue\";\r\nimport register from \"./components/Register.vue\";\r\nimport profile from \"./components/Profile.vue\";\r\nimport logout from \"./components/Logout.vue\";\r\nimport charts from \"./components/Charts.vue\";\r\nimport contact from \"./components/Contact.vue\";\r\n\r\n\r\n//Routes\r\nconst _routes = [\r\n{\r\n    path:\"/\",\r\n    name:\"hello\",\r\n    component:hello,\r\n},\r\n{\r\n    path:\"/map\",\r\n    name:\"map\",\r\n    component:map\r\n},\r\n{\r\n    path:\"/map_flora\",\r\n    name:\"map_flora\",\r\n    component:map_flora\r\n},\r\n{\r\n    path:\"/database\",\r\n    name:\"database\",\r\n    component:database\r\n},\r\n{\r\n    path:\"/register\",\r\n    name:\"register\",\r\n    component:register\r\n},\r\n{\r\n    path:\"/profile\",\r\n    name:\"profile\",\r\n    component:profile\r\n},\r\n{\r\n    path:\"/logout\",\r\n    name:\"logout\",\r\n    component:logout\r\n},\r\n{\r\n    path:\"/charts\",\r\n    name:\"charts\",\r\n    component:charts\r\n},\r\n{\r\n    path:\"/contact\",\r\n    name:\"contact\",\r\n    component:contact\r\n},\r\n{\r\n    path: '/login',\r\n    name: 'login',\r\n    component: Login,\r\n    meta: { requiresGuest: true }\r\n  },\r\n  {\r\n    path: '/register',\r\n    name: 'register',\r\n    component: Register,\r\n    meta: { requiresGuest: true }\r\n  },\r\n  {\r\n    path: '/profile',\r\n    name: 'profile',\r\n    component: Profile,\r\n    meta: { requiresAuth: true }\r\n  },\r\n  {\r\n    path: '/logout',\r\n    name: 'logout',\r\n    component: Logout,\r\n    meta: { requiresAuth: true }\r\n  },\r\n  \r\n];\r\n\r\n//Create router\r\nconst router = createRouter({\r\n    history:createWebHistory(),\r\n    routes: _routes,\r\n});\r\n\r\n// authentication check\r\nrouter.beforeEach((to, from, next) => {\r\n    const loggedIn = document.cookie.includes('isLoggedIn=true');\r\n  \r\n    // redirect to login page if user is not logged in and trying to access a protected page\r\n    if (to.matched.some(record => record.meta.requiresAuth) && !loggedIn) {\r\n      next('/login');\r\n      return;\r\n    }\r\n  \r\n    // redirect to home page if user is logged in and trying to access login/register page\r\n    if (to.matched.some(record => record.meta.requiresGuest) && loggedIn) {\r\n      next('/');\r\n      return;\r\n    }\r\n  \r\n    next();\r\n  });\r\n\r\n//Export router\r\nexport default router;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}