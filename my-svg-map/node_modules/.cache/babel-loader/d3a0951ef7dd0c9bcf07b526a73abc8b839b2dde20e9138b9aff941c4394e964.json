{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport * as d3 from \"d3\";\nconst selectedStates = ref([]);\nexport default {\n  mounted() {\n    const svg = d3.select(this.$refs.chart).append(\"svg\").attr(\"width\", \"1009.6727\").attr(\"height\", \"665.96301\");\n\n    // Aquí es donde se carga el archivo world.svg y se agrega al SVG\n    d3.xml(require(\"@/assets/world.svg\")).then(data => {\n      const importedNode = document.importNode(data.documentElement, true);\n      svg.node().appendChild(importedNode);\n\n      // Obtener todos los elementos \"path\" del SVG\n      const paths = svg.selectAll('path');\n\n      // Asignar las funciones \"changeColorOnClick\", \"changeColorOnHover\" y \"restoreColorOnHover\" a los eventos correspondientes de cada elemento \"path\"\n      paths.on('click', event => {\n        changeColorOnClick(event);\n        addToSelectedStates(event);\n      }).on('mouseover', changeColorOnHover).on('mouseout', restoreColorOnHover);\n    }).catch(error => {\n      console.error(error);\n    });\n  },\n  methods: {\n    addToSelectedStates(event) {\n      const path = event.target;\n      selectedStates.value.push({\n        id: path.id,\n        title: path.getAttribute('title')\n      });\n    }\n  }\n};\n\n// Función para cambiar el color de fondo de un elemento \"path\" a púrpura al pasar el mouse por encima\nfunction changeColorOnHover(event) {\n  const path = event.target;\n  if (!path.classList.contains('selectedPath')) {\n    path.style.fill = 'purple';\n    document.getElementById(\"hover-value\").textContent = path.getAttribute('title');\n  }\n}\n\n// Función para restaurar el color de fondo de un elemento \"path\" al dejar de pasar el mouse por encima\nfunction restoreColorOnHover(event) {\n  const path = event.target;\n  if (!path.classList.contains('selectedPath')) {\n    path.style.fill = 'black';\n  }\n}","map":{"version":3,"names":["ref","d3","selectedStates","mounted","svg","select","$refs","chart","append","attr","xml","require","then","data","importedNode","document","importNode","documentElement","node","appendChild","paths","selectAll","on","event","changeColorOnClick","addToSelectedStates","changeColorOnHover","restoreColorOnHover","catch","error","console","methods","path","target","value","push","id","title","getAttribute","classList","contains","style","fill","getElementById","textContent"],"sources":["/home/lasmas/GitHub/PROYECTOBIO/my-svg-map/src/components/SVGMap.vue"],"sourcesContent":["<template>\n   <button class=\"button-zoom\" @click=\"zoomIn\">+</button>\n   <button class=\"button-zoom\" @click=\"zoomOut\">-</button>\n   <br>\n   <button class=\"button-container\" @click=\"clearSelection\"> Clear Selection </button>\n\n   <div>\n      <h2>Selected Countries:</h2>\n      <div style=\"display:inline\">\n         <h4 v-for=\"state in selectedStates\" :key=\"state.id\">\n            {{ state.id }}: {{ state.title }}\n         </h4>\n      </div>\n      <div style=\"display:flex; text-align: center; align-items: center;\">\n         <h2>Hovered Country:</h2>\n         <h3 style=\"color: black\" id=\"hover-value\">Move your mouse</h3>\n      </div>\n   </div>\n   <div ref=\"chart\">\n      <svg></svg>\n   </div>\n</template>\n\n\n<script>\nimport { ref } from 'vue';\nimport * as d3 from \"d3\";\n\nconst selectedStates = ref([]);\nexport default {\n   mounted() {\n      const svg = d3.select(this.$refs.chart)\n         .append(\"svg\")\n         .attr(\"width\", \"1009.6727\")\n         .attr(\"height\", \"665.96301\");\n\n      // Aquí es donde se carga el archivo world.svg y se agrega al SVG\n      d3.xml(require(\"@/assets/world.svg\"))\n         .then(data => {\n            const importedNode = document.importNode(data.documentElement, true);\n            svg.node().appendChild(importedNode);\n\n            // Obtener todos los elementos \"path\" del SVG\n            const paths = svg.selectAll('path');\n\n            // Asignar las funciones \"changeColorOnClick\", \"changeColorOnHover\" y \"restoreColorOnHover\" a los eventos correspondientes de cada elemento \"path\"\n            paths\n               .on('click', event => {\n                  changeColorOnClick(event);\n                  addToSelectedStates(event);\n               })\n               .on('mouseover', changeColorOnHover)\n               .on('mouseout', restoreColorOnHover);\n         })\n         .catch(error => {\n            console.error(error);\n         });\n   },\n   methods: {\n      addToSelectedStates(event) {\n         const path = event.target;\n         selectedStates.value.push({ id: path.id, title: path.getAttribute('title') });\n      }\n   }\n}\n\n// Función para cambiar el color de fondo de un elemento \"path\" a púrpura al pasar el mouse por encima\nfunction changeColorOnHover(event) {\n   const path = event.target;\n   if (!path.classList.contains('selectedPath')) {\n      path.style.fill = 'purple';\n      document.getElementById(\"hover-value\").textContent = path.getAttribute('title');\n   }\n}\n\n// Función para restaurar el color de fondo de un elemento \"path\" al dejar de pasar el mouse por encima\nfunction restoreColorOnHover(event) {\n   const path = event.target;\n\n   if (!path.classList.contains('selectedPath')) {\n      path.style.fill = 'black';\n   }\n}\n\n</script>\n\n<style scoped>\n.selectedPath {\n   animation-name: slowchange;\n   animation-duration: 1.5s;\n   animation-fill-mode: forwards;\n}\n\npath:hover {\n   animation-name: hoverChange;\n   animation-duration: 1s;\n   animation-fill-mode: forwards;\n}\n\n.map-container {\n   width: 100vw;\n   /* ancho al 100% de la ventana */\n   /* height: 100vh; altura al 100% de la ventana */\n   display: flex;\n   justify-content: center;\n   /* centro horizontal */\n   align-items: center;\n   /* centro vertical */\n}\n\n.button-container {\n   position: relative;\n   z-index: 1;\n   margin-right: auto;\n   width: fit-content;\n   height: fit-content;\n}\n\n.button-zoom {\n   position: relative;\n   z-index: 1;\n   margin-right: auto;\n   width: 2%;\n   height: 2%;\n}\n\n.draggeable {\n   cursor: move;\n}\n\n.selected {\n   fill: green;\n}\n\npath {\n   fill: black;\n   transition: fill 0.5s ease-in-out;\n}\n\n.selectedPath {\n   animation-name: slowchange;\n   animation-duration: 1.5s;\n   animation-fill-mode: forwards;\n   transition: fill 0.5s ease-in-out;\n}\n\npath:hover {\n   animation-name: hoverChange;\n   animation-duration: 1s;\n   animation-fill-mode: forwards;\n   transition: fill 0.5s ease-in-out;\n}\n</style>\n"],"mappings":";AAyBA,SAASA,GAAE,QAAS,KAAK;AACzB,OAAO,KAAKC,EAAC,MAAO,IAAI;AAExB,MAAMC,cAAa,GAAIF,GAAG,CAAC,EAAE,CAAC;AAC9B,eAAe;EACZG,OAAOA,CAAA,EAAG;IACP,MAAMC,GAAE,GAAIH,EAAE,CAACI,MAAM,CAAC,IAAI,CAACC,KAAK,CAACC,KAAK,EAClCC,MAAM,CAAC,KAAK,EACZC,IAAI,CAAC,OAAO,EAAE,WAAW,EACzBA,IAAI,CAAC,QAAQ,EAAE,WAAW,CAAC;;IAE/B;IACAR,EAAE,CAACS,GAAG,CAACC,OAAO,CAAC,oBAAoB,CAAC,EAChCC,IAAI,CAACC,IAAG,IAAK;MACX,MAAMC,YAAW,GAAIC,QAAQ,CAACC,UAAU,CAACH,IAAI,CAACI,eAAe,EAAE,IAAI,CAAC;MACpEb,GAAG,CAACc,IAAI,EAAE,CAACC,WAAW,CAACL,YAAY,CAAC;;MAEpC;MACA,MAAMM,KAAI,GAAIhB,GAAG,CAACiB,SAAS,CAAC,MAAM,CAAC;;MAEnC;MACAD,KAAI,CACAE,EAAE,CAAC,OAAO,EAAEC,KAAI,IAAK;QACnBC,kBAAkB,CAACD,KAAK,CAAC;QACzBE,mBAAmB,CAACF,KAAK,CAAC;MAC7B,CAAC,EACAD,EAAE,CAAC,WAAW,EAAEI,kBAAkB,EAClCJ,EAAE,CAAC,UAAU,EAAEK,mBAAmB,CAAC;IAC1C,CAAC,EACAC,KAAK,CAACC,KAAI,IAAK;MACbC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACvB,CAAC,CAAC;EACR,CAAC;EACDE,OAAO,EAAE;IACNN,mBAAmBA,CAACF,KAAK,EAAE;MACxB,MAAMS,IAAG,GAAIT,KAAK,CAACU,MAAM;MACzB/B,cAAc,CAACgC,KAAK,CAACC,IAAI,CAAC;QAAEC,EAAE,EAAEJ,IAAI,CAACI,EAAE;QAAEC,KAAK,EAAEL,IAAI,CAACM,YAAY,CAAC,OAAO;MAAE,CAAC,CAAC;IAChF;EACH;AACH;;AAEA;AACA,SAASZ,kBAAkBA,CAACH,KAAK,EAAE;EAChC,MAAMS,IAAG,GAAIT,KAAK,CAACU,MAAM;EACzB,IAAI,CAACD,IAAI,CAACO,SAAS,CAACC,QAAQ,CAAC,cAAc,CAAC,EAAE;IAC3CR,IAAI,CAACS,KAAK,CAACC,IAAG,GAAI,QAAQ;IAC1B3B,QAAQ,CAAC4B,cAAc,CAAC,aAAa,CAAC,CAACC,WAAU,GAAIZ,IAAI,CAACM,YAAY,CAAC,OAAO,CAAC;EAClF;AACH;;AAEA;AACA,SAASX,mBAAmBA,CAACJ,KAAK,EAAE;EACjC,MAAMS,IAAG,GAAIT,KAAK,CAACU,MAAM;EAEzB,IAAI,CAACD,IAAI,CAACO,SAAS,CAACC,QAAQ,CAAC,cAAc,CAAC,EAAE;IAC3CR,IAAI,CAACS,KAAK,CAACC,IAAG,GAAI,OAAO;EAC5B;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}