{"ast":null,"code":"require(\"core-js/modules/es.array.push.js\");\n/*!\n* svg.js - A lightweight library for manipulating and animating SVG.\n* @version 2.7.1\n* https://svgdotjs.github.io/\n*\n* @copyright Wout Fierens <wout@mick-wout.com>\n* @license MIT\n*\n* BUILT: Fri Nov 30 2018 10:01:55 GMT+0100 (GMT+01:00)\n*/\n;\n(function (root, factory) {\n  /* istanbul ignore next */\n  if (typeof define === 'function' && define.amd) {\n    define(function () {\n      return factory(root, root.document);\n    });\n  } else if (typeof exports === 'object') {\n    module.exports = root.document ? factory(root, root.document) : function (w) {\n      return factory(w, w.document);\n    };\n  } else {\n    root.SVG = factory(root, root.document);\n  }\n})(typeof window !== \"undefined\" ? window : this, function (window, document) {\n  // Find global reference - uses 'this' by default when available,\n  // falls back to 'window' otherwise (for bundlers like Webpack)\n  var globalRef = typeof this !== \"undefined\" ? this : window;\n\n  // The main wrapping element\n  var SVG = globalRef.SVG = function (element) {\n    if (SVG.supported) {\n      element = new SVG.Doc(element);\n      if (!SVG.parser.draw) SVG.prepare();\n      return element;\n    }\n  };\n\n  // Default namespaces\n  SVG.ns = 'http://www.w3.org/2000/svg';\n  SVG.xmlns = 'http://www.w3.org/2000/xmlns/';\n  SVG.xlink = 'http://www.w3.org/1999/xlink';\n  SVG.svgjs = 'http://svgjs.com/svgjs';\n\n  // Svg support test\n  SVG.supported = function () {\n    return !!document.createElementNS && !!document.createElementNS(SVG.ns, 'svg').createSVGRect;\n  }();\n\n  // Don't bother to continue if SVG is not supported\n  if (!SVG.supported) return false;\n\n  // Element id sequence\n  SVG.did = 1000;\n\n  // Get next named element id\n  SVG.eid = function (name) {\n    return 'Svgjs' + capitalize(name) + SVG.did++;\n  };\n\n  // Method for element creation\n  SVG.create = function (name) {\n    // create element\n    var element = document.createElementNS(this.ns, name);\n\n    // apply unique id\n    element.setAttribute('id', this.eid(name));\n    return element;\n  };\n\n  // Method for extending objects\n  SVG.extend = function () {\n    var modules, methods, key, i;\n\n    // Get list of modules\n    modules = [].slice.call(arguments);\n\n    // Get object with extensions\n    methods = modules.pop();\n    for (i = modules.length - 1; i >= 0; i--) if (modules[i]) for (key in methods) modules[i].prototype[key] = methods[key];\n\n    // Make sure SVG.Set inherits any newly added methods\n    if (SVG.Set && SVG.Set.inherit) SVG.Set.inherit();\n  };\n\n  // Invent new element\n  SVG.invent = function (config) {\n    // Create element initializer\n    var initializer = typeof config.create == 'function' ? config.create : function () {\n      this.constructor.call(this, SVG.create(config.create));\n    };\n\n    // Inherit prototype\n    if (config.inherit) initializer.prototype = new config.inherit();\n\n    // Extend with methods\n    if (config.extend) SVG.extend(initializer, config.extend);\n\n    // Attach construct method to parent\n    if (config.construct) SVG.extend(config.parent || SVG.Container, config.construct);\n    return initializer;\n  };\n\n  // Adopt existing svg elements\n  SVG.adopt = function (node) {\n    // check for presence of node\n    if (!node) return null;\n\n    // make sure a node isn't already adopted\n    if (node.instance) return node.instance;\n\n    // initialize variables\n    var element;\n\n    // adopt with element-specific settings\n    if (node.nodeName == 'svg') element = node.parentNode instanceof window.SVGElement ? new SVG.Nested() : new SVG.Doc();else if (node.nodeName == 'linearGradient') element = new SVG.Gradient('linear');else if (node.nodeName == 'radialGradient') element = new SVG.Gradient('radial');else if (SVG[capitalize(node.nodeName)]) element = new SVG[capitalize(node.nodeName)]();else element = new SVG.Element(node);\n\n    // ensure references\n    element.type = node.nodeName;\n    element.node = node;\n    node.instance = element;\n\n    // SVG.Class specific preparations\n    if (element instanceof SVG.Doc) element.namespace().defs();\n\n    // pull svgjs data from the dom (getAttributeNS doesn't work in html5)\n    element.setData(JSON.parse(node.getAttribute('svgjs:data')) || {});\n    return element;\n  };\n\n  // Initialize parsing element\n  SVG.prepare = function () {\n    // Select document body and create invisible svg element\n    var body = document.getElementsByTagName('body')[0],\n      draw = (body ? new SVG.Doc(body) : SVG.adopt(document.documentElement).nested()).size(2, 0);\n\n    // Create parser object\n    SVG.parser = {\n      body: body || document.documentElement,\n      draw: draw.style('opacity:0;position:absolute;left:-100%;top:-100%;overflow:hidden').attr('focusable', 'false').node,\n      poly: draw.polyline().node,\n      path: draw.path().node,\n      native: SVG.create('svg')\n    };\n  };\n  SVG.parser = {\n    native: SVG.create('svg')\n  };\n  document.addEventListener('DOMContentLoaded', function () {\n    if (!SVG.parser.draw) SVG.prepare();\n  }, false);\n\n  // Storage for regular expressions\n  SVG.regex = {\n    // Parse unit value\n    numberAndUnit: /^([+-]?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?)([a-z%]*)$/i\n\n    // Parse hex value\n    ,\n    hex: /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i\n\n    // Parse rgb value\n    ,\n    rgb: /rgb\\((\\d+),(\\d+),(\\d+)\\)/\n\n    // Parse reference id\n    ,\n    reference: /#([a-z0-9\\-_]+)/i\n\n    // splits a transformation chain\n    ,\n    transforms: /\\)\\s*,?\\s*/\n\n    // Whitespace\n    ,\n    whitespace: /\\s/g\n\n    // Test hex value\n    ,\n    isHex: /^#[a-f0-9]{3,6}$/i\n\n    // Test rgb value\n    ,\n    isRgb: /^rgb\\(/\n\n    // Test css declaration\n    ,\n    isCss: /[^:]+:[^;]+;?/\n\n    // Test for blank string\n    ,\n    isBlank: /^(\\s+)?$/\n\n    // Test for numeric string\n    ,\n    isNumber: /^[+-]?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i\n\n    // Test for percent value\n    ,\n    isPercent: /^-?[\\d\\.]+%$/\n\n    // Test for image url\n    ,\n    isImage: /\\.(jpg|jpeg|png|gif|svg)(\\?[^=]+.*)?/i\n\n    // split at whitespace and comma\n    ,\n    delimiter: /[\\s,]+/\n\n    // The following regex are used to parse the d attribute of a path\n\n    // Matches all hyphens which are not after an exponent\n    ,\n    hyphen: /([^e])\\-/gi\n\n    // Replaces and tests for all path letters\n    ,\n    pathLetters: /[MLHVCSQTAZ]/gi\n\n    // yes we need this one, too\n    ,\n    isPathLetter: /[MLHVCSQTAZ]/i\n\n    // matches 0.154.23.45\n    ,\n    numbersWithDots: /((\\d?\\.\\d+(?:e[+-]?\\d+)?)((?:\\.\\d+(?:e[+-]?\\d+)?)+))+/gi\n\n    // matches .\n    ,\n    dots: /\\./g\n  };\n  SVG.utils = {\n    // Map function\n    map: function (array, block) {\n      var i,\n        il = array.length,\n        result = [];\n      for (i = 0; i < il; i++) result.push(block(array[i]));\n      return result;\n    }\n\n    // Filter function\n    ,\n    filter: function (array, block) {\n      var i,\n        il = array.length,\n        result = [];\n      for (i = 0; i < il; i++) if (block(array[i])) result.push(array[i]);\n      return result;\n    }\n\n    // Degrees to radians\n    ,\n    radians: function (d) {\n      return d % 360 * Math.PI / 180;\n    }\n\n    // Radians to degrees\n    ,\n    degrees: function (r) {\n      return r * 180 / Math.PI % 360;\n    },\n    filterSVGElements: function (nodes) {\n      return this.filter(nodes, function (el) {\n        return el instanceof window.SVGElement;\n      });\n    }\n  };\n  SVG.defaults = {\n    // Default attribute values\n    attrs: {\n      // fill and stroke\n      'fill-opacity': 1,\n      'stroke-opacity': 1,\n      'stroke-width': 0,\n      'stroke-linejoin': 'miter',\n      'stroke-linecap': 'butt',\n      fill: '#000000',\n      stroke: '#000000',\n      opacity: 1\n      // position\n      ,\n      x: 0,\n      y: 0,\n      cx: 0,\n      cy: 0\n      // size\n      ,\n      width: 0,\n      height: 0\n      // radius\n      ,\n      r: 0,\n      rx: 0,\n      ry: 0\n      // gradient\n      ,\n      offset: 0,\n      'stop-opacity': 1,\n      'stop-color': '#000000'\n      // text\n      ,\n      'font-size': 16,\n      'font-family': 'Helvetica, Arial, sans-serif',\n      'text-anchor': 'start'\n    }\n  };\n  // Module for color convertions\n  SVG.Color = function (color) {\n    var match;\n\n    // initialize defaults\n    this.r = 0;\n    this.g = 0;\n    this.b = 0;\n    if (!color) return;\n\n    // parse color\n    if (typeof color === 'string') {\n      if (SVG.regex.isRgb.test(color)) {\n        // get rgb values\n        match = SVG.regex.rgb.exec(color.replace(SVG.regex.whitespace, ''));\n\n        // parse numeric values\n        this.r = parseInt(match[1]);\n        this.g = parseInt(match[2]);\n        this.b = parseInt(match[3]);\n      } else if (SVG.regex.isHex.test(color)) {\n        // get hex values\n        match = SVG.regex.hex.exec(fullHex(color));\n\n        // parse numeric values\n        this.r = parseInt(match[1], 16);\n        this.g = parseInt(match[2], 16);\n        this.b = parseInt(match[3], 16);\n      }\n    } else if (typeof color === 'object') {\n      this.r = color.r;\n      this.g = color.g;\n      this.b = color.b;\n    }\n  };\n  SVG.extend(SVG.Color, {\n    // Default to hex conversion\n    toString: function () {\n      return this.toHex();\n    }\n    // Build hex value\n    ,\n    toHex: function () {\n      return '#' + compToHex(this.r) + compToHex(this.g) + compToHex(this.b);\n    }\n    // Build rgb value\n    ,\n    toRgb: function () {\n      return 'rgb(' + [this.r, this.g, this.b].join() + ')';\n    }\n    // Calculate true brightness\n    ,\n    brightness: function () {\n      return this.r / 255 * 0.30 + this.g / 255 * 0.59 + this.b / 255 * 0.11;\n    }\n    // Make color morphable\n    ,\n    morph: function (color) {\n      this.destination = new SVG.Color(color);\n      return this;\n    }\n    // Get morphed color at given position\n    ,\n    at: function (pos) {\n      // make sure a destination is defined\n      if (!this.destination) return this;\n\n      // normalise pos\n      pos = pos < 0 ? 0 : pos > 1 ? 1 : pos;\n\n      // generate morphed color\n      return new SVG.Color({\n        r: ~~(this.r + (this.destination.r - this.r) * pos),\n        g: ~~(this.g + (this.destination.g - this.g) * pos),\n        b: ~~(this.b + (this.destination.b - this.b) * pos)\n      });\n    }\n  });\n\n  // Testers\n\n  // Test if given value is a color string\n  SVG.Color.test = function (color) {\n    color += '';\n    return SVG.regex.isHex.test(color) || SVG.regex.isRgb.test(color);\n  };\n\n  // Test if given value is a rgb object\n  SVG.Color.isRgb = function (color) {\n    return color && typeof color.r == 'number' && typeof color.g == 'number' && typeof color.b == 'number';\n  };\n\n  // Test if given value is a color\n  SVG.Color.isColor = function (color) {\n    return SVG.Color.isRgb(color) || SVG.Color.test(color);\n  };\n  // Module for array conversion\n  SVG.Array = function (array, fallback) {\n    array = (array || []).valueOf();\n\n    // if array is empty and fallback is provided, use fallback\n    if (array.length == 0 && fallback) array = fallback.valueOf();\n\n    // parse array\n    this.value = this.parse(array);\n  };\n  SVG.extend(SVG.Array, {\n    // Make array morphable\n    morph: function (array) {\n      this.destination = this.parse(array);\n\n      // normalize length of arrays\n      if (this.value.length != this.destination.length) {\n        var lastValue = this.value[this.value.length - 1],\n          lastDestination = this.destination[this.destination.length - 1];\n        while (this.value.length > this.destination.length) this.destination.push(lastDestination);\n        while (this.value.length < this.destination.length) this.value.push(lastValue);\n      }\n      return this;\n    }\n    // Clean up any duplicate points\n    ,\n    settle: function () {\n      // find all unique values\n      for (var i = 0, il = this.value.length, seen = []; i < il; i++) if (seen.indexOf(this.value[i]) == -1) seen.push(this.value[i]);\n\n      // set new value\n      return this.value = seen;\n    }\n    // Get morphed array at given position\n    ,\n    at: function (pos) {\n      // make sure a destination is defined\n      if (!this.destination) return this;\n\n      // generate morphed array\n      for (var i = 0, il = this.value.length, array = []; i < il; i++) array.push(this.value[i] + (this.destination[i] - this.value[i]) * pos);\n      return new SVG.Array(array);\n    }\n    // Convert array to string\n    ,\n    toString: function () {\n      return this.value.join(' ');\n    }\n    // Real value\n    ,\n    valueOf: function () {\n      return this.value;\n    }\n    // Parse whitespace separated string\n    ,\n    parse: function (array) {\n      array = array.valueOf();\n\n      // if already is an array, no need to parse it\n      if (Array.isArray(array)) return array;\n      return this.split(array);\n    }\n    // Strip unnecessary whitespace\n    ,\n    split: function (string) {\n      return string.trim().split(SVG.regex.delimiter).map(parseFloat);\n    }\n    // Reverse array\n    ,\n    reverse: function () {\n      this.value.reverse();\n      return this;\n    },\n    clone: function () {\n      var clone = new this.constructor();\n      clone.value = array_clone(this.value);\n      return clone;\n    }\n  });\n  // Poly points array\n  SVG.PointArray = function (array, fallback) {\n    SVG.Array.call(this, array, fallback || [[0, 0]]);\n  };\n\n  // Inherit from SVG.Array\n  SVG.PointArray.prototype = new SVG.Array();\n  SVG.PointArray.prototype.constructor = SVG.PointArray;\n  SVG.extend(SVG.PointArray, {\n    // Convert array to string\n    toString: function () {\n      // convert to a poly point string\n      for (var i = 0, il = this.value.length, array = []; i < il; i++) array.push(this.value[i].join(','));\n      return array.join(' ');\n    }\n    // Convert array to line object\n    ,\n    toLine: function () {\n      return {\n        x1: this.value[0][0],\n        y1: this.value[0][1],\n        x2: this.value[1][0],\n        y2: this.value[1][1]\n      };\n    }\n    // Get morphed array at given position\n    ,\n    at: function (pos) {\n      // make sure a destination is defined\n      if (!this.destination) return this;\n\n      // generate morphed point string\n      for (var i = 0, il = this.value.length, array = []; i < il; i++) array.push([this.value[i][0] + (this.destination[i][0] - this.value[i][0]) * pos, this.value[i][1] + (this.destination[i][1] - this.value[i][1]) * pos]);\n      return new SVG.PointArray(array);\n    }\n    // Parse point string and flat array\n    ,\n    parse: function (array) {\n      var points = [];\n      array = array.valueOf();\n\n      // if it is an array\n      if (Array.isArray(array)) {\n        // and it is not flat, there is no need to parse it\n        if (Array.isArray(array[0])) {\n          // make sure to use a clone\n          return array.map(function (el) {\n            return el.slice();\n          });\n        } else if (array[0].x != null) {\n          // allow point objects to be passed\n          return array.map(function (el) {\n            return [el.x, el.y];\n          });\n        }\n      } else {\n        // Else, it is considered as a string\n        // parse points\n        array = array.trim().split(SVG.regex.delimiter).map(parseFloat);\n      }\n\n      // validate points - https://svgwg.org/svg2-draft/shapes.html#DataTypePoints\n      // Odd number of coordinates is an error. In such cases, drop the last odd coordinate.\n      if (array.length % 2 !== 0) array.pop();\n\n      // wrap points in two-tuples and parse points as floats\n      for (var i = 0, len = array.length; i < len; i = i + 2) points.push([array[i], array[i + 1]]);\n      return points;\n    }\n    // Move point string\n    ,\n    move: function (x, y) {\n      var box = this.bbox();\n\n      // get relative offset\n      x -= box.x;\n      y -= box.y;\n\n      // move every point\n      if (!isNaN(x) && !isNaN(y)) for (var i = this.value.length - 1; i >= 0; i--) this.value[i] = [this.value[i][0] + x, this.value[i][1] + y];\n      return this;\n    }\n    // Resize poly string\n    ,\n    size: function (width, height) {\n      var i,\n        box = this.bbox();\n\n      // recalculate position of all points according to new size\n      for (i = this.value.length - 1; i >= 0; i--) {\n        if (box.width) this.value[i][0] = (this.value[i][0] - box.x) * width / box.width + box.x;\n        if (box.height) this.value[i][1] = (this.value[i][1] - box.y) * height / box.height + box.y;\n      }\n      return this;\n    }\n    // Get bounding box of points\n    ,\n    bbox: function () {\n      SVG.parser.poly.setAttribute('points', this.toString());\n      return SVG.parser.poly.getBBox();\n    }\n  });\n  var pathHandlers = {\n    M: function (c, p, p0) {\n      p.x = p0.x = c[0];\n      p.y = p0.y = c[1];\n      return ['M', p.x, p.y];\n    },\n    L: function (c, p) {\n      p.x = c[0];\n      p.y = c[1];\n      return ['L', c[0], c[1]];\n    },\n    H: function (c, p) {\n      p.x = c[0];\n      return ['H', c[0]];\n    },\n    V: function (c, p) {\n      p.y = c[0];\n      return ['V', c[0]];\n    },\n    C: function (c, p) {\n      p.x = c[4];\n      p.y = c[5];\n      return ['C', c[0], c[1], c[2], c[3], c[4], c[5]];\n    },\n    S: function (c, p) {\n      p.x = c[2];\n      p.y = c[3];\n      return ['S', c[0], c[1], c[2], c[3]];\n    },\n    Q: function (c, p) {\n      p.x = c[2];\n      p.y = c[3];\n      return ['Q', c[0], c[1], c[2], c[3]];\n    },\n    T: function (c, p) {\n      p.x = c[0];\n      p.y = c[1];\n      return ['T', c[0], c[1]];\n    },\n    Z: function (c, p, p0) {\n      p.x = p0.x;\n      p.y = p0.y;\n      return ['Z'];\n    },\n    A: function (c, p) {\n      p.x = c[5];\n      p.y = c[6];\n      return ['A', c[0], c[1], c[2], c[3], c[4], c[5], c[6]];\n    }\n  };\n  var mlhvqtcsa = 'mlhvqtcsaz'.split('');\n  for (var i = 0, il = mlhvqtcsa.length; i < il; ++i) {\n    pathHandlers[mlhvqtcsa[i]] = function (i) {\n      return function (c, p, p0) {\n        if (i == 'H') c[0] = c[0] + p.x;else if (i == 'V') c[0] = c[0] + p.y;else if (i == 'A') {\n          c[5] = c[5] + p.x, c[6] = c[6] + p.y;\n        } else for (var j = 0, jl = c.length; j < jl; ++j) {\n          c[j] = c[j] + (j % 2 ? p.y : p.x);\n        }\n        return pathHandlers[i](c, p, p0);\n      };\n    }(mlhvqtcsa[i].toUpperCase());\n  }\n\n  // Path points array\n  SVG.PathArray = function (array, fallback) {\n    SVG.Array.call(this, array, fallback || [['M', 0, 0]]);\n  };\n\n  // Inherit from SVG.Array\n  SVG.PathArray.prototype = new SVG.Array();\n  SVG.PathArray.prototype.constructor = SVG.PathArray;\n  SVG.extend(SVG.PathArray, {\n    // Convert array to string\n    toString: function () {\n      return arrayToString(this.value);\n    }\n    // Move path string\n    ,\n    move: function (x, y) {\n      // get bounding box of current situation\n      var box = this.bbox();\n\n      // get relative offset\n      x -= box.x;\n      y -= box.y;\n      if (!isNaN(x) && !isNaN(y)) {\n        // move every point\n        for (var l, i = this.value.length - 1; i >= 0; i--) {\n          l = this.value[i][0];\n          if (l == 'M' || l == 'L' || l == 'T') {\n            this.value[i][1] += x;\n            this.value[i][2] += y;\n          } else if (l == 'H') {\n            this.value[i][1] += x;\n          } else if (l == 'V') {\n            this.value[i][1] += y;\n          } else if (l == 'C' || l == 'S' || l == 'Q') {\n            this.value[i][1] += x;\n            this.value[i][2] += y;\n            this.value[i][3] += x;\n            this.value[i][4] += y;\n            if (l == 'C') {\n              this.value[i][5] += x;\n              this.value[i][6] += y;\n            }\n          } else if (l == 'A') {\n            this.value[i][6] += x;\n            this.value[i][7] += y;\n          }\n        }\n      }\n      return this;\n    }\n    // Resize path string\n    ,\n    size: function (width, height) {\n      // get bounding box of current situation\n      var i,\n        l,\n        box = this.bbox();\n\n      // recalculate position of all points according to new size\n      for (i = this.value.length - 1; i >= 0; i--) {\n        l = this.value[i][0];\n        if (l == 'M' || l == 'L' || l == 'T') {\n          this.value[i][1] = (this.value[i][1] - box.x) * width / box.width + box.x;\n          this.value[i][2] = (this.value[i][2] - box.y) * height / box.height + box.y;\n        } else if (l == 'H') {\n          this.value[i][1] = (this.value[i][1] - box.x) * width / box.width + box.x;\n        } else if (l == 'V') {\n          this.value[i][1] = (this.value[i][1] - box.y) * height / box.height + box.y;\n        } else if (l == 'C' || l == 'S' || l == 'Q') {\n          this.value[i][1] = (this.value[i][1] - box.x) * width / box.width + box.x;\n          this.value[i][2] = (this.value[i][2] - box.y) * height / box.height + box.y;\n          this.value[i][3] = (this.value[i][3] - box.x) * width / box.width + box.x;\n          this.value[i][4] = (this.value[i][4] - box.y) * height / box.height + box.y;\n          if (l == 'C') {\n            this.value[i][5] = (this.value[i][5] - box.x) * width / box.width + box.x;\n            this.value[i][6] = (this.value[i][6] - box.y) * height / box.height + box.y;\n          }\n        } else if (l == 'A') {\n          // resize radii\n          this.value[i][1] = this.value[i][1] * width / box.width;\n          this.value[i][2] = this.value[i][2] * height / box.height;\n\n          // move position values\n          this.value[i][6] = (this.value[i][6] - box.x) * width / box.width + box.x;\n          this.value[i][7] = (this.value[i][7] - box.y) * height / box.height + box.y;\n        }\n      }\n      return this;\n    }\n    // Test if the passed path array use the same path data commands as this path array\n    ,\n    equalCommands: function (pathArray) {\n      var i, il, equalCommands;\n      pathArray = new SVG.PathArray(pathArray);\n      equalCommands = this.value.length === pathArray.value.length;\n      for (i = 0, il = this.value.length; equalCommands && i < il; i++) {\n        equalCommands = this.value[i][0] === pathArray.value[i][0];\n      }\n      return equalCommands;\n    }\n    // Make path array morphable\n    ,\n    morph: function (pathArray) {\n      pathArray = new SVG.PathArray(pathArray);\n      if (this.equalCommands(pathArray)) {\n        this.destination = pathArray;\n      } else {\n        this.destination = null;\n      }\n      return this;\n    }\n    // Get morphed path array at given position\n    ,\n    at: function (pos) {\n      // make sure a destination is defined\n      if (!this.destination) return this;\n      var sourceArray = this.value,\n        destinationArray = this.destination.value,\n        array = [],\n        pathArray = new SVG.PathArray(),\n        i,\n        il,\n        j,\n        jl;\n\n      // Animate has specified in the SVG spec\n      // See: https://www.w3.org/TR/SVG11/paths.html#PathElement\n      for (i = 0, il = sourceArray.length; i < il; i++) {\n        array[i] = [sourceArray[i][0]];\n        for (j = 1, jl = sourceArray[i].length; j < jl; j++) {\n          array[i][j] = sourceArray[i][j] + (destinationArray[i][j] - sourceArray[i][j]) * pos;\n        }\n        // For the two flags of the elliptical arc command, the SVG spec say:\n        // Flags and booleans are interpolated as fractions between zero and one, with any non-zero value considered to be a value of one/true\n        // Elliptical arc command as an array followed by corresponding indexes:\n        // ['A', rx, ry, x-axis-rotation, large-arc-flag, sweep-flag, x, y]\n        //   0    1   2        3                 4             5      6  7\n        if (array[i][0] === 'A') {\n          array[i][4] = +(array[i][4] != 0);\n          array[i][5] = +(array[i][5] != 0);\n        }\n      }\n\n      // Directly modify the value of a path array, this is done this way for performance\n      pathArray.value = array;\n      return pathArray;\n    }\n    // Absolutize and parse path to array\n    ,\n    parse: function (array) {\n      // if it's already a patharray, no need to parse it\n      if (array instanceof SVG.PathArray) return array.valueOf();\n\n      // prepare for parsing\n      var i,\n        x0,\n        y0,\n        s,\n        seg,\n        arr,\n        x = 0,\n        y = 0,\n        paramCnt = {\n          'M': 2,\n          'L': 2,\n          'H': 1,\n          'V': 1,\n          'C': 6,\n          'S': 4,\n          'Q': 4,\n          'T': 2,\n          'A': 7,\n          'Z': 0\n        };\n      if (typeof array == 'string') {\n        array = array.replace(SVG.regex.numbersWithDots, pathRegReplace) // convert 45.123.123 to 45.123 .123\n        .replace(SVG.regex.pathLetters, ' $& ') // put some room between letters and numbers\n        .replace(SVG.regex.hyphen, '$1 -') // add space before hyphen\n        .trim() // trim\n        .split(SVG.regex.delimiter); // split into array\n      } else {\n        array = array.reduce(function (prev, curr) {\n          return [].concat.call(prev, curr);\n        }, []);\n      }\n\n      // array now is an array containing all parts of a path e.g. ['M', '0', '0', 'L', '30', '30' ...]\n      var arr = [],\n        p = new SVG.Point(),\n        p0 = new SVG.Point(),\n        index = 0,\n        len = array.length;\n      do {\n        // Test if we have a path letter\n        if (SVG.regex.isPathLetter.test(array[index])) {\n          s = array[index];\n          ++index;\n          // If last letter was a move command and we got no new, it defaults to [L]ine\n        } else if (s == 'M') {\n          s = 'L';\n        } else if (s == 'm') {\n          s = 'l';\n        }\n        arr.push(pathHandlers[s].call(null, array.slice(index, index = index + paramCnt[s.toUpperCase()]).map(parseFloat), p, p0));\n      } while (len > index);\n      return arr;\n    }\n    // Get bounding box of path\n    ,\n    bbox: function () {\n      SVG.parser.path.setAttribute('d', this.toString());\n      return SVG.parser.path.getBBox();\n    }\n  });\n\n  // Module for unit convertions\n  SVG.Number = SVG.invent({\n    // Initialize\n    create: function (value, unit) {\n      // initialize defaults\n      this.value = 0;\n      this.unit = unit || '';\n\n      // parse value\n      if (typeof value === 'number') {\n        // ensure a valid numeric value\n        this.value = isNaN(value) ? 0 : !isFinite(value) ? value < 0 ? -3.4e+38 : +3.4e+38 : value;\n      } else if (typeof value === 'string') {\n        unit = value.match(SVG.regex.numberAndUnit);\n        if (unit) {\n          // make value numeric\n          this.value = parseFloat(unit[1]);\n\n          // normalize\n          if (unit[5] == '%') this.value /= 100;else if (unit[5] == 's') this.value *= 1000;\n\n          // store unit\n          this.unit = unit[5];\n        }\n      } else {\n        if (value instanceof SVG.Number) {\n          this.value = value.valueOf();\n          this.unit = value.unit;\n        }\n      }\n    }\n    // Add methods\n    ,\n    extend: {\n      // Stringalize\n      toString: function () {\n        return (this.unit == '%' ? ~~(this.value * 1e8) / 1e6 : this.unit == 's' ? this.value / 1e3 : this.value) + this.unit;\n      },\n      toJSON: function () {\n        return this.toString();\n      },\n      // Convert to primitive\n      valueOf: function () {\n        return this.value;\n      }\n      // Add number\n      ,\n      plus: function (number) {\n        number = new SVG.Number(number);\n        return new SVG.Number(this + number, this.unit || number.unit);\n      }\n      // Subtract number\n      ,\n      minus: function (number) {\n        number = new SVG.Number(number);\n        return new SVG.Number(this - number, this.unit || number.unit);\n      }\n      // Multiply number\n      ,\n      times: function (number) {\n        number = new SVG.Number(number);\n        return new SVG.Number(this * number, this.unit || number.unit);\n      }\n      // Divide number\n      ,\n      divide: function (number) {\n        number = new SVG.Number(number);\n        return new SVG.Number(this / number, this.unit || number.unit);\n      }\n      // Convert to different unit\n      ,\n      to: function (unit) {\n        var number = new SVG.Number(this);\n        if (typeof unit === 'string') number.unit = unit;\n        return number;\n      }\n      // Make number morphable\n      ,\n      morph: function (number) {\n        this.destination = new SVG.Number(number);\n        if (number.relative) {\n          this.destination.value += this.value;\n        }\n        return this;\n      }\n      // Get morphed number at given position\n      ,\n      at: function (pos) {\n        // Make sure a destination is defined\n        if (!this.destination) return this;\n\n        // Generate new morphed number\n        return new SVG.Number(this.destination).minus(this).times(pos).plus(this);\n      }\n    }\n  });\n  SVG.Element = SVG.invent({\n    // Initialize node\n    create: function (node) {\n      // make stroke value accessible dynamically\n      this._stroke = SVG.defaults.attrs.stroke;\n      this._event = null;\n      this._events = {};\n\n      // initialize data object\n      this.dom = {};\n\n      // create circular reference\n      if (this.node = node) {\n        this.type = node.nodeName;\n        this.node.instance = this;\n        this._events = node._events || {};\n\n        // store current attribute value\n        this._stroke = node.getAttribute('stroke') || this._stroke;\n      }\n    }\n\n    // Add class methods\n    ,\n    extend: {\n      // Move over x-axis\n      x: function (x) {\n        return this.attr('x', x);\n      }\n      // Move over y-axis\n      ,\n      y: function (y) {\n        return this.attr('y', y);\n      }\n      // Move by center over x-axis\n      ,\n      cx: function (x) {\n        return x == null ? this.x() + this.width() / 2 : this.x(x - this.width() / 2);\n      }\n      // Move by center over y-axis\n      ,\n      cy: function (y) {\n        return y == null ? this.y() + this.height() / 2 : this.y(y - this.height() / 2);\n      }\n      // Move element to given x and y values\n      ,\n      move: function (x, y) {\n        return this.x(x).y(y);\n      }\n      // Move element by its center\n      ,\n      center: function (x, y) {\n        return this.cx(x).cy(y);\n      }\n      // Set width of element\n      ,\n      width: function (width) {\n        return this.attr('width', width);\n      }\n      // Set height of element\n      ,\n      height: function (height) {\n        return this.attr('height', height);\n      }\n      // Set element size to given width and height\n      ,\n      size: function (width, height) {\n        var p = proportionalSize(this, width, height);\n        return this.width(new SVG.Number(p.width)).height(new SVG.Number(p.height));\n      }\n      // Clone element\n      ,\n      clone: function (parent) {\n        // write dom data to the dom so the clone can pickup the data\n        this.writeDataToDom();\n\n        // clone element and assign new id\n        var clone = assignNewId(this.node.cloneNode(true));\n\n        // insert the clone in the given parent or after myself\n        if (parent) parent.add(clone);else this.after(clone);\n        return clone;\n      }\n      // Remove element\n      ,\n      remove: function () {\n        if (this.parent()) this.parent().removeElement(this);\n        return this;\n      }\n      // Replace element\n      ,\n      replace: function (element) {\n        this.after(element).remove();\n        return element;\n      }\n      // Add element to given container and return self\n      ,\n      addTo: function (parent) {\n        return parent.put(this);\n      }\n      // Add element to given container and return container\n      ,\n      putIn: function (parent) {\n        return parent.add(this);\n      }\n      // Get / set id\n      ,\n      id: function (id) {\n        return this.attr('id', id);\n      }\n      // Checks whether the given point inside the bounding box of the element\n      ,\n      inside: function (x, y) {\n        var box = this.bbox();\n        return x > box.x && y > box.y && x < box.x + box.width && y < box.y + box.height;\n      }\n      // Show element\n      ,\n      show: function () {\n        return this.style('display', '');\n      }\n      // Hide element\n      ,\n      hide: function () {\n        return this.style('display', 'none');\n      }\n      // Is element visible?\n      ,\n      visible: function () {\n        return this.style('display') != 'none';\n      }\n      // Return id on string conversion\n      ,\n      toString: function () {\n        return this.attr('id');\n      }\n      // Return array of classes on the node\n      ,\n      classes: function () {\n        var attr = this.attr('class');\n        return attr == null ? [] : attr.trim().split(SVG.regex.delimiter);\n      }\n      // Return true if class exists on the node, false otherwise\n      ,\n      hasClass: function (name) {\n        return this.classes().indexOf(name) != -1;\n      }\n      // Add class to the node\n      ,\n      addClass: function (name) {\n        if (!this.hasClass(name)) {\n          var array = this.classes();\n          array.push(name);\n          this.attr('class', array.join(' '));\n        }\n        return this;\n      }\n      // Remove class from the node\n      ,\n      removeClass: function (name) {\n        if (this.hasClass(name)) {\n          this.attr('class', this.classes().filter(function (c) {\n            return c != name;\n          }).join(' '));\n        }\n        return this;\n      }\n      // Toggle the presence of a class on the node\n      ,\n      toggleClass: function (name) {\n        return this.hasClass(name) ? this.removeClass(name) : this.addClass(name);\n      }\n      // Get referenced element form attribute value\n      ,\n      reference: function (attr) {\n        return SVG.get(this.attr(attr));\n      }\n      // Returns the parent element instance\n      ,\n      parent: function (type) {\n        var parent = this;\n\n        // check for parent\n        if (!parent.node.parentNode) return null;\n\n        // get parent element\n        parent = SVG.adopt(parent.node.parentNode);\n        if (!type) return parent;\n\n        // loop trough ancestors if type is given\n        while (parent && parent.node instanceof window.SVGElement) {\n          if (typeof type === 'string' ? parent.matches(type) : parent instanceof type) return parent;\n          if (!parent.node.parentNode || parent.node.parentNode.nodeName == '#document' || parent.node.parentNode.nodeName == '#document-fragment') return null; // #759, #720\n          parent = SVG.adopt(parent.node.parentNode);\n        }\n      }\n      // Get parent document\n      ,\n      doc: function () {\n        return this instanceof SVG.Doc ? this : this.parent(SVG.Doc);\n      }\n      // return array of all ancestors of given type up to the root svg\n      ,\n      parents: function (type) {\n        var parents = [],\n          parent = this;\n        do {\n          parent = parent.parent(type);\n          if (!parent || !parent.node) break;\n          parents.push(parent);\n        } while (parent.parent);\n        return parents;\n      }\n      // matches the element vs a css selector\n      ,\n      matches: function (selector) {\n        return matches(this.node, selector);\n      }\n      // Returns the svg node to call native svg methods on it\n      ,\n      native: function () {\n        return this.node;\n      }\n      // Import raw svg\n      ,\n      svg: function (svg) {\n        // create temporary holder\n        var well = document.createElement('svg');\n\n        // act as a setter if svg is given\n        if (svg && this instanceof SVG.Parent) {\n          // dump raw svg\n          well.innerHTML = '<svg>' + svg.replace(/\\n/, '').replace(/<([\\w:-]+)([^<]+?)\\/>/g, '<$1$2></$1>') + '</svg>';\n\n          // transplant nodes\n          for (var i = 0, il = well.firstChild.childNodes.length; i < il; i++) this.node.appendChild(well.firstChild.firstChild);\n\n          // otherwise act as a getter\n        } else {\n          // create a wrapping svg element in case of partial content\n          well.appendChild(svg = document.createElement('svg'));\n\n          // write svgjs data to the dom\n          this.writeDataToDom();\n\n          // insert a copy of this node\n          svg.appendChild(this.node.cloneNode(true));\n\n          // return target element\n          return well.innerHTML.replace(/^<svg>/, '').replace(/<\\/svg>$/, '');\n        }\n        return this;\n      }\n      // write svgjs data to the dom\n      ,\n      writeDataToDom: function () {\n        // dump variables recursively\n        if (this.each || this.lines) {\n          var fn = this.each ? this : this.lines();\n          fn.each(function () {\n            this.writeDataToDom();\n          });\n        }\n\n        // remove previously set data\n        this.node.removeAttribute('svgjs:data');\n        if (Object.keys(this.dom).length) this.node.setAttribute('svgjs:data', JSON.stringify(this.dom)); // see #428\n\n        return this;\n      }\n      // set given data to the elements data property\n      ,\n      setData: function (o) {\n        this.dom = o;\n        return this;\n      },\n      is: function (obj) {\n        return is(this, obj);\n      }\n    }\n  });\n  SVG.easing = {\n    '-': function (pos) {\n      return pos;\n    },\n    '<>': function (pos) {\n      return -Math.cos(pos * Math.PI) / 2 + 0.5;\n    },\n    '>': function (pos) {\n      return Math.sin(pos * Math.PI / 2);\n    },\n    '<': function (pos) {\n      return -Math.cos(pos * Math.PI / 2) + 1;\n    }\n  };\n  SVG.morph = function (pos) {\n    return function (from, to) {\n      return new SVG.MorphObj(from, to).at(pos);\n    };\n  };\n  SVG.Situation = SVG.invent({\n    create: function (o) {\n      this.init = false;\n      this.reversed = false;\n      this.reversing = false;\n      this.duration = new SVG.Number(o.duration).valueOf();\n      this.delay = new SVG.Number(o.delay).valueOf();\n      this.start = +new Date() + this.delay;\n      this.finish = this.start + this.duration;\n      this.ease = o.ease;\n\n      // this.loop is incremented from 0 to this.loops\n      // it is also incremented when in an infinite loop (when this.loops is true)\n      this.loop = 0;\n      this.loops = false;\n      this.animations = {\n        // functionToCall: [list of morphable objects]\n        // e.g. move: [SVG.Number, SVG.Number]\n      };\n      this.attrs = {\n        // holds all attributes which are not represented from a function svg.js provides\n        // e.g. someAttr: SVG.Number\n      };\n      this.styles = {\n        // holds all styles which should be animated\n        // e.g. fill-color: SVG.Color\n      };\n      this.transforms = [\n        // holds all transformations as transformation objects\n        // e.g. [SVG.Rotate, SVG.Translate, SVG.Matrix]\n      ];\n      this.once = {\n        // functions to fire at a specific position\n        // e.g. \"0.5\": function foo(){}\n      };\n    }\n  });\n  SVG.FX = SVG.invent({\n    create: function (element) {\n      this._target = element;\n      this.situations = [];\n      this.active = false;\n      this.situation = null;\n      this.paused = false;\n      this.lastPos = 0;\n      this.pos = 0;\n      // The absolute position of an animation is its position in the context of its complete duration (including delay and loops)\n      // When performing a delay, absPos is below 0 and when performing a loop, its value is above 1\n      this.absPos = 0;\n      this._speed = 1;\n    },\n    extend: {\n      /**\r\n       * sets or returns the target of this animation\r\n       * @param o object || number In case of Object it holds all parameters. In case of number its the duration of the animation\r\n       * @param ease function || string Function which should be used for easing or easing keyword\r\n       * @param delay Number indicating the delay before the animation starts\r\n       * @return target || this\r\n       */\n      animate: function (o, ease, delay) {\n        if (typeof o == 'object') {\n          ease = o.ease;\n          delay = o.delay;\n          o = o.duration;\n        }\n        var situation = new SVG.Situation({\n          duration: o || 1000,\n          delay: delay || 0,\n          ease: SVG.easing[ease || '-'] || ease\n        });\n        this.queue(situation);\n        return this;\n      }\n\n      /**\r\n       * sets a delay before the next element of the queue is called\r\n       * @param delay Duration of delay in milliseconds\r\n       * @return this.target()\r\n       */,\n      delay: function (delay) {\n        // The delay is performed by an empty situation with its duration\n        // attribute set to the duration of the delay\n        var situation = new SVG.Situation({\n          duration: delay,\n          delay: 0,\n          ease: SVG.easing['-']\n        });\n        return this.queue(situation);\n      }\n\n      /**\r\n       * sets or returns the target of this animation\r\n       * @param null || target SVG.Element which should be set as new target\r\n       * @return target || this\r\n       */,\n      target: function (target) {\n        if (target && target instanceof SVG.Element) {\n          this._target = target;\n          return this;\n        }\n        return this._target;\n      }\n\n      // returns the absolute position at a given time\n      ,\n      timeToAbsPos: function (timestamp) {\n        return (timestamp - this.situation.start) / (this.situation.duration / this._speed);\n      }\n\n      // returns the timestamp from a given absolute positon\n      ,\n      absPosToTime: function (absPos) {\n        return this.situation.duration / this._speed * absPos + this.situation.start;\n      }\n\n      // starts the animationloop\n      ,\n      startAnimFrame: function () {\n        this.stopAnimFrame();\n        this.animationFrame = window.requestAnimationFrame(function () {\n          this.step();\n        }.bind(this));\n      }\n\n      // cancels the animationframe\n      ,\n      stopAnimFrame: function () {\n        window.cancelAnimationFrame(this.animationFrame);\n      }\n\n      // kicks off the animation - only does something when the queue is currently not active and at least one situation is set\n      ,\n      start: function () {\n        // dont start if already started\n        if (!this.active && this.situation) {\n          this.active = true;\n          this.startCurrent();\n        }\n        return this;\n      }\n\n      // start the current situation\n      ,\n      startCurrent: function () {\n        this.situation.start = +new Date() + this.situation.delay / this._speed;\n        this.situation.finish = this.situation.start + this.situation.duration / this._speed;\n        return this.initAnimations().step();\n      }\n\n      /**\r\n       * adds a function / Situation to the animation queue\r\n       * @param fn function / situation to add\r\n       * @return this\r\n       */,\n      queue: function (fn) {\n        if (typeof fn == 'function' || fn instanceof SVG.Situation) this.situations.push(fn);\n        if (!this.situation) this.situation = this.situations.shift();\n        return this;\n      }\n\n      /**\r\n       * pulls next element from the queue and execute it\r\n       * @return this\r\n       */,\n      dequeue: function () {\n        // stop current animation\n        this.stop();\n\n        // get next animation from queue\n        this.situation = this.situations.shift();\n        if (this.situation) {\n          if (this.situation instanceof SVG.Situation) {\n            this.start();\n          } else {\n            // If it is not a SVG.Situation, then it is a function, we execute it\n            this.situation.call(this);\n          }\n        }\n        return this;\n      }\n\n      // updates all animations to the current state of the element\n      // this is important when one property could be changed from another property\n      ,\n      initAnimations: function () {\n        var i, j, source;\n        var s = this.situation;\n        if (s.init) return this;\n        for (i in s.animations) {\n          source = this.target()[i]();\n          if (!Array.isArray(source)) {\n            source = [source];\n          }\n          if (!Array.isArray(s.animations[i])) {\n            s.animations[i] = [s.animations[i]];\n          }\n\n          //if(s.animations[i].length > source.length) {\n          //  source.concat = source.concat(s.animations[i].slice(source.length, s.animations[i].length))\n          //}\n\n          for (j = source.length; j--;) {\n            // The condition is because some methods return a normal number instead\n            // of a SVG.Number\n            if (s.animations[i][j] instanceof SVG.Number) source[j] = new SVG.Number(source[j]);\n            s.animations[i][j] = source[j].morph(s.animations[i][j]);\n          }\n        }\n        for (i in s.attrs) {\n          s.attrs[i] = new SVG.MorphObj(this.target().attr(i), s.attrs[i]);\n        }\n        for (i in s.styles) {\n          s.styles[i] = new SVG.MorphObj(this.target().style(i), s.styles[i]);\n        }\n        s.initialTransformation = this.target().matrixify();\n        s.init = true;\n        return this;\n      },\n      clearQueue: function () {\n        this.situations = [];\n        return this;\n      },\n      clearCurrent: function () {\n        this.situation = null;\n        return this;\n      }\n      /** stops the animation immediately\r\n       * @param jumpToEnd A Boolean indicating whether to complete the current animation immediately.\r\n       * @param clearQueue A Boolean indicating whether to remove queued animation as well.\r\n       * @return this\r\n       */,\n      stop: function (jumpToEnd, clearQueue) {\n        var active = this.active;\n        this.active = false;\n        if (clearQueue) {\n          this.clearQueue();\n        }\n        if (jumpToEnd && this.situation) {\n          // initialize the situation if it was not\n          !active && this.startCurrent();\n          this.atEnd();\n        }\n        this.stopAnimFrame();\n        return this.clearCurrent();\n      }\n\n      /** resets the element to the state where the current element has started\r\n       * @return this\r\n       */,\n      reset: function () {\n        if (this.situation) {\n          var temp = this.situation;\n          this.stop();\n          this.situation = temp;\n          this.atStart();\n        }\n        return this;\n      }\n\n      // Stop the currently-running animation, remove all queued animations, and complete all animations for the element.\n      ,\n      finish: function () {\n        this.stop(true, false);\n        while (this.dequeue().situation && this.stop(true, false));\n        this.clearQueue().clearCurrent();\n        return this;\n      }\n\n      // set the internal animation pointer at the start position, before any loops, and updates the visualisation\n      ,\n      atStart: function () {\n        return this.at(0, true);\n      }\n\n      // set the internal animation pointer at the end position, after all the loops, and updates the visualisation\n      ,\n      atEnd: function () {\n        if (this.situation.loops === true) {\n          // If in a infinite loop, we end the current iteration\n          this.situation.loops = this.situation.loop + 1;\n        }\n        if (typeof this.situation.loops == 'number') {\n          // If performing a finite number of loops, we go after all the loops\n          return this.at(this.situation.loops, true);\n        } else {\n          // If no loops, we just go at the end\n          return this.at(1, true);\n        }\n      }\n\n      // set the internal animation pointer to the specified position and updates the visualisation\n      // if isAbsPos is true, pos is treated as an absolute position\n      ,\n      at: function (pos, isAbsPos) {\n        var durDivSpd = this.situation.duration / this._speed;\n        this.absPos = pos;\n        // If pos is not an absolute position, we convert it into one\n        if (!isAbsPos) {\n          if (this.situation.reversed) this.absPos = 1 - this.absPos;\n          this.absPos += this.situation.loop;\n        }\n        this.situation.start = +new Date() - this.absPos * durDivSpd;\n        this.situation.finish = this.situation.start + durDivSpd;\n        return this.step(true);\n      }\n\n      /**\r\n       * sets or returns the speed of the animations\r\n       * @param speed null || Number The new speed of the animations\r\n       * @return Number || this\r\n       */,\n      speed: function (speed) {\n        if (speed === 0) return this.pause();\n        if (speed) {\n          this._speed = speed;\n          // We use an absolute position here so that speed can affect the delay before the animation\n          return this.at(this.absPos, true);\n        } else return this._speed;\n      }\n\n      // Make loopable\n      ,\n      loop: function (times, reverse) {\n        var c = this.last();\n\n        // store total loops\n        c.loops = times != null ? times : true;\n        c.loop = 0;\n        if (reverse) c.reversing = true;\n        return this;\n      }\n\n      // pauses the animation\n      ,\n      pause: function () {\n        this.paused = true;\n        this.stopAnimFrame();\n        return this;\n      }\n\n      // unpause the animation\n      ,\n      play: function () {\n        if (!this.paused) return this;\n        this.paused = false;\n        // We use an absolute position here so that the delay before the animation can be paused\n        return this.at(this.absPos, true);\n      }\n\n      /**\r\n       * toggle or set the direction of the animation\r\n       * true sets direction to backwards while false sets it to forwards\r\n       * @param reversed Boolean indicating whether to reverse the animation or not (default: toggle the reverse status)\r\n       * @return this\r\n       */,\n      reverse: function (reversed) {\n        var c = this.last();\n        if (typeof reversed == 'undefined') c.reversed = !c.reversed;else c.reversed = reversed;\n        return this;\n      }\n\n      /**\r\n       * returns a float from 0-1 indicating the progress of the current animation\r\n       * @param eased Boolean indicating whether the returned position should be eased or not\r\n       * @return number\r\n       */,\n      progress: function (easeIt) {\n        return easeIt ? this.situation.ease(this.pos) : this.pos;\n      }\n\n      /**\r\n       * adds a callback function which is called when the current animation is finished\r\n       * @param fn Function which should be executed as callback\r\n       * @return number\r\n       */,\n      after: function (fn) {\n        var c = this.last(),\n          wrapper = function wrapper(e) {\n            if (e.detail.situation == c) {\n              fn.call(this, c);\n              this.off('finished.fx', wrapper); // prevent memory leak\n            }\n          };\n\n        this.target().on('finished.fx', wrapper);\n        return this._callStart();\n      }\n\n      // adds a callback which is called whenever one animation step is performed\n      ,\n      during: function (fn) {\n        var c = this.last(),\n          wrapper = function (e) {\n            if (e.detail.situation == c) {\n              fn.call(this, e.detail.pos, SVG.morph(e.detail.pos), e.detail.eased, c);\n            }\n          };\n\n        // see above\n        this.target().off('during.fx', wrapper).on('during.fx', wrapper);\n        this.after(function () {\n          this.off('during.fx', wrapper);\n        });\n        return this._callStart();\n      }\n\n      // calls after ALL animations in the queue are finished\n      ,\n      afterAll: function (fn) {\n        var wrapper = function wrapper(e) {\n          fn.call(this);\n          this.off('allfinished.fx', wrapper);\n        };\n\n        // see above\n        this.target().off('allfinished.fx', wrapper).on('allfinished.fx', wrapper);\n        return this._callStart();\n      }\n\n      // calls on every animation step for all animations\n      ,\n      duringAll: function (fn) {\n        var wrapper = function (e) {\n          fn.call(this, e.detail.pos, SVG.morph(e.detail.pos), e.detail.eased, e.detail.situation);\n        };\n        this.target().off('during.fx', wrapper).on('during.fx', wrapper);\n        this.afterAll(function () {\n          this.off('during.fx', wrapper);\n        });\n        return this._callStart();\n      },\n      last: function () {\n        return this.situations.length ? this.situations[this.situations.length - 1] : this.situation;\n      }\n\n      // adds one property to the animations\n      ,\n      add: function (method, args, type) {\n        this.last()[type || 'animations'][method] = args;\n        return this._callStart();\n      }\n\n      /** perform one step of the animation\r\n       *  @param ignoreTime Boolean indicating whether to ignore time and use position directly or recalculate position based on time\r\n       *  @return this\r\n       */,\n      step: function (ignoreTime) {\n        // convert current time to an absolute position\n        if (!ignoreTime) this.absPos = this.timeToAbsPos(+new Date());\n\n        // This part convert an absolute position to a position\n        if (this.situation.loops !== false) {\n          var absPos, absPosInt, lastLoop;\n\n          // If the absolute position is below 0, we just treat it as if it was 0\n          absPos = Math.max(this.absPos, 0);\n          absPosInt = Math.floor(absPos);\n          if (this.situation.loops === true || absPosInt < this.situation.loops) {\n            this.pos = absPos - absPosInt;\n            lastLoop = this.situation.loop;\n            this.situation.loop = absPosInt;\n          } else {\n            this.absPos = this.situation.loops;\n            this.pos = 1;\n            // The -1 here is because we don't want to toggle reversed when all the loops have been completed\n            lastLoop = this.situation.loop - 1;\n            this.situation.loop = this.situation.loops;\n          }\n          if (this.situation.reversing) {\n            // Toggle reversed if an odd number of loops as occured since the last call of step\n            this.situation.reversed = this.situation.reversed != Boolean((this.situation.loop - lastLoop) % 2);\n          }\n        } else {\n          // If there are no loop, the absolute position must not be above 1\n          this.absPos = Math.min(this.absPos, 1);\n          this.pos = this.absPos;\n        }\n\n        // while the absolute position can be below 0, the position must not be below 0\n        if (this.pos < 0) this.pos = 0;\n        if (this.situation.reversed) this.pos = 1 - this.pos;\n\n        // apply easing\n        var eased = this.situation.ease(this.pos);\n\n        // call once-callbacks\n        for (var i in this.situation.once) {\n          if (i > this.lastPos && i <= eased) {\n            this.situation.once[i].call(this.target(), this.pos, eased);\n            delete this.situation.once[i];\n          }\n        }\n\n        // fire during callback with position, eased position and current situation as parameter\n        if (this.active) this.target().fire('during', {\n          pos: this.pos,\n          eased: eased,\n          fx: this,\n          situation: this.situation\n        });\n\n        // the user may call stop or finish in the during callback\n        // so make sure that we still have a valid situation\n        if (!this.situation) {\n          return this;\n        }\n\n        // apply the actual animation to every property\n        this.eachAt();\n\n        // do final code when situation is finished\n        if (this.pos == 1 && !this.situation.reversed || this.situation.reversed && this.pos == 0) {\n          // stop animation callback\n          this.stopAnimFrame();\n\n          // fire finished callback with current situation as parameter\n          this.target().fire('finished', {\n            fx: this,\n            situation: this.situation\n          });\n          if (!this.situations.length) {\n            this.target().fire('allfinished');\n\n            // Recheck the length since the user may call animate in the afterAll callback\n            if (!this.situations.length) {\n              this.target().off('.fx'); // there shouldnt be any binding left, but to make sure...\n              this.active = false;\n            }\n          }\n\n          // start next animation\n          if (this.active) this.dequeue();else this.clearCurrent();\n        } else if (!this.paused && this.active) {\n          // we continue animating when we are not at the end\n          this.startAnimFrame();\n        }\n\n        // save last eased position for once callback triggering\n        this.lastPos = eased;\n        return this;\n      }\n\n      // calculates the step for every property and calls block with it\n      ,\n      eachAt: function () {\n        var i,\n          len,\n          at,\n          self = this,\n          target = this.target(),\n          s = this.situation;\n\n        // apply animations which can be called trough a method\n        for (i in s.animations) {\n          at = [].concat(s.animations[i]).map(function (el) {\n            return typeof el !== 'string' && el.at ? el.at(s.ease(self.pos), self.pos) : el;\n          });\n          target[i].apply(target, at);\n        }\n\n        // apply animation which has to be applied with attr()\n        for (i in s.attrs) {\n          at = [i].concat(s.attrs[i]).map(function (el) {\n            return typeof el !== 'string' && el.at ? el.at(s.ease(self.pos), self.pos) : el;\n          });\n          target.attr.apply(target, at);\n        }\n\n        // apply animation which has to be applied with style()\n        for (i in s.styles) {\n          at = [i].concat(s.styles[i]).map(function (el) {\n            return typeof el !== 'string' && el.at ? el.at(s.ease(self.pos), self.pos) : el;\n          });\n          target.style.apply(target, at);\n        }\n\n        // animate initialTransformation which has to be chained\n        if (s.transforms.length) {\n          // get initial initialTransformation\n          at = s.initialTransformation;\n          for (i = 0, len = s.transforms.length; i < len; i++) {\n            // get next transformation in chain\n            var a = s.transforms[i];\n\n            // multiply matrix directly\n            if (a instanceof SVG.Matrix) {\n              if (a.relative) {\n                at = at.multiply(new SVG.Matrix().morph(a).at(s.ease(this.pos)));\n              } else {\n                at = at.morph(a).at(s.ease(this.pos));\n              }\n              continue;\n            }\n\n            // when transformation is absolute we have to reset the needed transformation first\n            if (!a.relative) a.undo(at.extract());\n\n            // and reapply it after\n            at = at.multiply(a.at(s.ease(this.pos)));\n          }\n\n          // set new matrix on element\n          target.matrix(at);\n        }\n        return this;\n      }\n\n      // adds an once-callback which is called at a specific position and never again\n      ,\n      once: function (pos, fn, isEased) {\n        var c = this.last();\n        if (!isEased) pos = c.ease(pos);\n        c.once[pos] = fn;\n        return this;\n      },\n      _callStart: function () {\n        setTimeout(function () {\n          this.start();\n        }.bind(this), 0);\n        return this;\n      }\n    },\n    parent: SVG.Element\n\n    // Add method to parent elements\n    ,\n    construct: {\n      // Get fx module or create a new one, then animate with given duration and ease\n      animate: function (o, ease, delay) {\n        return (this.fx || (this.fx = new SVG.FX(this))).animate(o, ease, delay);\n      },\n      delay: function (delay) {\n        return (this.fx || (this.fx = new SVG.FX(this))).delay(delay);\n      },\n      stop: function (jumpToEnd, clearQueue) {\n        if (this.fx) this.fx.stop(jumpToEnd, clearQueue);\n        return this;\n      },\n      finish: function () {\n        if (this.fx) this.fx.finish();\n        return this;\n      }\n      // Pause current animation\n      ,\n      pause: function () {\n        if (this.fx) this.fx.pause();\n        return this;\n      }\n      // Play paused current animation\n      ,\n      play: function () {\n        if (this.fx) this.fx.play();\n        return this;\n      }\n      // Set/Get the speed of the animations\n      ,\n      speed: function (speed) {\n        if (this.fx) if (speed == null) return this.fx.speed();else this.fx.speed(speed);\n        return this;\n      }\n    }\n  });\n\n  // MorphObj is used whenever no morphable object is given\n  SVG.MorphObj = SVG.invent({\n    create: function (from, to) {\n      // prepare color for morphing\n      if (SVG.Color.isColor(to)) return new SVG.Color(from).morph(to);\n      // check if we have a list of values\n      if (SVG.regex.delimiter.test(from)) {\n        // prepare path for morphing\n        if (SVG.regex.pathLetters.test(from)) return new SVG.PathArray(from).morph(to);\n        // prepare value list for morphing\n        else return new SVG.Array(from).morph(to);\n      }\n      // prepare number for morphing\n      if (SVG.regex.numberAndUnit.test(to)) return new SVG.Number(from).morph(to);\n\n      // prepare for plain morphing\n      this.value = from;\n      this.destination = to;\n    },\n    extend: {\n      at: function (pos, real) {\n        return real < 1 ? this.value : this.destination;\n      },\n      valueOf: function () {\n        return this.value;\n      }\n    }\n  });\n  SVG.extend(SVG.FX, {\n    // Add animatable attributes\n    attr: function (a, v, relative) {\n      // apply attributes individually\n      if (typeof a == 'object') {\n        for (var key in a) this.attr(key, a[key]);\n      } else {\n        this.add(a, v, 'attrs');\n      }\n      return this;\n    }\n    // Add animatable styles\n    ,\n    style: function (s, v) {\n      if (typeof s == 'object') for (var key in s) this.style(key, s[key]);else this.add(s, v, 'styles');\n      return this;\n    }\n    // Animatable x-axis\n    ,\n    x: function (x, relative) {\n      if (this.target() instanceof SVG.G) {\n        this.transform({\n          x: x\n        }, relative);\n        return this;\n      }\n      var num = new SVG.Number(x);\n      num.relative = relative;\n      return this.add('x', num);\n    }\n    // Animatable y-axis\n    ,\n    y: function (y, relative) {\n      if (this.target() instanceof SVG.G) {\n        this.transform({\n          y: y\n        }, relative);\n        return this;\n      }\n      var num = new SVG.Number(y);\n      num.relative = relative;\n      return this.add('y', num);\n    }\n    // Animatable center x-axis\n    ,\n    cx: function (x) {\n      return this.add('cx', new SVG.Number(x));\n    }\n    // Animatable center y-axis\n    ,\n    cy: function (y) {\n      return this.add('cy', new SVG.Number(y));\n    }\n    // Add animatable move\n    ,\n    move: function (x, y) {\n      return this.x(x).y(y);\n    }\n    // Add animatable center\n    ,\n    center: function (x, y) {\n      return this.cx(x).cy(y);\n    }\n    // Add animatable size\n    ,\n    size: function (width, height) {\n      if (this.target() instanceof SVG.Text) {\n        // animate font size for Text elements\n        this.attr('font-size', width);\n      } else {\n        // animate bbox based size for all other elements\n        var box;\n        if (!width || !height) {\n          box = this.target().bbox();\n        }\n        if (!width) {\n          width = box.width / box.height * height;\n        }\n        if (!height) {\n          height = box.height / box.width * width;\n        }\n        this.add('width', new SVG.Number(width)).add('height', new SVG.Number(height));\n      }\n      return this;\n    }\n    // Add animatable width\n    ,\n    width: function (width) {\n      return this.add('width', new SVG.Number(width));\n    }\n    // Add animatable height\n    ,\n    height: function (height) {\n      return this.add('height', new SVG.Number(height));\n    }\n    // Add animatable plot\n    ,\n    plot: function (a, b, c, d) {\n      // Lines can be plotted with 4 arguments\n      if (arguments.length == 4) {\n        return this.plot([a, b, c, d]);\n      }\n      return this.add('plot', new (this.target().morphArray)(a));\n    }\n    // Add leading method\n    ,\n    leading: function (value) {\n      return this.target().leading ? this.add('leading', new SVG.Number(value)) : this;\n    }\n    // Add animatable viewbox\n    ,\n    viewbox: function (x, y, width, height) {\n      if (this.target() instanceof SVG.Container) {\n        this.add('viewbox', new SVG.ViewBox(x, y, width, height));\n      }\n      return this;\n    },\n    update: function (o) {\n      if (this.target() instanceof SVG.Stop) {\n        if (typeof o == 'number' || o instanceof SVG.Number) {\n          return this.update({\n            offset: arguments[0],\n            color: arguments[1],\n            opacity: arguments[2]\n          });\n        }\n        if (o.opacity != null) this.attr('stop-opacity', o.opacity);\n        if (o.color != null) this.attr('stop-color', o.color);\n        if (o.offset != null) this.attr('offset', o.offset);\n      }\n      return this;\n    }\n  });\n  SVG.Box = SVG.invent({\n    create: function (x, y, width, height) {\n      if (typeof x == 'object' && !(x instanceof SVG.Element)) {\n        // chromes getBoundingClientRect has no x and y property\n        return SVG.Box.call(this, x.left != null ? x.left : x.x, x.top != null ? x.top : x.y, x.width, x.height);\n      } else if (arguments.length == 4) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n      }\n\n      // add center, right, bottom...\n      fullBox(this);\n    },\n    extend: {\n      // Merge rect box with another, return a new instance\n      merge: function (box) {\n        var b = new this.constructor();\n\n        // merge boxes\n        b.x = Math.min(this.x, box.x);\n        b.y = Math.min(this.y, box.y);\n        b.width = Math.max(this.x + this.width, box.x + box.width) - b.x;\n        b.height = Math.max(this.y + this.height, box.y + box.height) - b.y;\n        return fullBox(b);\n      },\n      transform: function (m) {\n        var xMin = Infinity,\n          xMax = -Infinity,\n          yMin = Infinity,\n          yMax = -Infinity,\n          p,\n          bbox;\n        var pts = [new SVG.Point(this.x, this.y), new SVG.Point(this.x2, this.y), new SVG.Point(this.x, this.y2), new SVG.Point(this.x2, this.y2)];\n        pts.forEach(function (p) {\n          p = p.transform(m);\n          xMin = Math.min(xMin, p.x);\n          xMax = Math.max(xMax, p.x);\n          yMin = Math.min(yMin, p.y);\n          yMax = Math.max(yMax, p.y);\n        });\n        bbox = new this.constructor();\n        bbox.x = xMin;\n        bbox.width = xMax - xMin;\n        bbox.y = yMin;\n        bbox.height = yMax - yMin;\n        fullBox(bbox);\n        return bbox;\n      }\n    }\n  });\n  SVG.BBox = SVG.invent({\n    // Initialize\n    create: function (element) {\n      SVG.Box.apply(this, [].slice.call(arguments));\n\n      // get values if element is given\n      if (element instanceof SVG.Element) {\n        var box;\n\n        // yes this is ugly, but Firefox can be a pain when it comes to elements that are not yet rendered\n        try {\n          if (!document.documentElement.contains) {\n            // This is IE - it does not support contains() for top-level SVGs\n            var topParent = element.node;\n            while (topParent.parentNode) {\n              topParent = topParent.parentNode;\n            }\n            if (topParent != document) throw new Exception('Element not in the dom');\n          } else {\n            // the element is NOT in the dom, throw error\n            if (!document.documentElement.contains(element.node)) throw new Exception('Element not in the dom');\n          }\n\n          // find native bbox\n          box = element.node.getBBox();\n        } catch (e) {\n          if (element instanceof SVG.Shape) {\n            var clone = element.clone(SVG.parser.draw.instance).show();\n            box = clone.node.getBBox();\n            clone.remove();\n          } else {\n            box = {\n              x: element.node.clientLeft,\n              y: element.node.clientTop,\n              width: element.node.clientWidth,\n              height: element.node.clientHeight\n            };\n          }\n        }\n        SVG.Box.call(this, box);\n      }\n    }\n\n    // Define ancestor\n    ,\n    inherit: SVG.Box\n\n    // Define Parent\n    ,\n    parent: SVG.Element\n\n    // Constructor\n    ,\n    construct: {\n      // Get bounding box\n      bbox: function () {\n        return new SVG.BBox(this);\n      }\n    }\n  });\n  SVG.BBox.prototype.constructor = SVG.BBox;\n  SVG.extend(SVG.Element, {\n    tbox: function () {\n      console.warn('Use of TBox is deprecated and mapped to RBox. Use .rbox() instead.');\n      return this.rbox(this.doc());\n    }\n  });\n  SVG.RBox = SVG.invent({\n    // Initialize\n    create: function (element) {\n      SVG.Box.apply(this, [].slice.call(arguments));\n      if (element instanceof SVG.Element) {\n        SVG.Box.call(this, element.node.getBoundingClientRect());\n      }\n    },\n    inherit: SVG.Box\n\n    // define Parent\n    ,\n    parent: SVG.Element,\n    extend: {\n      addOffset: function () {\n        // offset by window scroll position, because getBoundingClientRect changes when window is scrolled\n        this.x += window.pageXOffset;\n        this.y += window.pageYOffset;\n        return this;\n      }\n    }\n\n    // Constructor\n    ,\n    construct: {\n      // Get rect box\n      rbox: function (el) {\n        if (el) return new SVG.RBox(this).transform(el.screenCTM().inverse());\n        return new SVG.RBox(this).addOffset();\n      }\n    }\n  });\n  SVG.RBox.prototype.constructor = SVG.RBox;\n  SVG.Matrix = SVG.invent({\n    // Initialize\n    create: function (source) {\n      var i,\n        base = arrayToMatrix([1, 0, 0, 1, 0, 0]);\n\n      // ensure source as object\n      source = source instanceof SVG.Element ? source.matrixify() : typeof source === 'string' ? arrayToMatrix(source.split(SVG.regex.delimiter).map(parseFloat)) : arguments.length == 6 ? arrayToMatrix([].slice.call(arguments)) : Array.isArray(source) ? arrayToMatrix(source) : typeof source === 'object' ? source : base;\n\n      // merge source\n      for (i = abcdef.length - 1; i >= 0; --i) this[abcdef[i]] = source[abcdef[i]] != null ? source[abcdef[i]] : base[abcdef[i]];\n    }\n\n    // Add methods\n    ,\n    extend: {\n      // Extract individual transformations\n      extract: function () {\n        // find delta transform points\n        var px = deltaTransformPoint(this, 0, 1),\n          py = deltaTransformPoint(this, 1, 0),\n          skewX = 180 / Math.PI * Math.atan2(px.y, px.x) - 90;\n        return {\n          // translation\n          x: this.e,\n          y: this.f,\n          transformedX: (this.e * Math.cos(skewX * Math.PI / 180) + this.f * Math.sin(skewX * Math.PI / 180)) / Math.sqrt(this.a * this.a + this.b * this.b),\n          transformedY: (this.f * Math.cos(skewX * Math.PI / 180) + this.e * Math.sin(-skewX * Math.PI / 180)) / Math.sqrt(this.c * this.c + this.d * this.d)\n          // skew\n          ,\n          skewX: -skewX,\n          skewY: 180 / Math.PI * Math.atan2(py.y, py.x)\n          // scale\n          ,\n          scaleX: Math.sqrt(this.a * this.a + this.b * this.b),\n          scaleY: Math.sqrt(this.c * this.c + this.d * this.d)\n          // rotation\n          ,\n          rotation: skewX,\n          a: this.a,\n          b: this.b,\n          c: this.c,\n          d: this.d,\n          e: this.e,\n          f: this.f,\n          matrix: new SVG.Matrix(this)\n        };\n      }\n      // Clone matrix\n      ,\n      clone: function () {\n        return new SVG.Matrix(this);\n      }\n      // Morph one matrix into another\n      ,\n      morph: function (matrix) {\n        // store new destination\n        this.destination = new SVG.Matrix(matrix);\n        return this;\n      }\n      // Get morphed matrix at a given position\n      ,\n      at: function (pos) {\n        // make sure a destination is defined\n        if (!this.destination) return this;\n\n        // calculate morphed matrix at a given position\n        var matrix = new SVG.Matrix({\n          a: this.a + (this.destination.a - this.a) * pos,\n          b: this.b + (this.destination.b - this.b) * pos,\n          c: this.c + (this.destination.c - this.c) * pos,\n          d: this.d + (this.destination.d - this.d) * pos,\n          e: this.e + (this.destination.e - this.e) * pos,\n          f: this.f + (this.destination.f - this.f) * pos\n        });\n        return matrix;\n      }\n      // Multiplies by given matrix\n      ,\n      multiply: function (matrix) {\n        return new SVG.Matrix(this.native().multiply(parseMatrix(matrix).native()));\n      }\n      // Inverses matrix\n      ,\n      inverse: function () {\n        return new SVG.Matrix(this.native().inverse());\n      }\n      // Translate matrix\n      ,\n      translate: function (x, y) {\n        return new SVG.Matrix(this.native().translate(x || 0, y || 0));\n      }\n      // Scale matrix\n      ,\n      scale: function (x, y, cx, cy) {\n        // support uniformal scale\n        if (arguments.length == 1) {\n          y = x;\n        } else if (arguments.length == 3) {\n          cy = cx;\n          cx = y;\n          y = x;\n        }\n        return this.around(cx, cy, new SVG.Matrix(x, 0, 0, y, 0, 0));\n      }\n      // Rotate matrix\n      ,\n      rotate: function (r, cx, cy) {\n        // convert degrees to radians\n        r = SVG.utils.radians(r);\n        return this.around(cx, cy, new SVG.Matrix(Math.cos(r), Math.sin(r), -Math.sin(r), Math.cos(r), 0, 0));\n      }\n      // Flip matrix on x or y, at a given offset\n      ,\n      flip: function (a, o) {\n        return a == 'x' ? this.scale(-1, 1, o, 0) : a == 'y' ? this.scale(1, -1, 0, o) : this.scale(-1, -1, a, o != null ? o : a);\n      }\n      // Skew\n      ,\n      skew: function (x, y, cx, cy) {\n        // support uniformal skew\n        if (arguments.length == 1) {\n          y = x;\n        } else if (arguments.length == 3) {\n          cy = cx;\n          cx = y;\n          y = x;\n        }\n\n        // convert degrees to radians\n        x = SVG.utils.radians(x);\n        y = SVG.utils.radians(y);\n        return this.around(cx, cy, new SVG.Matrix(1, Math.tan(y), Math.tan(x), 1, 0, 0));\n      }\n      // SkewX\n      ,\n      skewX: function (x, cx, cy) {\n        return this.skew(x, 0, cx, cy);\n      }\n      // SkewY\n      ,\n      skewY: function (y, cx, cy) {\n        return this.skew(0, y, cx, cy);\n      }\n      // Transform around a center point\n      ,\n      around: function (cx, cy, matrix) {\n        return this.multiply(new SVG.Matrix(1, 0, 0, 1, cx || 0, cy || 0)).multiply(matrix).multiply(new SVG.Matrix(1, 0, 0, 1, -cx || 0, -cy || 0));\n      }\n      // Convert to native SVGMatrix\n      ,\n      native: function () {\n        // create new matrix\n        var matrix = SVG.parser.native.createSVGMatrix();\n\n        // update with current values\n        for (var i = abcdef.length - 1; i >= 0; i--) matrix[abcdef[i]] = this[abcdef[i]];\n        return matrix;\n      }\n      // Convert matrix to string\n      ,\n      toString: function () {\n        // Construct the matrix directly, avoid values that are too small\n        return 'matrix(' + float32String(this.a) + ',' + float32String(this.b) + ',' + float32String(this.c) + ',' + float32String(this.d) + ',' + float32String(this.e) + ',' + float32String(this.f) + ')';\n      }\n    }\n\n    // Define parent\n    ,\n    parent: SVG.Element\n\n    // Add parent method\n    ,\n    construct: {\n      // Get current matrix\n      ctm: function () {\n        return new SVG.Matrix(this.node.getCTM());\n      },\n      // Get current screen matrix\n      screenCTM: function () {\n        /* https://bugzilla.mozilla.org/show_bug.cgi?id=1344537\r\n           This is needed because FF does not return the transformation matrix\r\n           for the inner coordinate system when getScreenCTM() is called on nested svgs.\r\n           However all other Browsers do that */\n        if (this instanceof SVG.Nested) {\n          var rect = this.rect(1, 1);\n          var m = rect.node.getScreenCTM();\n          rect.remove();\n          return new SVG.Matrix(m);\n        }\n        return new SVG.Matrix(this.node.getScreenCTM());\n      }\n    }\n  });\n  SVG.Point = SVG.invent({\n    // Initialize\n    create: function (x, y) {\n      var i,\n        source,\n        base = {\n          x: 0,\n          y: 0\n        };\n\n      // ensure source as object\n      source = Array.isArray(x) ? {\n        x: x[0],\n        y: x[1]\n      } : typeof x === 'object' ? {\n        x: x.x,\n        y: x.y\n      } : x != null ? {\n        x: x,\n        y: y != null ? y : x\n      } : base; // If y has no value, then x is used has its value\n\n      // merge source\n      this.x = source.x;\n      this.y = source.y;\n    }\n\n    // Add methods\n    ,\n    extend: {\n      // Clone point\n      clone: function () {\n        return new SVG.Point(this);\n      }\n      // Morph one point into another\n      ,\n      morph: function (x, y) {\n        // store new destination\n        this.destination = new SVG.Point(x, y);\n        return this;\n      }\n      // Get morphed point at a given position\n      ,\n      at: function (pos) {\n        // make sure a destination is defined\n        if (!this.destination) return this;\n\n        // calculate morphed matrix at a given position\n        var point = new SVG.Point({\n          x: this.x + (this.destination.x - this.x) * pos,\n          y: this.y + (this.destination.y - this.y) * pos\n        });\n        return point;\n      }\n      // Convert to native SVGPoint\n      ,\n      native: function () {\n        // create new point\n        var point = SVG.parser.native.createSVGPoint();\n\n        // update with current values\n        point.x = this.x;\n        point.y = this.y;\n        return point;\n      }\n      // transform point with matrix\n      ,\n      transform: function (matrix) {\n        return new SVG.Point(this.native().matrixTransform(matrix.native()));\n      }\n    }\n  });\n  SVG.extend(SVG.Element, {\n    // Get point\n    point: function (x, y) {\n      return new SVG.Point(x, y).transform(this.screenCTM().inverse());\n    }\n  });\n  SVG.extend(SVG.Element, {\n    // Set svg element attribute\n    attr: function (a, v, n) {\n      // act as full getter\n      if (a == null) {\n        // get an object of attributes\n        a = {};\n        v = this.node.attributes;\n        for (n = v.length - 1; n >= 0; n--) a[v[n].nodeName] = SVG.regex.isNumber.test(v[n].nodeValue) ? parseFloat(v[n].nodeValue) : v[n].nodeValue;\n        return a;\n      } else if (typeof a == 'object') {\n        // apply every attribute individually if an object is passed\n        for (v in a) this.attr(v, a[v]);\n      } else if (v === null) {\n        // remove value\n        this.node.removeAttribute(a);\n      } else if (v == null) {\n        // act as a getter if the first and only argument is not an object\n        v = this.node.getAttribute(a);\n        return v == null ? SVG.defaults.attrs[a] : SVG.regex.isNumber.test(v) ? parseFloat(v) : v;\n      } else {\n        // BUG FIX: some browsers will render a stroke if a color is given even though stroke width is 0\n        if (a == 'stroke-width') this.attr('stroke', parseFloat(v) > 0 ? this._stroke : null);else if (a == 'stroke') this._stroke = v;\n\n        // convert image fill and stroke to patterns\n        if (a == 'fill' || a == 'stroke') {\n          if (SVG.regex.isImage.test(v)) v = this.doc().defs().image(v, 0, 0);\n          if (v instanceof SVG.Image) v = this.doc().defs().pattern(0, 0, function () {\n            this.add(v);\n          });\n        }\n\n        // ensure correct numeric values (also accepts NaN and Infinity)\n        if (typeof v === 'number') v = new SVG.Number(v);\n\n        // ensure full hex color\n        else if (SVG.Color.isColor(v)) v = new SVG.Color(v);\n\n        // parse array values\n        else if (Array.isArray(v)) v = new SVG.Array(v);\n\n        // if the passed attribute is leading...\n        if (a == 'leading') {\n          // ... call the leading method instead\n          if (this.leading) this.leading(v);\n        } else {\n          // set given attribute on node\n          typeof n === 'string' ? this.node.setAttributeNS(n, a, v.toString()) : this.node.setAttribute(a, v.toString());\n        }\n\n        // rebuild if required\n        if (this.rebuild && (a == 'font-size' || a == 'x')) this.rebuild(a, v);\n      }\n      return this;\n    }\n  });\n  SVG.extend(SVG.Element, {\n    // Add transformations\n    transform: function (o, relative) {\n      // get target in case of the fx module, otherwise reference this\n      var target = this,\n        matrix,\n        bbox;\n\n      // act as a getter\n      if (typeof o !== 'object') {\n        // get current matrix\n        matrix = new SVG.Matrix(target).extract();\n        return typeof o === 'string' ? matrix[o] : matrix;\n      }\n\n      // get current matrix\n      matrix = new SVG.Matrix(target);\n\n      // ensure relative flag\n      relative = !!relative || !!o.relative;\n\n      // act on matrix\n      if (o.a != null) {\n        matrix = relative ?\n        // relative\n        matrix.multiply(new SVG.Matrix(o)) :\n        // absolute\n        new SVG.Matrix(o);\n\n        // act on rotation\n      } else if (o.rotation != null) {\n        // ensure centre point\n        ensureCentre(o, target);\n\n        // apply transformation\n        matrix = relative ?\n        // relative\n        matrix.rotate(o.rotation, o.cx, o.cy) :\n        // absolute\n        matrix.rotate(o.rotation - matrix.extract().rotation, o.cx, o.cy);\n\n        // act on scale\n      } else if (o.scale != null || o.scaleX != null || o.scaleY != null) {\n        // ensure centre point\n        ensureCentre(o, target);\n\n        // ensure scale values on both axes\n        o.scaleX = o.scale != null ? o.scale : o.scaleX != null ? o.scaleX : 1;\n        o.scaleY = o.scale != null ? o.scale : o.scaleY != null ? o.scaleY : 1;\n        if (!relative) {\n          // absolute; multiply inversed values\n          var e = matrix.extract();\n          o.scaleX = o.scaleX * 1 / e.scaleX;\n          o.scaleY = o.scaleY * 1 / e.scaleY;\n        }\n        matrix = matrix.scale(o.scaleX, o.scaleY, o.cx, o.cy);\n\n        // act on skew\n      } else if (o.skew != null || o.skewX != null || o.skewY != null) {\n        // ensure centre point\n        ensureCentre(o, target);\n\n        // ensure skew values on both axes\n        o.skewX = o.skew != null ? o.skew : o.skewX != null ? o.skewX : 0;\n        o.skewY = o.skew != null ? o.skew : o.skewY != null ? o.skewY : 0;\n        if (!relative) {\n          // absolute; reset skew values\n          var e = matrix.extract();\n          matrix = matrix.multiply(new SVG.Matrix().skew(e.skewX, e.skewY, o.cx, o.cy).inverse());\n        }\n        matrix = matrix.skew(o.skewX, o.skewY, o.cx, o.cy);\n\n        // act on flip\n      } else if (o.flip) {\n        if (o.flip == 'x' || o.flip == 'y') {\n          o.offset = o.offset == null ? target.bbox()['c' + o.flip] : o.offset;\n        } else {\n          if (o.offset == null) {\n            bbox = target.bbox();\n            o.flip = bbox.cx;\n            o.offset = bbox.cy;\n          } else {\n            o.flip = o.offset;\n          }\n        }\n        matrix = new SVG.Matrix().flip(o.flip, o.offset);\n\n        // act on translate\n      } else if (o.x != null || o.y != null) {\n        if (relative) {\n          // relative\n          matrix = matrix.translate(o.x, o.y);\n        } else {\n          // absolute\n          if (o.x != null) matrix.e = o.x;\n          if (o.y != null) matrix.f = o.y;\n        }\n      }\n      return this.attr('transform', matrix);\n    }\n  });\n  SVG.extend(SVG.FX, {\n    transform: function (o, relative) {\n      // get target in case of the fx module, otherwise reference this\n      var target = this.target(),\n        matrix,\n        bbox;\n\n      // act as a getter\n      if (typeof o !== 'object') {\n        // get current matrix\n        matrix = new SVG.Matrix(target).extract();\n        return typeof o === 'string' ? matrix[o] : matrix;\n      }\n\n      // ensure relative flag\n      relative = !!relative || !!o.relative;\n\n      // act on matrix\n      if (o.a != null) {\n        matrix = new SVG.Matrix(o);\n\n        // act on rotation\n      } else if (o.rotation != null) {\n        // ensure centre point\n        ensureCentre(o, target);\n\n        // apply transformation\n        matrix = new SVG.Rotate(o.rotation, o.cx, o.cy);\n\n        // act on scale\n      } else if (o.scale != null || o.scaleX != null || o.scaleY != null) {\n        // ensure centre point\n        ensureCentre(o, target);\n\n        // ensure scale values on both axes\n        o.scaleX = o.scale != null ? o.scale : o.scaleX != null ? o.scaleX : 1;\n        o.scaleY = o.scale != null ? o.scale : o.scaleY != null ? o.scaleY : 1;\n        matrix = new SVG.Scale(o.scaleX, o.scaleY, o.cx, o.cy);\n\n        // act on skew\n      } else if (o.skewX != null || o.skewY != null) {\n        // ensure centre point\n        ensureCentre(o, target);\n\n        // ensure skew values on both axes\n        o.skewX = o.skewX != null ? o.skewX : 0;\n        o.skewY = o.skewY != null ? o.skewY : 0;\n        matrix = new SVG.Skew(o.skewX, o.skewY, o.cx, o.cy);\n\n        // act on flip\n      } else if (o.flip) {\n        if (o.flip == 'x' || o.flip == 'y') {\n          o.offset = o.offset == null ? target.bbox()['c' + o.flip] : o.offset;\n        } else {\n          if (o.offset == null) {\n            bbox = target.bbox();\n            o.flip = bbox.cx;\n            o.offset = bbox.cy;\n          } else {\n            o.flip = o.offset;\n          }\n        }\n        matrix = new SVG.Matrix().flip(o.flip, o.offset);\n\n        // act on translate\n      } else if (o.x != null || o.y != null) {\n        matrix = new SVG.Translate(o.x, o.y);\n      }\n      if (!matrix) return this;\n      matrix.relative = relative;\n      this.last().transforms.push(matrix);\n      return this._callStart();\n    }\n  });\n  SVG.extend(SVG.Element, {\n    // Reset all transformations\n    untransform: function () {\n      return this.attr('transform', null);\n    },\n    // merge the whole transformation chain into one matrix and returns it\n    matrixify: function () {\n      var matrix = (this.attr('transform') || ''\n      // split transformations\n      ).split(SVG.regex.transforms).slice(0, -1).map(function (str) {\n        // generate key => value pairs\n        var kv = str.trim().split('(');\n        return [kv[0], kv[1].split(SVG.regex.delimiter).map(function (str) {\n          return parseFloat(str);\n        })];\n      })\n      // merge every transformation into one matrix\n      .reduce(function (matrix, transform) {\n        if (transform[0] == 'matrix') return matrix.multiply(arrayToMatrix(transform[1]));\n        return matrix[transform[0]].apply(matrix, transform[1]);\n      }, new SVG.Matrix());\n      return matrix;\n    },\n    // add an element to another parent without changing the visual representation on the screen\n    toParent: function (parent) {\n      if (this == parent) return this;\n      var ctm = this.screenCTM();\n      var pCtm = parent.screenCTM().inverse();\n      this.addTo(parent).untransform().transform(pCtm.multiply(ctm));\n      return this;\n    },\n    // same as above with parent equals root-svg\n    toDoc: function () {\n      return this.toParent(this.doc());\n    }\n  });\n  SVG.Transformation = SVG.invent({\n    create: function (source, inversed) {\n      if (arguments.length > 1 && typeof inversed != 'boolean') {\n        return this.constructor.call(this, [].slice.call(arguments));\n      }\n      if (Array.isArray(source)) {\n        for (var i = 0, len = this.arguments.length; i < len; ++i) {\n          this[this.arguments[i]] = source[i];\n        }\n      } else if (typeof source == 'object') {\n        for (var i = 0, len = this.arguments.length; i < len; ++i) {\n          this[this.arguments[i]] = source[this.arguments[i]];\n        }\n      }\n      this.inversed = false;\n      if (inversed === true) {\n        this.inversed = true;\n      }\n    },\n    extend: {\n      arguments: [],\n      method: '',\n      at: function (pos) {\n        var params = [];\n        for (var i = 0, len = this.arguments.length; i < len; ++i) {\n          params.push(this[this.arguments[i]]);\n        }\n        var m = this._undo || new SVG.Matrix();\n        m = new SVG.Matrix().morph(SVG.Matrix.prototype[this.method].apply(m, params)).at(pos);\n        return this.inversed ? m.inverse() : m;\n      },\n      undo: function (o) {\n        for (var i = 0, len = this.arguments.length; i < len; ++i) {\n          o[this.arguments[i]] = typeof this[this.arguments[i]] == 'undefined' ? 0 : o[this.arguments[i]];\n        }\n\n        // The method SVG.Matrix.extract which was used before calling this\n        // method to obtain a value for the parameter o doesn't return a cx and\n        // a cy so we use the ones that were provided to this object at its creation\n        o.cx = this.cx;\n        o.cy = this.cy;\n        this._undo = new SVG[capitalize(this.method)](o, true).at(1);\n        return this;\n      }\n    }\n  });\n  SVG.Translate = SVG.invent({\n    parent: SVG.Matrix,\n    inherit: SVG.Transformation,\n    create: function (source, inversed) {\n      this.constructor.apply(this, [].slice.call(arguments));\n    },\n    extend: {\n      arguments: ['transformedX', 'transformedY'],\n      method: 'translate'\n    }\n  });\n  SVG.Rotate = SVG.invent({\n    parent: SVG.Matrix,\n    inherit: SVG.Transformation,\n    create: function (source, inversed) {\n      this.constructor.apply(this, [].slice.call(arguments));\n    },\n    extend: {\n      arguments: ['rotation', 'cx', 'cy'],\n      method: 'rotate',\n      at: function (pos) {\n        var m = new SVG.Matrix().rotate(new SVG.Number().morph(this.rotation - (this._undo ? this._undo.rotation : 0)).at(pos), this.cx, this.cy);\n        return this.inversed ? m.inverse() : m;\n      },\n      undo: function (o) {\n        this._undo = o;\n        return this;\n      }\n    }\n  });\n  SVG.Scale = SVG.invent({\n    parent: SVG.Matrix,\n    inherit: SVG.Transformation,\n    create: function (source, inversed) {\n      this.constructor.apply(this, [].slice.call(arguments));\n    },\n    extend: {\n      arguments: ['scaleX', 'scaleY', 'cx', 'cy'],\n      method: 'scale'\n    }\n  });\n  SVG.Skew = SVG.invent({\n    parent: SVG.Matrix,\n    inherit: SVG.Transformation,\n    create: function (source, inversed) {\n      this.constructor.apply(this, [].slice.call(arguments));\n    },\n    extend: {\n      arguments: ['skewX', 'skewY', 'cx', 'cy'],\n      method: 'skew'\n    }\n  });\n  SVG.extend(SVG.Element, {\n    // Dynamic style generator\n    style: function (s, v) {\n      if (arguments.length == 0) {\n        // get full style\n        return this.node.style.cssText || '';\n      } else if (arguments.length < 2) {\n        // apply every style individually if an object is passed\n        if (typeof s == 'object') {\n          for (v in s) this.style(v, s[v]);\n        } else if (SVG.regex.isCss.test(s)) {\n          // parse css string\n          s = s.split(/\\s*;\\s*/)\n          // filter out suffix ; and stuff like ;;\n          .filter(function (e) {\n            return !!e;\n          }).map(function (e) {\n            return e.split(/\\s*:\\s*/);\n          });\n\n          // apply every definition individually\n          while (v = s.pop()) {\n            this.style(v[0], v[1]);\n          }\n        } else {\n          // act as a getter if the first and only argument is not an object\n          return this.node.style[camelCase(s)];\n        }\n      } else {\n        this.node.style[camelCase(s)] = v === null || SVG.regex.isBlank.test(v) ? '' : v;\n      }\n      return this;\n    }\n  });\n  SVG.Parent = SVG.invent({\n    // Initialize node\n    create: function (element) {\n      this.constructor.call(this, element);\n    }\n\n    // Inherit from\n    ,\n    inherit: SVG.Element\n\n    // Add class methods\n    ,\n    extend: {\n      // Returns all child elements\n      children: function () {\n        return SVG.utils.map(SVG.utils.filterSVGElements(this.node.childNodes), function (node) {\n          return SVG.adopt(node);\n        });\n      }\n      // Add given element at a position\n      ,\n      add: function (element, i) {\n        if (i == null) this.node.appendChild(element.node);else if (element.node != this.node.childNodes[i]) this.node.insertBefore(element.node, this.node.childNodes[i]);\n        return this;\n      }\n      // Basically does the same as `add()` but returns the added element instead\n      ,\n      put: function (element, i) {\n        this.add(element, i);\n        return element;\n      }\n      // Checks if the given element is a child\n      ,\n      has: function (element) {\n        return this.index(element) >= 0;\n      }\n      // Gets index of given element\n      ,\n      index: function (element) {\n        return [].slice.call(this.node.childNodes).indexOf(element.node);\n      }\n      // Get a element at the given index\n      ,\n      get: function (i) {\n        return SVG.adopt(this.node.childNodes[i]);\n      }\n      // Get first child\n      ,\n      first: function () {\n        return this.get(0);\n      }\n      // Get the last child\n      ,\n      last: function () {\n        return this.get(this.node.childNodes.length - 1);\n      }\n      // Iterates over all children and invokes a given block\n      ,\n      each: function (block, deep) {\n        var i,\n          il,\n          children = this.children();\n        for (i = 0, il = children.length; i < il; i++) {\n          if (children[i] instanceof SVG.Element) block.apply(children[i], [i, children]);\n          if (deep && children[i] instanceof SVG.Container) children[i].each(block, deep);\n        }\n        return this;\n      }\n      // Remove a given child\n      ,\n      removeElement: function (element) {\n        this.node.removeChild(element.node);\n        return this;\n      }\n      // Remove all elements in this container\n      ,\n      clear: function () {\n        // remove children\n        while (this.node.hasChildNodes()) this.node.removeChild(this.node.lastChild);\n\n        // remove defs reference\n        delete this._defs;\n        return this;\n      },\n      // Get defs\n      defs: function () {\n        return this.doc().defs();\n      }\n    }\n  });\n  SVG.extend(SVG.Parent, {\n    ungroup: function (parent, depth) {\n      if (depth === 0 || this instanceof SVG.Defs || this.node == SVG.parser.draw) return this;\n      parent = parent || (this instanceof SVG.Doc ? this : this.parent(SVG.Parent));\n      depth = depth || Infinity;\n      this.each(function () {\n        if (this instanceof SVG.Defs) return this;\n        if (this instanceof SVG.Parent) return this.ungroup(parent, depth - 1);\n        return this.toParent(parent);\n      });\n      this.node.firstChild || this.remove();\n      return this;\n    },\n    flatten: function (parent, depth) {\n      return this.ungroup(parent, depth);\n    }\n  });\n  SVG.Container = SVG.invent({\n    // Initialize node\n    create: function (element) {\n      this.constructor.call(this, element);\n    }\n\n    // Inherit from\n    ,\n    inherit: SVG.Parent\n  });\n  SVG.ViewBox = SVG.invent({\n    create: function (source) {\n      var i,\n        base = [0, 0, 0, 0];\n      var x,\n        y,\n        width,\n        height,\n        box,\n        view,\n        we,\n        he,\n        wm = 1 // width multiplier\n        ,\n        hm = 1 // height multiplier\n        ,\n        reg = /[+-]?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?/gi;\n      if (source instanceof SVG.Element) {\n        we = source;\n        he = source;\n        view = (source.attr('viewBox') || '').match(reg);\n        box = source.bbox;\n\n        // get dimensions of current node\n        width = new SVG.Number(source.width());\n        height = new SVG.Number(source.height());\n\n        // find nearest non-percentual dimensions\n        while (width.unit == '%') {\n          wm *= width.value;\n          width = new SVG.Number(we instanceof SVG.Doc ? we.parent().offsetWidth : we.parent().width());\n          we = we.parent();\n        }\n        while (height.unit == '%') {\n          hm *= height.value;\n          height = new SVG.Number(he instanceof SVG.Doc ? he.parent().offsetHeight : he.parent().height());\n          he = he.parent();\n        }\n\n        // ensure defaults\n        this.x = 0;\n        this.y = 0;\n        this.width = width * wm;\n        this.height = height * hm;\n        this.zoom = 1;\n        if (view) {\n          // get width and height from viewbox\n          x = parseFloat(view[0]);\n          y = parseFloat(view[1]);\n          width = parseFloat(view[2]);\n          height = parseFloat(view[3]);\n\n          // calculate zoom accoring to viewbox\n          this.zoom = this.width / this.height > width / height ? this.height / height : this.width / width;\n\n          // calculate real pixel dimensions on parent SVG.Doc element\n          this.x = x;\n          this.y = y;\n          this.width = width;\n          this.height = height;\n        }\n      } else {\n        // ensure source as object\n        source = typeof source === 'string' ? source.match(reg).map(function (el) {\n          return parseFloat(el);\n        }) : Array.isArray(source) ? source : typeof source == 'object' ? [source.x, source.y, source.width, source.height] : arguments.length == 4 ? [].slice.call(arguments) : base;\n        this.x = source[0];\n        this.y = source[1];\n        this.width = source[2];\n        this.height = source[3];\n      }\n    },\n    extend: {\n      toString: function () {\n        return this.x + ' ' + this.y + ' ' + this.width + ' ' + this.height;\n      },\n      morph: function (x, y, width, height) {\n        this.destination = new SVG.ViewBox(x, y, width, height);\n        return this;\n      },\n      at: function (pos) {\n        if (!this.destination) return this;\n        return new SVG.ViewBox([this.x + (this.destination.x - this.x) * pos, this.y + (this.destination.y - this.y) * pos, this.width + (this.destination.width - this.width) * pos, this.height + (this.destination.height - this.height) * pos]);\n      }\n    }\n\n    // Define parent\n    ,\n    parent: SVG.Container\n\n    // Add parent method\n    ,\n    construct: {\n      // get/set viewbox\n      viewbox: function (x, y, width, height) {\n        if (arguments.length == 0)\n          // act as a getter if there are no arguments\n          return new SVG.ViewBox(this);\n\n        // otherwise act as a setter\n        return this.attr('viewBox', new SVG.ViewBox(x, y, width, height));\n      }\n    }\n  })\n  // Add events to elements\n  ;\n\n  ['click', 'dblclick', 'mousedown', 'mouseup', 'mouseover', 'mouseout', 'mousemove', 'mouseenter', 'mouseleave', 'touchstart', 'touchmove', 'touchleave', 'touchend', 'touchcancel'].forEach(function (event) {\n    // add event to SVG.Element\n    SVG.Element.prototype[event] = function (f) {\n      // bind event to element rather than element node\n      if (f == null) {\n        SVG.off(this, event);\n      } else {\n        SVG.on(this, event, f);\n      }\n      return this;\n    };\n  });\n  SVG.listenerId = 0;\n\n  // Add event binder in the SVG namespace\n  SVG.on = function (node, events, listener, binding, options) {\n    var l = listener.bind(binding || node);\n    var n = node instanceof SVG.Element ? node.node : node;\n\n    // ensure instance object for nodes which are not adopted\n    n.instance = n.instance || {\n      _events: {}\n    };\n    var bag = n.instance._events;\n\n    // add id to listener\n    if (!listener._svgjsListenerId) {\n      listener._svgjsListenerId = ++SVG.listenerId;\n    }\n    events.split(SVG.regex.delimiter).forEach(function (event) {\n      var ev = event.split('.')[0];\n      var ns = event.split('.')[1] || '*';\n\n      // ensure valid object\n      bag[ev] = bag[ev] || {};\n      bag[ev][ns] = bag[ev][ns] || {};\n\n      // reference listener\n      bag[ev][ns][listener._svgjsListenerId] = l;\n\n      // add listener\n      n.addEventListener(ev, l, options || false);\n    });\n  };\n\n  // Add event unbinder in the SVG namespace\n  SVG.off = function (node, events, listener, options) {\n    var n = node instanceof SVG.Element ? node.node : node;\n    if (!n.instance) return;\n\n    // listener can be a function or a number\n    if (typeof listener === 'function') {\n      listener = listener._svgjsListenerId;\n      if (!listener) return;\n    }\n    var bag = n.instance._events;\n    (events || '').split(SVG.regex.delimiter).forEach(function (event) {\n      var ev = event && event.split('.')[0];\n      var ns = event && event.split('.')[1];\n      var namespace, l;\n      if (listener) {\n        // remove listener reference\n        if (bag[ev] && bag[ev][ns || '*']) {\n          // removeListener\n          n.removeEventListener(ev, bag[ev][ns || '*'][listener], options || false);\n          delete bag[ev][ns || '*'][listener];\n        }\n      } else if (ev && ns) {\n        // remove all listeners for a namespaced event\n        if (bag[ev] && bag[ev][ns]) {\n          for (l in bag[ev][ns]) {\n            SVG.off(n, [ev, ns].join('.'), l);\n          }\n          delete bag[ev][ns];\n        }\n      } else if (ns) {\n        // remove all listeners for a specific namespace\n        for (event in bag) {\n          for (namespace in bag[event]) {\n            if (ns === namespace) {\n              SVG.off(n, [event, ns].join('.'));\n            }\n          }\n        }\n      } else if (ev) {\n        // remove all listeners for the event\n        if (bag[ev]) {\n          for (namespace in bag[ev]) {\n            SVG.off(n, [ev, namespace].join('.'));\n          }\n          delete bag[ev];\n        }\n      } else {\n        // remove all listeners on a given node\n        for (event in bag) {\n          SVG.off(n, event);\n        }\n        n.instance._events = {};\n      }\n    });\n  };\n  SVG.extend(SVG.Element, {\n    // Bind given event to listener\n    on: function (event, listener, binding, options) {\n      SVG.on(this, event, listener, binding, options);\n      return this;\n    },\n    // Unbind event from listener\n    off: function (event, listener) {\n      SVG.off(this.node, event, listener);\n      return this;\n    },\n    fire: function (event, data) {\n      // Dispatch event\n      if (event instanceof window.Event) {\n        this.node.dispatchEvent(event);\n      } else {\n        this.node.dispatchEvent(event = new SVG.CustomEvent(event, {\n          detail: data,\n          cancelable: true\n        }));\n      }\n      this._event = event;\n      return this;\n    },\n    event: function () {\n      return this._event;\n    }\n  });\n  SVG.Defs = SVG.invent({\n    // Initialize node\n    create: 'defs'\n\n    // Inherit from\n    ,\n    inherit: SVG.Container\n  });\n  SVG.G = SVG.invent({\n    // Initialize node\n    create: 'g'\n\n    // Inherit from\n    ,\n    inherit: SVG.Container\n\n    // Add class methods\n    ,\n    extend: {\n      // Move over x-axis\n      x: function (x) {\n        return x == null ? this.transform('x') : this.transform({\n          x: x - this.x()\n        }, true);\n      }\n      // Move over y-axis\n      ,\n      y: function (y) {\n        return y == null ? this.transform('y') : this.transform({\n          y: y - this.y()\n        }, true);\n      }\n      // Move by center over x-axis\n      ,\n      cx: function (x) {\n        return x == null ? this.gbox().cx : this.x(x - this.gbox().width / 2);\n      }\n      // Move by center over y-axis\n      ,\n      cy: function (y) {\n        return y == null ? this.gbox().cy : this.y(y - this.gbox().height / 2);\n      },\n      gbox: function () {\n        var bbox = this.bbox(),\n          trans = this.transform();\n        bbox.x += trans.x;\n        bbox.x2 += trans.x;\n        bbox.cx += trans.x;\n        bbox.y += trans.y;\n        bbox.y2 += trans.y;\n        bbox.cy += trans.y;\n        return bbox;\n      }\n    }\n\n    // Add parent method\n    ,\n    construct: {\n      // Create a group element\n      group: function () {\n        return this.put(new SVG.G());\n      }\n    }\n  });\n  SVG.Doc = SVG.invent({\n    // Initialize node\n    create: function (element) {\n      if (element) {\n        // ensure the presence of a dom element\n        element = typeof element == 'string' ? document.getElementById(element) : element;\n\n        // If the target is an svg element, use that element as the main wrapper.\n        // This allows svg.js to work with svg documents as well.\n        if (element.nodeName == 'svg') {\n          this.constructor.call(this, element);\n        } else {\n          this.constructor.call(this, SVG.create('svg'));\n          element.appendChild(this.node);\n          this.size('100%', '100%');\n        }\n\n        // set svg element attributes and ensure defs node\n        this.namespace().defs();\n      }\n    }\n\n    // Inherit from\n    ,\n    inherit: SVG.Container\n\n    // Add class methods\n    ,\n    extend: {\n      // Add namespaces\n      namespace: function () {\n        return this.attr({\n          xmlns: SVG.ns,\n          version: '1.1'\n        }).attr('xmlns:xlink', SVG.xlink, SVG.xmlns).attr('xmlns:svgjs', SVG.svgjs, SVG.xmlns);\n      }\n      // Creates and returns defs element\n      ,\n      defs: function () {\n        if (!this._defs) {\n          var defs;\n\n          // Find or create a defs element in this instance\n          if (defs = this.node.getElementsByTagName('defs')[0]) this._defs = SVG.adopt(defs);else this._defs = new SVG.Defs();\n\n          // Make sure the defs node is at the end of the stack\n          this.node.appendChild(this._defs.node);\n        }\n        return this._defs;\n      }\n      // custom parent method\n      ,\n      parent: function () {\n        if (!this.node.parentNode || this.node.parentNode.nodeName == '#document' || this.node.parentNode.nodeName == '#document-fragment') return null;\n        return this.node.parentNode;\n      }\n      // Fix for possible sub-pixel offset. See:\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=608812\n      ,\n      spof: function () {\n        var pos = this.node.getScreenCTM();\n        if (pos) this.style('left', -pos.e % 1 + 'px').style('top', -pos.f % 1 + 'px');\n        return this;\n      }\n\n      // Removes the doc from the DOM\n      ,\n      remove: function () {\n        if (this.parent()) {\n          this.parent().removeChild(this.node);\n        }\n        return this;\n      },\n      clear: function () {\n        // remove children\n        while (this.node.hasChildNodes()) this.node.removeChild(this.node.lastChild);\n\n        // remove defs reference\n        delete this._defs;\n\n        // add back parser\n        if (!SVG.parser.draw.parentNode) this.node.appendChild(SVG.parser.draw);\n        return this;\n      },\n      clone: function (parent) {\n        // write dom data to the dom so the clone can pickup the data\n        this.writeDataToDom();\n\n        // get reference to node\n        var node = this.node;\n\n        // clone element and assign new id\n        var clone = assignNewId(node.cloneNode(true));\n\n        // insert the clone in the given parent or after myself\n        if (parent) {\n          (parent.node || parent).appendChild(clone.node);\n        } else {\n          node.parentNode.insertBefore(clone.node, node.nextSibling);\n        }\n        return clone;\n      }\n    }\n  });\n\n  // ### This module adds backward / forward functionality to elements.\n\n  //\n  SVG.extend(SVG.Element, {\n    // Get all siblings, including myself\n    siblings: function () {\n      return this.parent().children();\n    }\n    // Get the curent position siblings\n    ,\n    position: function () {\n      return this.parent().index(this);\n    }\n    // Get the next element (will return null if there is none)\n    ,\n    next: function () {\n      return this.siblings()[this.position() + 1];\n    }\n    // Get the next element (will return null if there is none)\n    ,\n    previous: function () {\n      return this.siblings()[this.position() - 1];\n    }\n    // Send given element one step forward\n    ,\n    forward: function () {\n      var i = this.position() + 1,\n        p = this.parent();\n\n      // move node one step forward\n      p.removeElement(this).add(this, i);\n\n      // make sure defs node is always at the top\n      if (p instanceof SVG.Doc) p.node.appendChild(p.defs().node);\n      return this;\n    }\n    // Send given element one step backward\n    ,\n    backward: function () {\n      var i = this.position();\n      if (i > 0) this.parent().removeElement(this).add(this, i - 1);\n      return this;\n    }\n    // Send given element all the way to the front\n    ,\n    front: function () {\n      var p = this.parent();\n\n      // Move node forward\n      p.node.appendChild(this.node);\n\n      // Make sure defs node is always at the top\n      if (p instanceof SVG.Doc) p.node.appendChild(p.defs().node);\n      return this;\n    }\n    // Send given element all the way to the back\n    ,\n    back: function () {\n      if (this.position() > 0) this.parent().removeElement(this).add(this, 0);\n      return this;\n    }\n    // Inserts a given element before the targeted element\n    ,\n    before: function (element) {\n      element.remove();\n      var i = this.position();\n      this.parent().add(element, i);\n      return this;\n    }\n    // Insters a given element after the targeted element\n    ,\n    after: function (element) {\n      element.remove();\n      var i = this.position();\n      this.parent().add(element, i + 1);\n      return this;\n    }\n  });\n  SVG.Mask = SVG.invent({\n    // Initialize node\n    create: function () {\n      this.constructor.call(this, SVG.create('mask'));\n\n      // keep references to masked elements\n      this.targets = [];\n    }\n\n    // Inherit from\n    ,\n    inherit: SVG.Container\n\n    // Add class methods\n    ,\n    extend: {\n      // Unmask all masked elements and remove itself\n      remove: function () {\n        // unmask all targets\n        for (var i = this.targets.length - 1; i >= 0; i--) if (this.targets[i]) this.targets[i].unmask();\n        this.targets = [];\n\n        // remove mask from parent\n        SVG.Element.prototype.remove.call(this);\n        return this;\n      }\n    }\n\n    // Add parent method\n    ,\n    construct: {\n      // Create masking element\n      mask: function () {\n        return this.defs().put(new SVG.Mask());\n      }\n    }\n  });\n  SVG.extend(SVG.Element, {\n    // Distribute mask to svg element\n    maskWith: function (element) {\n      // use given mask or create a new one\n      this.masker = element instanceof SVG.Mask ? element : this.parent().mask().add(element);\n\n      // store reverence on self in mask\n      this.masker.targets.push(this);\n\n      // apply mask\n      return this.attr('mask', 'url(\"#' + this.masker.attr('id') + '\")');\n    }\n    // Unmask element\n    ,\n    unmask: function () {\n      delete this.masker;\n      return this.attr('mask', null);\n    }\n  });\n  SVG.ClipPath = SVG.invent({\n    // Initialize node\n    create: function () {\n      this.constructor.call(this, SVG.create('clipPath'));\n\n      // keep references to clipped elements\n      this.targets = [];\n    }\n\n    // Inherit from\n    ,\n    inherit: SVG.Container\n\n    // Add class methods\n    ,\n    extend: {\n      // Unclip all clipped elements and remove itself\n      remove: function () {\n        // unclip all targets\n        for (var i = this.targets.length - 1; i >= 0; i--) if (this.targets[i]) this.targets[i].unclip();\n        this.targets = [];\n\n        // remove clipPath from parent\n        this.parent().removeElement(this);\n        return this;\n      }\n    }\n\n    // Add parent method\n    ,\n    construct: {\n      // Create clipping element\n      clip: function () {\n        return this.defs().put(new SVG.ClipPath());\n      }\n    }\n  });\n\n  //\n  SVG.extend(SVG.Element, {\n    // Distribute clipPath to svg element\n    clipWith: function (element) {\n      // use given clip or create a new one\n      this.clipper = element instanceof SVG.ClipPath ? element : this.parent().clip().add(element);\n\n      // store reverence on self in mask\n      this.clipper.targets.push(this);\n\n      // apply mask\n      return this.attr('clip-path', 'url(\"#' + this.clipper.attr('id') + '\")');\n    }\n    // Unclip element\n    ,\n    unclip: function () {\n      delete this.clipper;\n      return this.attr('clip-path', null);\n    }\n  });\n  SVG.Gradient = SVG.invent({\n    // Initialize node\n    create: function (type) {\n      this.constructor.call(this, SVG.create(type + 'Gradient'));\n\n      // store type\n      this.type = type;\n    }\n\n    // Inherit from\n    ,\n    inherit: SVG.Container\n\n    // Add class methods\n    ,\n    extend: {\n      // Add a color stop\n      at: function (offset, color, opacity) {\n        return this.put(new SVG.Stop()).update(offset, color, opacity);\n      }\n      // Update gradient\n      ,\n      update: function (block) {\n        // remove all stops\n        this.clear();\n\n        // invoke passed block\n        if (typeof block == 'function') block.call(this, this);\n        return this;\n      }\n      // Return the fill id\n      ,\n      fill: function () {\n        return 'url(#' + this.id() + ')';\n      }\n      // Alias string convertion to fill\n      ,\n      toString: function () {\n        return this.fill();\n      }\n      // custom attr to handle transform\n      ,\n      attr: function (a, b, c) {\n        if (a == 'transform') a = 'gradientTransform';\n        return SVG.Container.prototype.attr.call(this, a, b, c);\n      }\n    }\n\n    // Add parent method\n    ,\n    construct: {\n      // Create gradient element in defs\n      gradient: function (type, block) {\n        return this.defs().gradient(type, block);\n      }\n    }\n  });\n\n  // Add animatable methods to both gradient and fx module\n  SVG.extend(SVG.Gradient, SVG.FX, {\n    // From position\n    from: function (x, y) {\n      return (this._target || this).type == 'radial' ? this.attr({\n        fx: new SVG.Number(x),\n        fy: new SVG.Number(y)\n      }) : this.attr({\n        x1: new SVG.Number(x),\n        y1: new SVG.Number(y)\n      });\n    }\n    // To position\n    ,\n    to: function (x, y) {\n      return (this._target || this).type == 'radial' ? this.attr({\n        cx: new SVG.Number(x),\n        cy: new SVG.Number(y)\n      }) : this.attr({\n        x2: new SVG.Number(x),\n        y2: new SVG.Number(y)\n      });\n    }\n  });\n\n  // Base gradient generation\n  SVG.extend(SVG.Defs, {\n    // define gradient\n    gradient: function (type, block) {\n      return this.put(new SVG.Gradient(type)).update(block);\n    }\n  });\n  SVG.Stop = SVG.invent({\n    // Initialize node\n    create: 'stop'\n\n    // Inherit from\n    ,\n    inherit: SVG.Element\n\n    // Add class methods\n    ,\n    extend: {\n      // add color stops\n      update: function (o) {\n        if (typeof o == 'number' || o instanceof SVG.Number) {\n          o = {\n            offset: arguments[0],\n            color: arguments[1],\n            opacity: arguments[2]\n          };\n        }\n\n        // set attributes\n        if (o.opacity != null) this.attr('stop-opacity', o.opacity);\n        if (o.color != null) this.attr('stop-color', o.color);\n        if (o.offset != null) this.attr('offset', new SVG.Number(o.offset));\n        return this;\n      }\n    }\n  });\n  SVG.Pattern = SVG.invent({\n    // Initialize node\n    create: 'pattern'\n\n    // Inherit from\n    ,\n    inherit: SVG.Container\n\n    // Add class methods\n    ,\n    extend: {\n      // Return the fill id\n      fill: function () {\n        return 'url(#' + this.id() + ')';\n      }\n      // Update pattern by rebuilding\n      ,\n      update: function (block) {\n        // remove content\n        this.clear();\n\n        // invoke passed block\n        if (typeof block == 'function') block.call(this, this);\n        return this;\n      }\n      // Alias string convertion to fill\n      ,\n      toString: function () {\n        return this.fill();\n      }\n      // custom attr to handle transform\n      ,\n      attr: function (a, b, c) {\n        if (a == 'transform') a = 'patternTransform';\n        return SVG.Container.prototype.attr.call(this, a, b, c);\n      }\n    }\n\n    // Add parent method\n    ,\n    construct: {\n      // Create pattern element in defs\n      pattern: function (width, height, block) {\n        return this.defs().pattern(width, height, block);\n      }\n    }\n  });\n  SVG.extend(SVG.Defs, {\n    // Define gradient\n    pattern: function (width, height, block) {\n      return this.put(new SVG.Pattern()).update(block).attr({\n        x: 0,\n        y: 0,\n        width: width,\n        height: height,\n        patternUnits: 'userSpaceOnUse'\n      });\n    }\n  });\n  SVG.Shape = SVG.invent({\n    // Initialize node\n    create: function (element) {\n      this.constructor.call(this, element);\n    }\n\n    // Inherit from\n    ,\n    inherit: SVG.Element\n  });\n  SVG.Bare = SVG.invent({\n    // Initialize\n    create: function (element, inherit) {\n      // construct element\n      this.constructor.call(this, SVG.create(element));\n\n      // inherit custom methods\n      if (inherit) for (var method in inherit.prototype) if (typeof inherit.prototype[method] === 'function') this[method] = inherit.prototype[method];\n    }\n\n    // Inherit from\n    ,\n    inherit: SVG.Element\n\n    // Add methods\n    ,\n    extend: {\n      // Insert some plain text\n      words: function (text) {\n        // remove contents\n        while (this.node.hasChildNodes()) this.node.removeChild(this.node.lastChild);\n\n        // create text node\n        this.node.appendChild(document.createTextNode(text));\n        return this;\n      }\n    }\n  });\n  SVG.extend(SVG.Parent, {\n    // Create an element that is not described by SVG.js\n    element: function (element, inherit) {\n      return this.put(new SVG.Bare(element, inherit));\n    }\n  });\n  SVG.Symbol = SVG.invent({\n    // Initialize node\n    create: 'symbol'\n\n    // Inherit from\n    ,\n    inherit: SVG.Container,\n    construct: {\n      // create symbol\n      symbol: function () {\n        return this.put(new SVG.Symbol());\n      }\n    }\n  });\n  SVG.Use = SVG.invent({\n    // Initialize node\n    create: 'use'\n\n    // Inherit from\n    ,\n    inherit: SVG.Shape\n\n    // Add class methods\n    ,\n    extend: {\n      // Use element as a reference\n      element: function (element, file) {\n        // Set lined element\n        return this.attr('href', (file || '') + '#' + element, SVG.xlink);\n      }\n    }\n\n    // Add parent method\n    ,\n    construct: {\n      // Create a use element\n      use: function (element, file) {\n        return this.put(new SVG.Use()).element(element, file);\n      }\n    }\n  });\n  SVG.Rect = SVG.invent({\n    // Initialize node\n    create: 'rect'\n\n    // Inherit from\n    ,\n    inherit: SVG.Shape\n\n    // Add parent method\n    ,\n    construct: {\n      // Create a rect element\n      rect: function (width, height) {\n        return this.put(new SVG.Rect()).size(width, height);\n      }\n    }\n  });\n  SVG.Circle = SVG.invent({\n    // Initialize node\n    create: 'circle'\n\n    // Inherit from\n    ,\n    inherit: SVG.Shape\n\n    // Add parent method\n    ,\n    construct: {\n      // Create circle element, based on ellipse\n      circle: function (size) {\n        return this.put(new SVG.Circle()).rx(new SVG.Number(size).divide(2)).move(0, 0);\n      }\n    }\n  });\n  SVG.extend(SVG.Circle, SVG.FX, {\n    // Radius x value\n    rx: function (rx) {\n      return this.attr('r', rx);\n    }\n    // Alias radius x value\n    ,\n    ry: function (ry) {\n      return this.rx(ry);\n    }\n  });\n  SVG.Ellipse = SVG.invent({\n    // Initialize node\n    create: 'ellipse'\n\n    // Inherit from\n    ,\n    inherit: SVG.Shape\n\n    // Add parent method\n    ,\n    construct: {\n      // Create an ellipse\n      ellipse: function (width, height) {\n        return this.put(new SVG.Ellipse()).size(width, height).move(0, 0);\n      }\n    }\n  });\n  SVG.extend(SVG.Ellipse, SVG.Rect, SVG.FX, {\n    // Radius x value\n    rx: function (rx) {\n      return this.attr('rx', rx);\n    }\n    // Radius y value\n    ,\n    ry: function (ry) {\n      return this.attr('ry', ry);\n    }\n  });\n\n  // Add common method\n  SVG.extend(SVG.Circle, SVG.Ellipse, {\n    // Move over x-axis\n    x: function (x) {\n      return x == null ? this.cx() - this.rx() : this.cx(x + this.rx());\n    }\n    // Move over y-axis\n    ,\n    y: function (y) {\n      return y == null ? this.cy() - this.ry() : this.cy(y + this.ry());\n    }\n    // Move by center over x-axis\n    ,\n    cx: function (x) {\n      return x == null ? this.attr('cx') : this.attr('cx', x);\n    }\n    // Move by center over y-axis\n    ,\n    cy: function (y) {\n      return y == null ? this.attr('cy') : this.attr('cy', y);\n    }\n    // Set width of element\n    ,\n    width: function (width) {\n      return width == null ? this.rx() * 2 : this.rx(new SVG.Number(width).divide(2));\n    }\n    // Set height of element\n    ,\n    height: function (height) {\n      return height == null ? this.ry() * 2 : this.ry(new SVG.Number(height).divide(2));\n    }\n    // Custom size function\n    ,\n    size: function (width, height) {\n      var p = proportionalSize(this, width, height);\n      return this.rx(new SVG.Number(p.width).divide(2)).ry(new SVG.Number(p.height).divide(2));\n    }\n  });\n  SVG.Line = SVG.invent({\n    // Initialize node\n    create: 'line'\n\n    // Inherit from\n    ,\n    inherit: SVG.Shape\n\n    // Add class methods\n    ,\n    extend: {\n      // Get array\n      array: function () {\n        return new SVG.PointArray([[this.attr('x1'), this.attr('y1')], [this.attr('x2'), this.attr('y2')]]);\n      }\n      // Overwrite native plot() method\n      ,\n      plot: function (x1, y1, x2, y2) {\n        if (x1 == null) return this.array();else if (typeof y1 !== 'undefined') x1 = {\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2\n        };else x1 = new SVG.PointArray(x1).toLine();\n        return this.attr(x1);\n      }\n      // Move by left top corner\n      ,\n      move: function (x, y) {\n        return this.attr(this.array().move(x, y).toLine());\n      }\n      // Set element size to given width and height\n      ,\n      size: function (width, height) {\n        var p = proportionalSize(this, width, height);\n        return this.attr(this.array().size(p.width, p.height).toLine());\n      }\n    }\n\n    // Add parent method\n    ,\n    construct: {\n      // Create a line element\n      line: function (x1, y1, x2, y2) {\n        // make sure plot is called as a setter\n        // x1 is not necessarily a number, it can also be an array, a string and a SVG.PointArray\n        return SVG.Line.prototype.plot.apply(this.put(new SVG.Line()), x1 != null ? [x1, y1, x2, y2] : [0, 0, 0, 0]);\n      }\n    }\n  });\n  SVG.Polyline = SVG.invent({\n    // Initialize node\n    create: 'polyline'\n\n    // Inherit from\n    ,\n    inherit: SVG.Shape\n\n    // Add parent method\n    ,\n    construct: {\n      // Create a wrapped polyline element\n      polyline: function (p) {\n        // make sure plot is called as a setter\n        return this.put(new SVG.Polyline()).plot(p || new SVG.PointArray());\n      }\n    }\n  });\n  SVG.Polygon = SVG.invent({\n    // Initialize node\n    create: 'polygon'\n\n    // Inherit from\n    ,\n    inherit: SVG.Shape\n\n    // Add parent method\n    ,\n    construct: {\n      // Create a wrapped polygon element\n      polygon: function (p) {\n        // make sure plot is called as a setter\n        return this.put(new SVG.Polygon()).plot(p || new SVG.PointArray());\n      }\n    }\n  });\n\n  // Add polygon-specific functions\n  SVG.extend(SVG.Polyline, SVG.Polygon, {\n    // Get array\n    array: function () {\n      return this._array || (this._array = new SVG.PointArray(this.attr('points')));\n    }\n    // Plot new path\n    ,\n    plot: function (p) {\n      return p == null ? this.array() : this.clear().attr('points', typeof p == 'string' ? p : this._array = new SVG.PointArray(p));\n    }\n    // Clear array cache\n    ,\n    clear: function () {\n      delete this._array;\n      return this;\n    }\n    // Move by left top corner\n    ,\n    move: function (x, y) {\n      return this.attr('points', this.array().move(x, y));\n    }\n    // Set element size to given width and height\n    ,\n    size: function (width, height) {\n      var p = proportionalSize(this, width, height);\n      return this.attr('points', this.array().size(p.width, p.height));\n    }\n  });\n\n  // unify all point to point elements\n  SVG.extend(SVG.Line, SVG.Polyline, SVG.Polygon, {\n    // Define morphable array\n    morphArray: SVG.PointArray\n    // Move by left top corner over x-axis\n    ,\n    x: function (x) {\n      return x == null ? this.bbox().x : this.move(x, this.bbox().y);\n    }\n    // Move by left top corner over y-axis\n    ,\n    y: function (y) {\n      return y == null ? this.bbox().y : this.move(this.bbox().x, y);\n    }\n    // Set width of element\n    ,\n    width: function (width) {\n      var b = this.bbox();\n      return width == null ? b.width : this.size(width, b.height);\n    }\n    // Set height of element\n    ,\n    height: function (height) {\n      var b = this.bbox();\n      return height == null ? b.height : this.size(b.width, height);\n    }\n  });\n  SVG.Path = SVG.invent({\n    // Initialize node\n    create: 'path'\n\n    // Inherit from\n    ,\n    inherit: SVG.Shape\n\n    // Add class methods\n    ,\n    extend: {\n      // Define morphable array\n      morphArray: SVG.PathArray\n      // Get array\n      ,\n      array: function () {\n        return this._array || (this._array = new SVG.PathArray(this.attr('d')));\n      }\n      // Plot new path\n      ,\n      plot: function (d) {\n        return d == null ? this.array() : this.clear().attr('d', typeof d == 'string' ? d : this._array = new SVG.PathArray(d));\n      }\n      // Clear array cache\n      ,\n      clear: function () {\n        delete this._array;\n        return this;\n      }\n      // Move by left top corner\n      ,\n      move: function (x, y) {\n        return this.attr('d', this.array().move(x, y));\n      }\n      // Move by left top corner over x-axis\n      ,\n      x: function (x) {\n        return x == null ? this.bbox().x : this.move(x, this.bbox().y);\n      }\n      // Move by left top corner over y-axis\n      ,\n      y: function (y) {\n        return y == null ? this.bbox().y : this.move(this.bbox().x, y);\n      }\n      // Set element size to given width and height\n      ,\n      size: function (width, height) {\n        var p = proportionalSize(this, width, height);\n        return this.attr('d', this.array().size(p.width, p.height));\n      }\n      // Set width of element\n      ,\n      width: function (width) {\n        return width == null ? this.bbox().width : this.size(width, this.bbox().height);\n      }\n      // Set height of element\n      ,\n      height: function (height) {\n        return height == null ? this.bbox().height : this.size(this.bbox().width, height);\n      }\n    }\n\n    // Add parent method\n    ,\n    construct: {\n      // Create a wrapped path element\n      path: function (d) {\n        // make sure plot is called as a setter\n        return this.put(new SVG.Path()).plot(d || new SVG.PathArray());\n      }\n    }\n  });\n  SVG.Image = SVG.invent({\n    // Initialize node\n    create: 'image'\n\n    // Inherit from\n    ,\n    inherit: SVG.Shape\n\n    // Add class methods\n    ,\n    extend: {\n      // (re)load image\n      load: function (url) {\n        if (!url) return this;\n        var self = this,\n          img = new window.Image();\n\n        // preload image\n        SVG.on(img, 'load', function () {\n          SVG.off(img);\n          var p = self.parent(SVG.Pattern);\n          if (p === null) return;\n\n          // ensure image size\n          if (self.width() == 0 && self.height() == 0) self.size(img.width, img.height);\n\n          // ensure pattern size if not set\n          if (p && p.width() == 0 && p.height() == 0) p.size(self.width(), self.height());\n\n          // callback\n          if (typeof self._loaded === 'function') self._loaded.call(self, {\n            width: img.width,\n            height: img.height,\n            ratio: img.width / img.height,\n            url: url\n          });\n        });\n        SVG.on(img, 'error', function (e) {\n          SVG.off(img);\n          if (typeof self._error === 'function') {\n            self._error.call(self, e);\n          }\n        });\n        return this.attr('href', img.src = this.src = url, SVG.xlink);\n      }\n      // Add loaded callback\n      ,\n      loaded: function (loaded) {\n        this._loaded = loaded;\n        return this;\n      },\n      error: function (error) {\n        this._error = error;\n        return this;\n      }\n    }\n\n    // Add parent method\n    ,\n    construct: {\n      // create image element, load image and set its size\n      image: function (source, width, height) {\n        return this.put(new SVG.Image()).load(source).size(width || 0, height || width || 0);\n      }\n    }\n  });\n  SVG.Text = SVG.invent({\n    // Initialize node\n    create: function () {\n      this.constructor.call(this, SVG.create('text'));\n      this.dom.leading = new SVG.Number(1.3); // store leading value for rebuilding\n      this._rebuild = true; // enable automatic updating of dy values\n      this._build = false; // disable build mode for adding multiple lines\n\n      // set default font\n      this.attr('font-family', SVG.defaults.attrs['font-family']);\n    }\n\n    // Inherit from\n    ,\n    inherit: SVG.Shape\n\n    // Add class methods\n    ,\n    extend: {\n      // Move over x-axis\n      x: function (x) {\n        // act as getter\n        if (x == null) return this.attr('x');\n        return this.attr('x', x);\n      }\n      // Move over y-axis\n      ,\n      y: function (y) {\n        var oy = this.attr('y'),\n          o = typeof oy === 'number' ? oy - this.bbox().y : 0;\n\n        // act as getter\n        if (y == null) return typeof oy === 'number' ? oy - o : oy;\n        return this.attr('y', typeof y.valueOf() === 'number' ? y + o : y);\n      }\n      // Move center over x-axis\n      ,\n      cx: function (x) {\n        return x == null ? this.bbox().cx : this.x(x - this.bbox().width / 2);\n      }\n      // Move center over y-axis\n      ,\n      cy: function (y) {\n        return y == null ? this.bbox().cy : this.y(y - this.bbox().height / 2);\n      }\n      // Set the text content\n      ,\n      text: function (text) {\n        // act as getter\n        if (typeof text === 'undefined') {\n          var text = '';\n          var children = this.node.childNodes;\n          for (var i = 0, len = children.length; i < len; ++i) {\n            // add newline if its not the first child and newLined is set to true\n            if (i != 0 && children[i].nodeType != 3 && SVG.adopt(children[i]).dom.newLined == true) {\n              text += '\\n';\n            }\n\n            // add content of this node\n            text += children[i].textContent;\n          }\n          return text;\n        }\n\n        // remove existing content\n        this.clear().build(true);\n        if (typeof text === 'function') {\n          // call block\n          text.call(this, this);\n        } else {\n          // store text and make sure text is not blank\n          text = text.split('\\n');\n\n          // build new lines\n          for (var i = 0, il = text.length; i < il; i++) this.tspan(text[i]).newLine();\n        }\n\n        // disable build mode and rebuild lines\n        return this.build(false).rebuild();\n      }\n      // Set font size\n      ,\n      size: function (size) {\n        return this.attr('font-size', size).rebuild();\n      }\n      // Set / get leading\n      ,\n      leading: function (value) {\n        // act as getter\n        if (value == null) return this.dom.leading;\n\n        // act as setter\n        this.dom.leading = new SVG.Number(value);\n        return this.rebuild();\n      }\n      // Get all the first level lines\n      ,\n      lines: function () {\n        var node = (this.textPath && this.textPath() || this).node;\n\n        // filter tspans and map them to SVG.js instances\n        var lines = SVG.utils.map(SVG.utils.filterSVGElements(node.childNodes), function (el) {\n          return SVG.adopt(el);\n        });\n\n        // return an instance of SVG.set\n        return new SVG.Set(lines);\n      }\n      // Rebuild appearance type\n      ,\n      rebuild: function (rebuild) {\n        // store new rebuild flag if given\n        if (typeof rebuild == 'boolean') this._rebuild = rebuild;\n\n        // define position of all lines\n        if (this._rebuild) {\n          var self = this,\n            blankLineOffset = 0,\n            dy = this.dom.leading * new SVG.Number(this.attr('font-size'));\n          this.lines().each(function () {\n            if (this.dom.newLined) {\n              if (!self.textPath()) this.attr('x', self.attr('x'));\n              if (this.text() == '\\n') {\n                blankLineOffset += dy;\n              } else {\n                this.attr('dy', dy + blankLineOffset);\n                blankLineOffset = 0;\n              }\n            }\n          });\n          this.fire('rebuild');\n        }\n        return this;\n      }\n      // Enable / disable build mode\n      ,\n      build: function (build) {\n        this._build = !!build;\n        return this;\n      }\n      // overwrite method from parent to set data properly\n      ,\n      setData: function (o) {\n        this.dom = o;\n        this.dom.leading = new SVG.Number(o.leading || 1.3);\n        return this;\n      }\n    }\n\n    // Add parent method\n    ,\n    construct: {\n      // Create text element\n      text: function (text) {\n        return this.put(new SVG.Text()).text(text);\n      }\n      // Create plain text element\n      ,\n      plain: function (text) {\n        return this.put(new SVG.Text()).plain(text);\n      }\n    }\n  });\n  SVG.Tspan = SVG.invent({\n    // Initialize node\n    create: 'tspan'\n\n    // Inherit from\n    ,\n    inherit: SVG.Shape\n\n    // Add class methods\n    ,\n    extend: {\n      // Set text content\n      text: function (text) {\n        if (text == null) return this.node.textContent + (this.dom.newLined ? '\\n' : '');\n        typeof text === 'function' ? text.call(this, this) : this.plain(text);\n        return this;\n      }\n      // Shortcut dx\n      ,\n      dx: function (dx) {\n        return this.attr('dx', dx);\n      }\n      // Shortcut dy\n      ,\n      dy: function (dy) {\n        return this.attr('dy', dy);\n      }\n      // Create new line\n      ,\n      newLine: function () {\n        // fetch text parent\n        var t = this.parent(SVG.Text);\n\n        // mark new line\n        this.dom.newLined = true;\n\n        // apply new hy¡n\n        return this.dy(t.dom.leading * t.attr('font-size')).attr('x', t.x());\n      }\n    }\n  });\n  SVG.extend(SVG.Text, SVG.Tspan, {\n    // Create plain text node\n    plain: function (text) {\n      // clear if build mode is disabled\n      if (this._build === false) this.clear();\n\n      // create text node\n      this.node.appendChild(document.createTextNode(text));\n      return this;\n    }\n    // Create a tspan\n    ,\n    tspan: function (text) {\n      var node = (this.textPath && this.textPath() || this).node,\n        tspan = new SVG.Tspan();\n\n      // clear if build mode is disabled\n      if (this._build === false) this.clear();\n\n      // add new tspan\n      node.appendChild(tspan.node);\n      return tspan.text(text);\n    }\n    // Clear all lines\n    ,\n    clear: function () {\n      var node = (this.textPath && this.textPath() || this).node;\n\n      // remove existing child nodes\n      while (node.hasChildNodes()) node.removeChild(node.lastChild);\n      return this;\n    }\n    // Get length of text element\n    ,\n    length: function () {\n      return this.node.getComputedTextLength();\n    }\n  });\n  SVG.TextPath = SVG.invent({\n    // Initialize node\n    create: 'textPath'\n\n    // Inherit from\n    ,\n    inherit: SVG.Parent\n\n    // Define parent class\n    ,\n    parent: SVG.Text\n\n    // Add parent method\n    ,\n    construct: {\n      morphArray: SVG.PathArray\n      // Create path for text to run on\n      ,\n      path: function (d) {\n        // create textPath element\n        var path = new SVG.TextPath(),\n          track = this.doc().defs().path(d);\n\n        // move lines to textpath\n        while (this.node.hasChildNodes()) path.node.appendChild(this.node.firstChild);\n\n        // add textPath element as child node\n        this.node.appendChild(path.node);\n\n        // link textPath to path and add content\n        path.attr('href', '#' + track, SVG.xlink);\n        return this;\n      }\n      // return the array of the path track element\n      ,\n      array: function () {\n        var track = this.track();\n        return track ? track.array() : null;\n      }\n      // Plot path if any\n      ,\n      plot: function (d) {\n        var track = this.track(),\n          pathArray = null;\n        if (track) {\n          pathArray = track.plot(d);\n        }\n        return d == null ? pathArray : this;\n      }\n      // Get the path track element\n      ,\n      track: function () {\n        var path = this.textPath();\n        if (path) return path.reference('href');\n      }\n      // Get the textPath child\n      ,\n      textPath: function () {\n        if (this.node.firstChild && this.node.firstChild.nodeName == 'textPath') return SVG.adopt(this.node.firstChild);\n      }\n    }\n  });\n  SVG.Nested = SVG.invent({\n    // Initialize node\n    create: function () {\n      this.constructor.call(this, SVG.create('svg'));\n      this.style('overflow', 'visible');\n    }\n\n    // Inherit from\n    ,\n    inherit: SVG.Container\n\n    // Add parent method\n    ,\n    construct: {\n      // Create nested svg document\n      nested: function () {\n        return this.put(new SVG.Nested());\n      }\n    }\n  });\n  SVG.A = SVG.invent({\n    // Initialize node\n    create: 'a'\n\n    // Inherit from\n    ,\n    inherit: SVG.Container\n\n    // Add class methods\n    ,\n    extend: {\n      // Link url\n      to: function (url) {\n        return this.attr('href', url, SVG.xlink);\n      }\n      // Link show attribute\n      ,\n      show: function (target) {\n        return this.attr('show', target, SVG.xlink);\n      }\n      // Link target attribute\n      ,\n      target: function (target) {\n        return this.attr('target', target);\n      }\n    }\n\n    // Add parent method\n    ,\n    construct: {\n      // Create a hyperlink element\n      link: function (url) {\n        return this.put(new SVG.A()).to(url);\n      }\n    }\n  });\n  SVG.extend(SVG.Element, {\n    // Create a hyperlink element\n    linkTo: function (url) {\n      var link = new SVG.A();\n      if (typeof url == 'function') url.call(link, link);else link.to(url);\n      return this.parent().put(link).put(this);\n    }\n  });\n  SVG.Marker = SVG.invent({\n    // Initialize node\n    create: 'marker'\n\n    // Inherit from\n    ,\n    inherit: SVG.Container\n\n    // Add class methods\n    ,\n    extend: {\n      // Set width of element\n      width: function (width) {\n        return this.attr('markerWidth', width);\n      }\n      // Set height of element\n      ,\n      height: function (height) {\n        return this.attr('markerHeight', height);\n      }\n      // Set marker refX and refY\n      ,\n      ref: function (x, y) {\n        return this.attr('refX', x).attr('refY', y);\n      }\n      // Update marker\n      ,\n      update: function (block) {\n        // remove all content\n        this.clear();\n\n        // invoke passed block\n        if (typeof block == 'function') block.call(this, this);\n        return this;\n      }\n      // Return the fill id\n      ,\n      toString: function () {\n        return 'url(#' + this.id() + ')';\n      }\n    }\n\n    // Add parent method\n    ,\n    construct: {\n      marker: function (width, height, block) {\n        // Create marker element in defs\n        return this.defs().marker(width, height, block);\n      }\n    }\n  });\n  SVG.extend(SVG.Defs, {\n    // Create marker\n    marker: function (width, height, block) {\n      // Set default viewbox to match the width and height, set ref to cx and cy and set orient to auto\n      return this.put(new SVG.Marker()).size(width, height).ref(width / 2, height / 2).viewbox(0, 0, width, height).attr('orient', 'auto').update(block);\n    }\n  });\n  SVG.extend(SVG.Line, SVG.Polyline, SVG.Polygon, SVG.Path, {\n    // Create and attach markers\n    marker: function (marker, width, height, block) {\n      var attr = ['marker'];\n\n      // Build attribute name\n      if (marker != 'all') attr.push(marker);\n      attr = attr.join('-');\n\n      // Set marker attribute\n      marker = arguments[1] instanceof SVG.Marker ? arguments[1] : this.doc().marker(width, height, block);\n      return this.attr(attr, marker);\n    }\n  });\n  // Define list of available attributes for stroke and fill\n  var sugar = {\n    stroke: ['color', 'width', 'opacity', 'linecap', 'linejoin', 'miterlimit', 'dasharray', 'dashoffset'],\n    fill: ['color', 'opacity', 'rule'],\n    prefix: function (t, a) {\n      return a == 'color' ? t : t + '-' + a;\n    }\n  }\n\n  // Add sugar for fill and stroke\n  ;\n  ['fill', 'stroke'].forEach(function (m) {\n    var i,\n      extension = {};\n    extension[m] = function (o) {\n      if (typeof o == 'undefined') return this;\n      if (typeof o == 'string' || SVG.Color.isRgb(o) || o && typeof o.fill === 'function') this.attr(m, o);else\n        // set all attributes from sugar.fill and sugar.stroke list\n        for (i = sugar[m].length - 1; i >= 0; i--) if (o[sugar[m][i]] != null) this.attr(sugar.prefix(m, sugar[m][i]), o[sugar[m][i]]);\n      return this;\n    };\n    SVG.extend(SVG.Element, SVG.FX, extension);\n  });\n  SVG.extend(SVG.Element, SVG.FX, {\n    // Map rotation to transform\n    rotate: function (d, cx, cy) {\n      return this.transform({\n        rotation: d,\n        cx: cx,\n        cy: cy\n      });\n    }\n    // Map skew to transform\n    ,\n    skew: function (x, y, cx, cy) {\n      return arguments.length == 1 || arguments.length == 3 ? this.transform({\n        skew: x,\n        cx: y,\n        cy: cx\n      }) : this.transform({\n        skewX: x,\n        skewY: y,\n        cx: cx,\n        cy: cy\n      });\n    }\n    // Map scale to transform\n    ,\n    scale: function (x, y, cx, cy) {\n      return arguments.length == 1 || arguments.length == 3 ? this.transform({\n        scale: x,\n        cx: y,\n        cy: cx\n      }) : this.transform({\n        scaleX: x,\n        scaleY: y,\n        cx: cx,\n        cy: cy\n      });\n    }\n    // Map translate to transform\n    ,\n    translate: function (x, y) {\n      return this.transform({\n        x: x,\n        y: y\n      });\n    }\n    // Map flip to transform\n    ,\n    flip: function (a, o) {\n      o = typeof a == 'number' ? a : o;\n      return this.transform({\n        flip: a || 'both',\n        offset: o\n      });\n    }\n    // Map matrix to transform\n    ,\n    matrix: function (m) {\n      return this.attr('transform', new SVG.Matrix(arguments.length == 6 ? [].slice.call(arguments) : m));\n    }\n    // Opacity\n    ,\n    opacity: function (value) {\n      return this.attr('opacity', value);\n    }\n    // Relative move over x axis\n    ,\n    dx: function (x) {\n      return this.x(new SVG.Number(x).plus(this instanceof SVG.FX ? 0 : this.x()), true);\n    }\n    // Relative move over y axis\n    ,\n    dy: function (y) {\n      return this.y(new SVG.Number(y).plus(this instanceof SVG.FX ? 0 : this.y()), true);\n    }\n    // Relative move over x and y axes\n    ,\n    dmove: function (x, y) {\n      return this.dx(x).dy(y);\n    }\n  });\n  SVG.extend(SVG.Rect, SVG.Ellipse, SVG.Circle, SVG.Gradient, SVG.FX, {\n    // Add x and y radius\n    radius: function (x, y) {\n      var type = (this._target || this).type;\n      return type == 'radial' || type == 'circle' ? this.attr('r', new SVG.Number(x)) : this.rx(x).ry(y == null ? x : y);\n    }\n  });\n  SVG.extend(SVG.Path, {\n    // Get path length\n    length: function () {\n      return this.node.getTotalLength();\n    }\n    // Get point at length\n    ,\n    pointAt: function (length) {\n      return this.node.getPointAtLength(length);\n    }\n  });\n  SVG.extend(SVG.Parent, SVG.Text, SVG.Tspan, SVG.FX, {\n    // Set font\n    font: function (a, v) {\n      if (typeof a == 'object') {\n        for (v in a) this.font(v, a[v]);\n      }\n      return a == 'leading' ? this.leading(v) : a == 'anchor' ? this.attr('text-anchor', v) : a == 'size' || a == 'family' || a == 'weight' || a == 'stretch' || a == 'variant' || a == 'style' ? this.attr('font-' + a, v) : this.attr(a, v);\n    }\n  });\n  SVG.Set = SVG.invent({\n    // Initialize\n    create: function (members) {\n      if (members instanceof SVG.Set) {\n        this.members = members.members.slice();\n      } else {\n        Array.isArray(members) ? this.members = members : this.clear();\n      }\n    }\n\n    // Add class methods\n    ,\n    extend: {\n      // Add element to set\n      add: function () {\n        var i,\n          il,\n          elements = [].slice.call(arguments);\n        for (i = 0, il = elements.length; i < il; i++) this.members.push(elements[i]);\n        return this;\n      }\n      // Remove element from set\n      ,\n      remove: function (element) {\n        var i = this.index(element);\n\n        // remove given child\n        if (i > -1) this.members.splice(i, 1);\n        return this;\n      }\n      // Iterate over all members\n      ,\n      each: function (block) {\n        for (var i = 0, il = this.members.length; i < il; i++) block.apply(this.members[i], [i, this.members]);\n        return this;\n      }\n      // Restore to defaults\n      ,\n      clear: function () {\n        // initialize store\n        this.members = [];\n        return this;\n      }\n      // Get the length of a set\n      ,\n      length: function () {\n        return this.members.length;\n      }\n      // Checks if a given element is present in set\n      ,\n      has: function (element) {\n        return this.index(element) >= 0;\n      }\n      // retuns index of given element in set\n      ,\n      index: function (element) {\n        return this.members.indexOf(element);\n      }\n      // Get member at given index\n      ,\n      get: function (i) {\n        return this.members[i];\n      }\n      // Get first member\n      ,\n      first: function () {\n        return this.get(0);\n      }\n      // Get last member\n      ,\n      last: function () {\n        return this.get(this.members.length - 1);\n      }\n      // Default value\n      ,\n      valueOf: function () {\n        return this.members;\n      }\n      // Get the bounding box of all members included or empty box if set has no items\n      ,\n      bbox: function () {\n        // return an empty box of there are no members\n        if (this.members.length == 0) return new SVG.RBox();\n\n        // get the first rbox and update the target bbox\n        var rbox = this.members[0].rbox(this.members[0].doc());\n        this.each(function () {\n          // user rbox for correct position and visual representation\n          rbox = rbox.merge(this.rbox(this.doc()));\n        });\n        return rbox;\n      }\n    }\n\n    // Add parent method\n    ,\n    construct: {\n      // Create a new set\n      set: function (members) {\n        return new SVG.Set(members);\n      }\n    }\n  });\n  SVG.FX.Set = SVG.invent({\n    // Initialize node\n    create: function (set) {\n      // store reference to set\n      this.set = set;\n    }\n  });\n\n  // Alias methods\n  SVG.Set.inherit = function () {\n    var m,\n      methods = [];\n\n    // gather shape methods\n    for (var m in SVG.Shape.prototype) if (typeof SVG.Shape.prototype[m] == 'function' && typeof SVG.Set.prototype[m] != 'function') methods.push(m);\n\n    // apply shape aliasses\n    methods.forEach(function (method) {\n      SVG.Set.prototype[method] = function () {\n        for (var i = 0, il = this.members.length; i < il; i++) if (this.members[i] && typeof this.members[i][method] == 'function') this.members[i][method].apply(this.members[i], arguments);\n        return method == 'animate' ? this.fx || (this.fx = new SVG.FX.Set(this)) : this;\n      };\n    });\n\n    // clear methods for the next round\n    methods = [];\n\n    // gather fx methods\n    for (var m in SVG.FX.prototype) if (typeof SVG.FX.prototype[m] == 'function' && typeof SVG.FX.Set.prototype[m] != 'function') methods.push(m);\n\n    // apply fx aliasses\n    methods.forEach(function (method) {\n      SVG.FX.Set.prototype[method] = function () {\n        for (var i = 0, il = this.set.members.length; i < il; i++) this.set.members[i].fx[method].apply(this.set.members[i].fx, arguments);\n        return this;\n      };\n    });\n  };\n  SVG.extend(SVG.Element, {\n    // Store data values on svg nodes\n    data: function (a, v, r) {\n      if (typeof a == 'object') {\n        for (v in a) this.data(v, a[v]);\n      } else if (arguments.length < 2) {\n        try {\n          return JSON.parse(this.attr('data-' + a));\n        } catch (e) {\n          return this.attr('data-' + a);\n        }\n      } else {\n        this.attr('data-' + a, v === null ? null : r === true || typeof v === 'string' || typeof v === 'number' ? v : JSON.stringify(v));\n      }\n      return this;\n    }\n  });\n  SVG.extend(SVG.Element, {\n    // Remember arbitrary data\n    remember: function (k, v) {\n      // remember every item in an object individually\n      if (typeof arguments[0] == 'object') for (var v in k) this.remember(v, k[v]);\n\n      // retrieve memory\n      else if (arguments.length == 1) return this.memory()[k];\n\n      // store memory\n      else this.memory()[k] = v;\n      return this;\n    }\n\n    // Erase a given memory\n    ,\n    forget: function () {\n      if (arguments.length == 0) this._memory = {};else for (var i = arguments.length - 1; i >= 0; i--) delete this.memory()[arguments[i]];\n      return this;\n    }\n\n    // Initialize or return local memory object\n    ,\n    memory: function () {\n      return this._memory || (this._memory = {});\n    }\n  });\n  // Method for getting an element by id\n  SVG.get = function (id) {\n    var node = document.getElementById(idFromReference(id) || id);\n    return SVG.adopt(node);\n  };\n\n  // Select elements by query string\n  SVG.select = function (query, parent) {\n    return new SVG.Set(SVG.utils.map((parent || document).querySelectorAll(query), function (node) {\n      return SVG.adopt(node);\n    }));\n  };\n  SVG.extend(SVG.Parent, {\n    // Scoped select method\n    select: function (query) {\n      return SVG.select(query, this.node);\n    }\n  });\n  function pathRegReplace(a, b, c, d) {\n    return c + d.replace(SVG.regex.dots, ' .');\n  }\n\n  // creates deep clone of array\n  function array_clone(arr) {\n    var clone = arr.slice(0);\n    for (var i = clone.length; i--;) {\n      if (Array.isArray(clone[i])) {\n        clone[i] = array_clone(clone[i]);\n      }\n    }\n    return clone;\n  }\n\n  // tests if a given element is instance of an object\n  function is(el, obj) {\n    return el instanceof obj;\n  }\n\n  // tests if a given selector matches an element\n  function matches(el, selector) {\n    return (el.matches || el.matchesSelector || el.msMatchesSelector || el.mozMatchesSelector || el.webkitMatchesSelector || el.oMatchesSelector).call(el, selector);\n  }\n\n  // Convert dash-separated-string to camelCase\n  function camelCase(s) {\n    return s.toLowerCase().replace(/-(.)/g, function (m, g) {\n      return g.toUpperCase();\n    });\n  }\n\n  // Capitalize first letter of a string\n  function capitalize(s) {\n    return s.charAt(0).toUpperCase() + s.slice(1);\n  }\n\n  // Ensure to six-based hex\n  function fullHex(hex) {\n    return hex.length == 4 ? ['#', hex.substring(1, 2), hex.substring(1, 2), hex.substring(2, 3), hex.substring(2, 3), hex.substring(3, 4), hex.substring(3, 4)].join('') : hex;\n  }\n\n  // Component to hex value\n  function compToHex(comp) {\n    var hex = comp.toString(16);\n    return hex.length == 1 ? '0' + hex : hex;\n  }\n\n  // Calculate proportional width and height values when necessary\n  function proportionalSize(element, width, height) {\n    if (width == null || height == null) {\n      var box = element.bbox();\n      if (width == null) width = box.width / box.height * height;else if (height == null) height = box.height / box.width * width;\n    }\n    return {\n      width: width,\n      height: height\n    };\n  }\n\n  // Delta transform point\n  function deltaTransformPoint(matrix, x, y) {\n    return {\n      x: x * matrix.a + y * matrix.c + 0,\n      y: x * matrix.b + y * matrix.d + 0\n    };\n  }\n\n  // Map matrix array to object\n  function arrayToMatrix(a) {\n    return {\n      a: a[0],\n      b: a[1],\n      c: a[2],\n      d: a[3],\n      e: a[4],\n      f: a[5]\n    };\n  }\n\n  // Parse matrix if required\n  function parseMatrix(matrix) {\n    if (!(matrix instanceof SVG.Matrix)) matrix = new SVG.Matrix(matrix);\n    return matrix;\n  }\n\n  // Add centre point to transform object\n  function ensureCentre(o, target) {\n    o.cx = o.cx == null ? target.bbox().cx : o.cx;\n    o.cy = o.cy == null ? target.bbox().cy : o.cy;\n  }\n\n  // PathArray Helpers\n  function arrayToString(a) {\n    for (var i = 0, il = a.length, s = ''; i < il; i++) {\n      s += a[i][0];\n      if (a[i][1] != null) {\n        s += a[i][1];\n        if (a[i][2] != null) {\n          s += ' ';\n          s += a[i][2];\n          if (a[i][3] != null) {\n            s += ' ';\n            s += a[i][3];\n            s += ' ';\n            s += a[i][4];\n            if (a[i][5] != null) {\n              s += ' ';\n              s += a[i][5];\n              s += ' ';\n              s += a[i][6];\n              if (a[i][7] != null) {\n                s += ' ';\n                s += a[i][7];\n              }\n            }\n          }\n        }\n      }\n    }\n    return s + ' ';\n  }\n\n  // Deep new id assignment\n  function assignNewId(node) {\n    // do the same for SVG child nodes as well\n    for (var i = node.childNodes.length - 1; i >= 0; i--) if (node.childNodes[i] instanceof window.SVGElement) assignNewId(node.childNodes[i]);\n    return SVG.adopt(node).id(SVG.eid(node.nodeName));\n  }\n\n  // Add more bounding box properties\n  function fullBox(b) {\n    if (b.x == null) {\n      b.x = 0;\n      b.y = 0;\n      b.width = 0;\n      b.height = 0;\n    }\n    b.w = b.width;\n    b.h = b.height;\n    b.x2 = b.x + b.width;\n    b.y2 = b.y + b.height;\n    b.cx = b.x + b.width / 2;\n    b.cy = b.y + b.height / 2;\n    return b;\n  }\n\n  // Get id from reference string\n  function idFromReference(url) {\n    var m = (url || '').toString().match(SVG.regex.reference);\n    if (m) return m[1];\n  }\n\n  // If values like 1e-88 are passed, this is not a valid 32 bit float,\n  // but in those cases, we are so close to 0 that 0 works well!\n  function float32String(v) {\n    return Math.abs(v) > 1e-37 ? v : 0;\n  }\n\n  // Create matrix array for looping\n  var abcdef = 'abcdef'.split('');\n\n  // Add CustomEvent to IE9 and IE10\n  if (typeof window.CustomEvent !== 'function') {\n    // Code from: https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent\n    var CustomEventPoly = function (event, options) {\n      options = options || {\n        bubbles: false,\n        cancelable: false,\n        detail: undefined\n      };\n      var e = document.createEvent('CustomEvent');\n      e.initCustomEvent(event, options.bubbles, options.cancelable, options.detail);\n      return e;\n    };\n    CustomEventPoly.prototype = window.Event.prototype;\n    SVG.CustomEvent = CustomEventPoly;\n  } else {\n    SVG.CustomEvent = window.CustomEvent;\n  }\n\n  // requestAnimationFrame / cancelAnimationFrame Polyfill with fallback based on Paul Irish\n  (function (w) {\n    var lastTime = 0;\n    var vendors = ['moz', 'webkit'];\n    for (var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\n      w.requestAnimationFrame = w[vendors[x] + 'RequestAnimationFrame'];\n      w.cancelAnimationFrame = w[vendors[x] + 'CancelAnimationFrame'] || w[vendors[x] + 'CancelRequestAnimationFrame'];\n    }\n    w.requestAnimationFrame = w.requestAnimationFrame || function (callback) {\n      var currTime = new Date().getTime();\n      var timeToCall = Math.max(0, 16 - (currTime - lastTime));\n      var id = w.setTimeout(function () {\n        callback(currTime + timeToCall);\n      }, timeToCall);\n      lastTime = currTime + timeToCall;\n      return id;\n    };\n    w.cancelAnimationFrame = w.cancelAnimationFrame || w.clearTimeout;\n  })(window);\n  return SVG;\n});","map":{"version":3,"names":["root","factory","define","amd","document","exports","module","w","SVG","window","globalRef","element","supported","Doc","parser","draw","prepare","ns","xmlns","xlink","svgjs","createElementNS","createSVGRect","did","eid","name","capitalize","create","setAttribute","extend","modules","methods","key","i","slice","call","arguments","pop","length","prototype","Set","inherit","invent","config","initializer","constructor","construct","parent","Container","adopt","node","instance","nodeName","parentNode","SVGElement","Nested","Gradient","Element","type","namespace","defs","setData","JSON","parse","getAttribute","body","getElementsByTagName","documentElement","nested","size","style","attr","poly","polyline","path","native","addEventListener","regex","numberAndUnit","hex","rgb","reference","transforms","whitespace","isHex","isRgb","isCss","isBlank","isNumber","isPercent","isImage","delimiter","hyphen","pathLetters","isPathLetter","numbersWithDots","dots","utils","map","array","block","il","result","push","filter","radians","d","Math","PI","degrees","r","filterSVGElements","nodes","el","defaults","attrs","fill","stroke","opacity","x","y","cx","cy","width","height","rx","ry","offset","Color","color","match","g","b","test","exec","replace","parseInt","fullHex","toString","toHex","compToHex","toRgb","join","brightness","morph","destination","at","pos","isColor","Array","fallback","valueOf","value","lastValue","lastDestination","settle","seen","indexOf","isArray","split","string","trim","parseFloat","reverse","clone","array_clone","PointArray","toLine","x1","y1","x2","y2","points","len","move","box","bbox","isNaN","getBBox","pathHandlers","M","c","p","p0","L","H","V","C","S","Q","T","Z","A","mlhvqtcsa","j","jl","toUpperCase","PathArray","arrayToString","l","equalCommands","pathArray","sourceArray","destinationArray","x0","y0","s","seg","arr","paramCnt","pathRegReplace","reduce","prev","curr","concat","Point","index","Number","unit","isFinite","toJSON","plus","number","minus","times","divide","to","relative","_stroke","_event","_events","dom","center","proportionalSize","writeDataToDom","assignNewId","cloneNode","add","after","remove","removeElement","addTo","put","putIn","id","inside","show","hide","visible","classes","hasClass","addClass","removeClass","toggleClass","get","matches","doc","parents","selector","svg","well","createElement","Parent","innerHTML","firstChild","childNodes","appendChild","each","lines","fn","removeAttribute","Object","keys","stringify","o","is","obj","easing","-","<>","cos",">","sin","<","from","MorphObj","Situation","init","reversed","reversing","duration","delay","start","Date","finish","ease","loop","loops","animations","styles","once","FX","_target","situations","active","situation","paused","lastPos","absPos","_speed","animate","queue","target","timeToAbsPos","timestamp","absPosToTime","startAnimFrame","stopAnimFrame","animationFrame","requestAnimationFrame","step","bind","cancelAnimationFrame","startCurrent","initAnimations","shift","dequeue","stop","source","initialTransformation","matrixify","clearQueue","clearCurrent","jumpToEnd","atEnd","reset","temp","atStart","isAbsPos","durDivSpd","speed","pause","last","play","progress","easeIt","wrapper","e","detail","off","on","_callStart","during","eased","afterAll","duringAll","method","args","ignoreTime","absPosInt","lastLoop","max","floor","Boolean","min","fire","fx","eachAt","self","apply","a","Matrix","multiply","undo","extract","matrix","isEased","setTimeout","real","v","G","transform","num","Text","plot","morphArray","leading","viewbox","ViewBox","update","Stop","Box","left","top","fullBox","merge","m","xMin","Infinity","xMax","yMin","yMax","pts","forEach","BBox","contains","topParent","Exception","Shape","clientLeft","clientTop","clientWidth","clientHeight","tbox","console","warn","rbox","RBox","getBoundingClientRect","addOffset","pageXOffset","pageYOffset","screenCTM","inverse","base","arrayToMatrix","abcdef","px","deltaTransformPoint","py","skewX","atan2","f","transformedX","sqrt","transformedY","skewY","scaleX","scaleY","rotation","parseMatrix","translate","scale","around","rotate","flip","skew","tan","createSVGMatrix","float32String","ctm","getCTM","rect","getScreenCTM","point","createSVGPoint","matrixTransform","n","attributes","nodeValue","image","Image","pattern","setAttributeNS","rebuild","ensureCentre","Rotate","Scale","Skew","Translate","untransform","str","kv","toParent","pCtm","toDoc","Transformation","inversed","params","_undo","cssText","camelCase","children","insertBefore","has","first","deep","removeChild","clear","hasChildNodes","lastChild","_defs","ungroup","depth","Defs","flatten","view","we","he","wm","hm","reg","offsetWidth","offsetHeight","zoom","event","listenerId","events","listener","binding","options","bag","_svgjsListenerId","ev","removeEventListener","data","Event","dispatchEvent","CustomEvent","cancelable","gbox","trans","group","getElementById","version","spof","nextSibling","siblings","position","next","previous","forward","backward","front","back","before","Mask","targets","unmask","mask","maskWith","masker","ClipPath","unclip","clip","clipWith","clipper","gradient","fy","Pattern","patternUnits","Bare","words","text","createTextNode","Symbol","symbol","Use","file","use","Rect","Circle","circle","Ellipse","ellipse","Line","line","Polyline","Polygon","polygon","_array","Path","load","url","img","_loaded","ratio","_error","src","loaded","error","_rebuild","_build","oy","nodeType","newLined","textContent","build","tspan","newLine","textPath","blankLineOffset","dy","plain","Tspan","dx","t","getComputedTextLength","TextPath","track","link","linkTo","Marker","ref","marker","sugar","prefix","extension","dmove","radius","getTotalLength","pointAt","getPointAtLength","font","members","elements","splice","set","remember","k","memory","forget","_memory","idFromReference","select","query","querySelectorAll","matchesSelector","msMatchesSelector","mozMatchesSelector","webkitMatchesSelector","oMatchesSelector","toLowerCase","charAt","substring","comp","h","abs","CustomEventPoly","bubbles","undefined","createEvent","initCustomEvent","lastTime","vendors","callback","currTime","getTime","timeToCall","clearTimeout"],"sources":["/home/lasmas/GitHub/PROYECTOBIO/my-svg-map/node_modules/svg.js/dist/svg.js"],"sourcesContent":["/*!\n* svg.js - A lightweight library for manipulating and animating SVG.\n* @version 2.7.1\n* https://svgdotjs.github.io/\n*\n* @copyright Wout Fierens <wout@mick-wout.com>\n* @license MIT\n*\n* BUILT: Fri Nov 30 2018 10:01:55 GMT+0100 (GMT+01:00)\n*/;\n(function(root, factory) {\r\n  /* istanbul ignore next */\r\n  if (typeof define === 'function' && define.amd) {\r\n    define(function(){\r\n      return factory(root, root.document)\r\n    })\r\n  } else if (typeof exports === 'object') {\r\n    module.exports = root.document ? factory(root, root.document) : function(w){ return factory(w, w.document) }\r\n  } else {\r\n    root.SVG = factory(root, root.document)\r\n  }\r\n}(typeof window !== \"undefined\" ? window : this, function(window, document) {\r\n\r\n// Find global reference - uses 'this' by default when available,\r\n// falls back to 'window' otherwise (for bundlers like Webpack)\r\nvar globalRef = (typeof this !== \"undefined\") ? this : window;\r\n\r\n// The main wrapping element\r\nvar SVG = globalRef.SVG = function(element) {\r\n  if (SVG.supported) {\r\n    element = new SVG.Doc(element)\r\n\r\n    if(!SVG.parser.draw)\r\n      SVG.prepare()\r\n\r\n    return element\r\n  }\r\n}\r\n\r\n// Default namespaces\r\nSVG.ns    = 'http://www.w3.org/2000/svg'\r\nSVG.xmlns = 'http://www.w3.org/2000/xmlns/'\r\nSVG.xlink = 'http://www.w3.org/1999/xlink'\r\nSVG.svgjs = 'http://svgjs.com/svgjs'\r\n\r\n// Svg support test\r\nSVG.supported = (function() {\r\n  return !! document.createElementNS &&\r\n         !! document.createElementNS(SVG.ns,'svg').createSVGRect\r\n})()\r\n\r\n// Don't bother to continue if SVG is not supported\r\nif (!SVG.supported) return false\r\n\r\n// Element id sequence\r\nSVG.did  = 1000\r\n\r\n// Get next named element id\r\nSVG.eid = function(name) {\r\n  return 'Svgjs' + capitalize(name) + (SVG.did++)\r\n}\r\n\r\n// Method for element creation\r\nSVG.create = function(name) {\r\n  // create element\r\n  var element = document.createElementNS(this.ns, name)\r\n\r\n  // apply unique id\r\n  element.setAttribute('id', this.eid(name))\r\n\r\n  return element\r\n}\r\n\r\n// Method for extending objects\r\nSVG.extend = function() {\r\n  var modules, methods, key, i\r\n\r\n  // Get list of modules\r\n  modules = [].slice.call(arguments)\r\n\r\n  // Get object with extensions\r\n  methods = modules.pop()\r\n\r\n  for (i = modules.length - 1; i >= 0; i--)\r\n    if (modules[i])\r\n      for (key in methods)\r\n        modules[i].prototype[key] = methods[key]\r\n\r\n  // Make sure SVG.Set inherits any newly added methods\r\n  if (SVG.Set && SVG.Set.inherit)\r\n    SVG.Set.inherit()\r\n}\r\n\r\n// Invent new element\r\nSVG.invent = function(config) {\r\n  // Create element initializer\r\n  var initializer = typeof config.create == 'function' ?\r\n    config.create :\r\n    function() {\r\n      this.constructor.call(this, SVG.create(config.create))\r\n    }\r\n\r\n  // Inherit prototype\r\n  if (config.inherit)\r\n    initializer.prototype = new config.inherit\r\n\r\n  // Extend with methods\r\n  if (config.extend)\r\n    SVG.extend(initializer, config.extend)\r\n\r\n  // Attach construct method to parent\r\n  if (config.construct)\r\n    SVG.extend(config.parent || SVG.Container, config.construct)\r\n\r\n  return initializer\r\n}\r\n\r\n// Adopt existing svg elements\r\nSVG.adopt = function(node) {\r\n  // check for presence of node\r\n  if (!node) return null\r\n\r\n  // make sure a node isn't already adopted\r\n  if (node.instance) return node.instance\r\n\r\n  // initialize variables\r\n  var element\r\n\r\n  // adopt with element-specific settings\r\n  if (node.nodeName == 'svg')\r\n    element = node.parentNode instanceof window.SVGElement ? new SVG.Nested : new SVG.Doc\r\n  else if (node.nodeName == 'linearGradient')\r\n    element = new SVG.Gradient('linear')\r\n  else if (node.nodeName == 'radialGradient')\r\n    element = new SVG.Gradient('radial')\r\n  else if (SVG[capitalize(node.nodeName)])\r\n    element = new SVG[capitalize(node.nodeName)]\r\n  else\r\n    element = new SVG.Element(node)\r\n\r\n  // ensure references\r\n  element.type  = node.nodeName\r\n  element.node  = node\r\n  node.instance = element\r\n\r\n  // SVG.Class specific preparations\r\n  if (element instanceof SVG.Doc)\r\n    element.namespace().defs()\r\n\r\n  // pull svgjs data from the dom (getAttributeNS doesn't work in html5)\r\n  element.setData(JSON.parse(node.getAttribute('svgjs:data')) || {})\r\n\r\n  return element\r\n}\r\n\r\n// Initialize parsing element\r\nSVG.prepare = function() {\r\n  // Select document body and create invisible svg element\r\n  var body = document.getElementsByTagName('body')[0]\r\n    , draw = (body ? new SVG.Doc(body) : SVG.adopt(document.documentElement).nested()).size(2, 0)\r\n\r\n  // Create parser object\r\n  SVG.parser = {\r\n    body: body || document.documentElement\r\n  , draw: draw.style('opacity:0;position:absolute;left:-100%;top:-100%;overflow:hidden').attr('focusable', 'false').node\r\n  , poly: draw.polyline().node\r\n  , path: draw.path().node\r\n  , native: SVG.create('svg')\r\n  }\r\n}\r\n\r\nSVG.parser = {\r\n  native: SVG.create('svg')\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n  if(!SVG.parser.draw)\r\n    SVG.prepare()\r\n}, false)\r\n\n// Storage for regular expressions\r\nSVG.regex = {\r\n  // Parse unit value\r\n  numberAndUnit:    /^([+-]?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?)([a-z%]*)$/i\r\n\r\n  // Parse hex value\r\n, hex:              /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i\r\n\r\n  // Parse rgb value\r\n, rgb:              /rgb\\((\\d+),(\\d+),(\\d+)\\)/\r\n\r\n  // Parse reference id\r\n, reference:        /#([a-z0-9\\-_]+)/i\r\n\r\n  // splits a transformation chain\r\n, transforms:       /\\)\\s*,?\\s*/\r\n\r\n  // Whitespace\r\n, whitespace:       /\\s/g\r\n\r\n  // Test hex value\r\n, isHex:            /^#[a-f0-9]{3,6}$/i\r\n\r\n  // Test rgb value\r\n, isRgb:            /^rgb\\(/\r\n\r\n  // Test css declaration\r\n, isCss:            /[^:]+:[^;]+;?/\r\n\r\n  // Test for blank string\r\n, isBlank:          /^(\\s+)?$/\r\n\r\n  // Test for numeric string\r\n, isNumber:         /^[+-]?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i\r\n\r\n  // Test for percent value\r\n, isPercent:        /^-?[\\d\\.]+%$/\r\n\r\n  // Test for image url\r\n, isImage:          /\\.(jpg|jpeg|png|gif|svg)(\\?[^=]+.*)?/i\r\n\r\n  // split at whitespace and comma\r\n, delimiter:        /[\\s,]+/\r\n\r\n  // The following regex are used to parse the d attribute of a path\r\n\r\n  // Matches all hyphens which are not after an exponent\r\n, hyphen:           /([^e])\\-/gi\r\n\r\n  // Replaces and tests for all path letters\r\n, pathLetters:      /[MLHVCSQTAZ]/gi\r\n\r\n  // yes we need this one, too\r\n, isPathLetter:     /[MLHVCSQTAZ]/i\r\n\r\n  // matches 0.154.23.45\r\n, numbersWithDots:  /((\\d?\\.\\d+(?:e[+-]?\\d+)?)((?:\\.\\d+(?:e[+-]?\\d+)?)+))+/gi\r\n\r\n  // matches .\r\n, dots:             /\\./g\r\n}\r\n\nSVG.utils = {\r\n  // Map function\r\n  map: function(array, block) {\r\n    var i\r\n      , il = array.length\r\n      , result = []\r\n\r\n    for (i = 0; i < il; i++)\r\n      result.push(block(array[i]))\r\n\r\n    return result\r\n  }\r\n\r\n  // Filter function\r\n, filter: function(array, block) {\r\n    var i\r\n      , il = array.length\r\n      , result = []\r\n\r\n    for (i = 0; i < il; i++)\r\n      if (block(array[i]))\r\n        result.push(array[i])\r\n\r\n    return result\r\n  }\r\n\r\n  // Degrees to radians\r\n, radians: function(d) {\r\n    return d % 360 * Math.PI / 180\r\n  }\r\n\r\n  // Radians to degrees\r\n, degrees: function(r) {\r\n    return r * 180 / Math.PI % 360\r\n  }\r\n\r\n, filterSVGElements: function(nodes) {\r\n    return this.filter( nodes, function(el) { return el instanceof window.SVGElement })\r\n  }\r\n\r\n}\n\r\nSVG.defaults = {\r\n  // Default attribute values\r\n  attrs: {\r\n    // fill and stroke\r\n    'fill-opacity':     1\r\n  , 'stroke-opacity':   1\r\n  , 'stroke-width':     0\r\n  , 'stroke-linejoin':  'miter'\r\n  , 'stroke-linecap':   'butt'\r\n  , fill:               '#000000'\r\n  , stroke:             '#000000'\r\n  , opacity:            1\r\n    // position\r\n  , x:                  0\r\n  , y:                  0\r\n  , cx:                 0\r\n  , cy:                 0\r\n    // size\r\n  , width:              0\r\n  , height:             0\r\n    // radius\r\n  , r:                  0\r\n  , rx:                 0\r\n  , ry:                 0\r\n    // gradient\r\n  , offset:             0\r\n  , 'stop-opacity':     1\r\n  , 'stop-color':       '#000000'\r\n    // text\r\n  , 'font-size':        16\r\n  , 'font-family':      'Helvetica, Arial, sans-serif'\r\n  , 'text-anchor':      'start'\r\n  }\r\n\r\n}\n// Module for color convertions\r\nSVG.Color = function(color) {\r\n  var match\r\n\r\n  // initialize defaults\r\n  this.r = 0\r\n  this.g = 0\r\n  this.b = 0\r\n\r\n  if(!color) return\r\n\r\n  // parse color\r\n  if (typeof color === 'string') {\r\n    if (SVG.regex.isRgb.test(color)) {\r\n      // get rgb values\r\n      match = SVG.regex.rgb.exec(color.replace(SVG.regex.whitespace,''))\r\n\r\n      // parse numeric values\r\n      this.r = parseInt(match[1])\r\n      this.g = parseInt(match[2])\r\n      this.b = parseInt(match[3])\r\n\r\n    } else if (SVG.regex.isHex.test(color)) {\r\n      // get hex values\r\n      match = SVG.regex.hex.exec(fullHex(color))\r\n\r\n      // parse numeric values\r\n      this.r = parseInt(match[1], 16)\r\n      this.g = parseInt(match[2], 16)\r\n      this.b = parseInt(match[3], 16)\r\n\r\n    }\r\n\r\n  } else if (typeof color === 'object') {\r\n    this.r = color.r\r\n    this.g = color.g\r\n    this.b = color.b\r\n\r\n  }\r\n\r\n}\r\n\r\nSVG.extend(SVG.Color, {\r\n  // Default to hex conversion\r\n  toString: function() {\r\n    return this.toHex()\r\n  }\r\n  // Build hex value\r\n, toHex: function() {\r\n    return '#'\r\n      + compToHex(this.r)\r\n      + compToHex(this.g)\r\n      + compToHex(this.b)\r\n  }\r\n  // Build rgb value\r\n, toRgb: function() {\r\n    return 'rgb(' + [this.r, this.g, this.b].join() + ')'\r\n  }\r\n  // Calculate true brightness\r\n, brightness: function() {\r\n    return (this.r / 255 * 0.30)\r\n         + (this.g / 255 * 0.59)\r\n         + (this.b / 255 * 0.11)\r\n  }\r\n  // Make color morphable\r\n, morph: function(color) {\r\n    this.destination = new SVG.Color(color)\r\n\r\n    return this\r\n  }\r\n  // Get morphed color at given position\r\n, at: function(pos) {\r\n    // make sure a destination is defined\r\n    if (!this.destination) return this\r\n\r\n    // normalise pos\r\n    pos = pos < 0 ? 0 : pos > 1 ? 1 : pos\r\n\r\n    // generate morphed color\r\n    return new SVG.Color({\r\n      r: ~~(this.r + (this.destination.r - this.r) * pos)\r\n    , g: ~~(this.g + (this.destination.g - this.g) * pos)\r\n    , b: ~~(this.b + (this.destination.b - this.b) * pos)\r\n    })\r\n  }\r\n\r\n})\r\n\r\n// Testers\r\n\r\n// Test if given value is a color string\r\nSVG.Color.test = function(color) {\r\n  color += ''\r\n  return SVG.regex.isHex.test(color)\r\n      || SVG.regex.isRgb.test(color)\r\n}\r\n\r\n// Test if given value is a rgb object\r\nSVG.Color.isRgb = function(color) {\r\n  return color && typeof color.r == 'number'\r\n               && typeof color.g == 'number'\r\n               && typeof color.b == 'number'\r\n}\r\n\r\n// Test if given value is a color\r\nSVG.Color.isColor = function(color) {\r\n  return SVG.Color.isRgb(color) || SVG.Color.test(color)\r\n}\n// Module for array conversion\r\nSVG.Array = function(array, fallback) {\r\n  array = (array || []).valueOf()\r\n\r\n  // if array is empty and fallback is provided, use fallback\r\n  if (array.length == 0 && fallback)\r\n    array = fallback.valueOf()\r\n\r\n  // parse array\r\n  this.value = this.parse(array)\r\n}\r\n\r\nSVG.extend(SVG.Array, {\r\n  // Make array morphable\r\n  morph: function(array) {\r\n    this.destination = this.parse(array)\r\n\r\n    // normalize length of arrays\r\n    if (this.value.length != this.destination.length) {\r\n      var lastValue       = this.value[this.value.length - 1]\r\n        , lastDestination = this.destination[this.destination.length - 1]\r\n\r\n      while(this.value.length > this.destination.length)\r\n        this.destination.push(lastDestination)\r\n      while(this.value.length < this.destination.length)\r\n        this.value.push(lastValue)\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Clean up any duplicate points\r\n, settle: function() {\r\n    // find all unique values\r\n    for (var i = 0, il = this.value.length, seen = []; i < il; i++)\r\n      if (seen.indexOf(this.value[i]) == -1)\r\n        seen.push(this.value[i])\r\n\r\n    // set new value\r\n    return this.value = seen\r\n  }\r\n  // Get morphed array at given position\r\n, at: function(pos) {\r\n    // make sure a destination is defined\r\n    if (!this.destination) return this\r\n\r\n    // generate morphed array\r\n    for (var i = 0, il = this.value.length, array = []; i < il; i++)\r\n      array.push(this.value[i] + (this.destination[i] - this.value[i]) * pos)\r\n\r\n    return new SVG.Array(array)\r\n  }\r\n  // Convert array to string\r\n, toString: function() {\r\n    return this.value.join(' ')\r\n  }\r\n  // Real value\r\n, valueOf: function() {\r\n    return this.value\r\n  }\r\n  // Parse whitespace separated string\r\n, parse: function(array) {\r\n    array = array.valueOf()\r\n\r\n    // if already is an array, no need to parse it\r\n    if (Array.isArray(array)) return array\r\n\r\n    return this.split(array)\r\n  }\r\n  // Strip unnecessary whitespace\r\n, split: function(string) {\r\n    return string.trim().split(SVG.regex.delimiter).map(parseFloat)\r\n  }\r\n  // Reverse array\r\n, reverse: function() {\r\n    this.value.reverse()\r\n\r\n    return this\r\n  }\r\n, clone: function() {\r\n    var clone = new this.constructor()\r\n    clone.value = array_clone(this.value)\r\n    return clone\r\n  }\r\n})\n// Poly points array\r\nSVG.PointArray = function(array, fallback) {\r\n  SVG.Array.call(this, array, fallback || [[0,0]])\r\n}\r\n\r\n// Inherit from SVG.Array\r\nSVG.PointArray.prototype = new SVG.Array\r\nSVG.PointArray.prototype.constructor = SVG.PointArray\r\n\r\nSVG.extend(SVG.PointArray, {\r\n  // Convert array to string\r\n  toString: function() {\r\n    // convert to a poly point string\r\n    for (var i = 0, il = this.value.length, array = []; i < il; i++)\r\n      array.push(this.value[i].join(','))\r\n\r\n    return array.join(' ')\r\n  }\r\n  // Convert array to line object\r\n, toLine: function() {\r\n    return {\r\n      x1: this.value[0][0]\r\n    , y1: this.value[0][1]\r\n    , x2: this.value[1][0]\r\n    , y2: this.value[1][1]\r\n    }\r\n  }\r\n  // Get morphed array at given position\r\n, at: function(pos) {\r\n    // make sure a destination is defined\r\n    if (!this.destination) return this\r\n\r\n    // generate morphed point string\r\n    for (var i = 0, il = this.value.length, array = []; i < il; i++)\r\n      array.push([\r\n        this.value[i][0] + (this.destination[i][0] - this.value[i][0]) * pos\r\n      , this.value[i][1] + (this.destination[i][1] - this.value[i][1]) * pos\r\n      ])\r\n\r\n    return new SVG.PointArray(array)\r\n  }\r\n  // Parse point string and flat array\r\n, parse: function(array) {\r\n    var points = []\r\n\r\n    array = array.valueOf()\r\n\r\n    // if it is an array\r\n    if (Array.isArray(array)) {\r\n      // and it is not flat, there is no need to parse it\r\n      if(Array.isArray(array[0])) {\r\n        // make sure to use a clone\r\n        return array.map(function (el) { return el.slice() })\r\n      } else if (array[0].x != null){\r\n        // allow point objects to be passed\r\n        return array.map(function (el) { return [el.x, el.y] })\r\n      }\r\n    } else { // Else, it is considered as a string\r\n      // parse points\r\n      array = array.trim().split(SVG.regex.delimiter).map(parseFloat)\r\n    }\r\n\r\n    // validate points - https://svgwg.org/svg2-draft/shapes.html#DataTypePoints\r\n    // Odd number of coordinates is an error. In such cases, drop the last odd coordinate.\r\n    if (array.length % 2 !== 0) array.pop()\r\n\r\n    // wrap points in two-tuples and parse points as floats\r\n    for(var i = 0, len = array.length; i < len; i = i + 2)\r\n      points.push([ array[i], array[i+1] ])\r\n\r\n    return points\r\n  }\r\n  // Move point string\r\n, move: function(x, y) {\r\n    var box = this.bbox()\r\n\r\n    // get relative offset\r\n    x -= box.x\r\n    y -= box.y\r\n\r\n    // move every point\r\n    if (!isNaN(x) && !isNaN(y))\r\n      for (var i = this.value.length - 1; i >= 0; i--)\r\n        this.value[i] = [this.value[i][0] + x, this.value[i][1] + y]\r\n\r\n    return this\r\n  }\r\n  // Resize poly string\r\n, size: function(width, height) {\r\n    var i, box = this.bbox()\r\n\r\n    // recalculate position of all points according to new size\r\n    for (i = this.value.length - 1; i >= 0; i--) {\r\n      if(box.width) this.value[i][0] = ((this.value[i][0] - box.x) * width)  / box.width  + box.x\r\n      if(box.height) this.value[i][1] = ((this.value[i][1] - box.y) * height) / box.height + box.y\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Get bounding box of points\r\n, bbox: function() {\r\n    SVG.parser.poly.setAttribute('points', this.toString())\r\n\r\n    return SVG.parser.poly.getBBox()\r\n  }\r\n})\r\n\nvar pathHandlers = {\r\n  M: function(c, p, p0) {\r\n    p.x = p0.x = c[0]\r\n    p.y = p0.y = c[1]\r\n\r\n    return ['M', p.x, p.y]\r\n  },\r\n  L: function(c, p) {\r\n    p.x = c[0]\r\n    p.y = c[1]\r\n    return ['L', c[0], c[1]]\r\n  },\r\n  H: function(c, p) {\r\n    p.x = c[0]\r\n    return ['H', c[0]]\r\n  },\r\n  V: function(c, p) {\r\n    p.y = c[0]\r\n    return ['V', c[0]]\r\n  },\r\n  C: function(c, p) {\r\n    p.x = c[4]\r\n    p.y = c[5]\r\n    return ['C', c[0], c[1], c[2], c[3], c[4], c[5]]\r\n  },\r\n  S: function(c, p) {\r\n    p.x = c[2]\r\n    p.y = c[3]\r\n    return ['S', c[0], c[1], c[2], c[3]]\r\n  },\r\n  Q: function(c, p) {\r\n    p.x = c[2]\r\n    p.y = c[3]\r\n    return ['Q', c[0], c[1], c[2], c[3]]\r\n  },\r\n  T: function(c, p) {\r\n    p.x = c[0]\r\n    p.y = c[1]\r\n    return ['T', c[0], c[1]]\r\n  },\r\n  Z: function(c, p, p0) {\r\n    p.x = p0.x\r\n    p.y = p0.y\r\n    return ['Z']\r\n  },\r\n  A: function(c, p) {\r\n    p.x = c[5]\r\n    p.y = c[6]\r\n    return ['A', c[0], c[1], c[2], c[3], c[4], c[5], c[6]]\r\n  }\r\n}\r\n\r\nvar mlhvqtcsa = 'mlhvqtcsaz'.split('')\r\n\r\nfor(var i = 0, il = mlhvqtcsa.length; i < il; ++i){\r\n  pathHandlers[mlhvqtcsa[i]] = (function(i){\r\n    return function(c, p, p0) {\r\n      if(i == 'H') c[0] = c[0] + p.x\r\n      else if(i == 'V') c[0] = c[0] + p.y\r\n      else if(i == 'A'){\r\n        c[5] = c[5] + p.x,\r\n        c[6] = c[6] + p.y\r\n      }\r\n      else\r\n        for(var j = 0, jl = c.length; j < jl; ++j) {\r\n          c[j] = c[j] + (j%2 ? p.y : p.x)\r\n        }\r\n\r\n      return pathHandlers[i](c, p, p0)\r\n    }\r\n  })(mlhvqtcsa[i].toUpperCase())\r\n}\r\n\r\n// Path points array\r\nSVG.PathArray = function(array, fallback) {\r\n  SVG.Array.call(this, array, fallback || [['M', 0, 0]])\r\n}\r\n\r\n// Inherit from SVG.Array\r\nSVG.PathArray.prototype = new SVG.Array\r\nSVG.PathArray.prototype.constructor = SVG.PathArray\r\n\r\nSVG.extend(SVG.PathArray, {\r\n  // Convert array to string\r\n  toString: function() {\r\n    return arrayToString(this.value)\r\n  }\r\n  // Move path string\r\n, move: function(x, y) {\r\n    // get bounding box of current situation\r\n    var box = this.bbox()\r\n\r\n    // get relative offset\r\n    x -= box.x\r\n    y -= box.y\r\n\r\n    if (!isNaN(x) && !isNaN(y)) {\r\n      // move every point\r\n      for (var l, i = this.value.length - 1; i >= 0; i--) {\r\n        l = this.value[i][0]\r\n\r\n        if (l == 'M' || l == 'L' || l == 'T')  {\r\n          this.value[i][1] += x\r\n          this.value[i][2] += y\r\n\r\n        } else if (l == 'H')  {\r\n          this.value[i][1] += x\r\n\r\n        } else if (l == 'V')  {\r\n          this.value[i][1] += y\r\n\r\n        } else if (l == 'C' || l == 'S' || l == 'Q')  {\r\n          this.value[i][1] += x\r\n          this.value[i][2] += y\r\n          this.value[i][3] += x\r\n          this.value[i][4] += y\r\n\r\n          if (l == 'C')  {\r\n            this.value[i][5] += x\r\n            this.value[i][6] += y\r\n          }\r\n\r\n        } else if (l == 'A')  {\r\n          this.value[i][6] += x\r\n          this.value[i][7] += y\r\n        }\r\n\r\n      }\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Resize path string\r\n, size: function(width, height) {\r\n    // get bounding box of current situation\r\n    var i, l, box = this.bbox()\r\n\r\n    // recalculate position of all points according to new size\r\n    for (i = this.value.length - 1; i >= 0; i--) {\r\n      l = this.value[i][0]\r\n\r\n      if (l == 'M' || l == 'L' || l == 'T')  {\r\n        this.value[i][1] = ((this.value[i][1] - box.x) * width)  / box.width  + box.x\r\n        this.value[i][2] = ((this.value[i][2] - box.y) * height) / box.height + box.y\r\n\r\n      } else if (l == 'H')  {\r\n        this.value[i][1] = ((this.value[i][1] - box.x) * width)  / box.width  + box.x\r\n\r\n      } else if (l == 'V')  {\r\n        this.value[i][1] = ((this.value[i][1] - box.y) * height) / box.height + box.y\r\n\r\n      } else if (l == 'C' || l == 'S' || l == 'Q')  {\r\n        this.value[i][1] = ((this.value[i][1] - box.x) * width)  / box.width  + box.x\r\n        this.value[i][2] = ((this.value[i][2] - box.y) * height) / box.height + box.y\r\n        this.value[i][3] = ((this.value[i][3] - box.x) * width)  / box.width  + box.x\r\n        this.value[i][4] = ((this.value[i][4] - box.y) * height) / box.height + box.y\r\n\r\n        if (l == 'C')  {\r\n          this.value[i][5] = ((this.value[i][5] - box.x) * width)  / box.width  + box.x\r\n          this.value[i][6] = ((this.value[i][6] - box.y) * height) / box.height + box.y\r\n        }\r\n\r\n      } else if (l == 'A')  {\r\n        // resize radii\r\n        this.value[i][1] = (this.value[i][1] * width)  / box.width\r\n        this.value[i][2] = (this.value[i][2] * height) / box.height\r\n\r\n        // move position values\r\n        this.value[i][6] = ((this.value[i][6] - box.x) * width)  / box.width  + box.x\r\n        this.value[i][7] = ((this.value[i][7] - box.y) * height) / box.height + box.y\r\n      }\r\n\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Test if the passed path array use the same path data commands as this path array\r\n, equalCommands: function(pathArray) {\r\n    var i, il, equalCommands\r\n\r\n    pathArray = new SVG.PathArray(pathArray)\r\n\r\n    equalCommands = this.value.length === pathArray.value.length\r\n    for(i = 0, il = this.value.length; equalCommands && i < il; i++) {\r\n      equalCommands = this.value[i][0] === pathArray.value[i][0]\r\n    }\r\n\r\n    return equalCommands\r\n  }\r\n  // Make path array morphable\r\n, morph: function(pathArray) {\r\n    pathArray = new SVG.PathArray(pathArray)\r\n\r\n    if(this.equalCommands(pathArray)) {\r\n      this.destination = pathArray\r\n    } else {\r\n      this.destination = null\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Get morphed path array at given position\r\n, at: function(pos) {\r\n    // make sure a destination is defined\r\n    if (!this.destination) return this\r\n\r\n    var sourceArray = this.value\r\n      , destinationArray = this.destination.value\r\n      , array = [], pathArray = new SVG.PathArray()\r\n      , i, il, j, jl\r\n\r\n    // Animate has specified in the SVG spec\r\n    // See: https://www.w3.org/TR/SVG11/paths.html#PathElement\r\n    for (i = 0, il = sourceArray.length; i < il; i++) {\r\n      array[i] = [sourceArray[i][0]]\r\n      for(j = 1, jl = sourceArray[i].length; j < jl; j++) {\r\n        array[i][j] = sourceArray[i][j] + (destinationArray[i][j] - sourceArray[i][j]) * pos\r\n      }\r\n      // For the two flags of the elliptical arc command, the SVG spec say:\r\n      // Flags and booleans are interpolated as fractions between zero and one, with any non-zero value considered to be a value of one/true\r\n      // Elliptical arc command as an array followed by corresponding indexes:\r\n      // ['A', rx, ry, x-axis-rotation, large-arc-flag, sweep-flag, x, y]\r\n      //   0    1   2        3                 4             5      6  7\r\n      if(array[i][0] === 'A') {\r\n        array[i][4] = +(array[i][4] != 0)\r\n        array[i][5] = +(array[i][5] != 0)\r\n      }\r\n    }\r\n\r\n    // Directly modify the value of a path array, this is done this way for performance\r\n    pathArray.value = array\r\n    return pathArray\r\n  }\r\n  // Absolutize and parse path to array\r\n, parse: function(array) {\r\n    // if it's already a patharray, no need to parse it\r\n    if (array instanceof SVG.PathArray) return array.valueOf()\r\n\r\n    // prepare for parsing\r\n    var i, x0, y0, s, seg, arr\r\n      , x = 0\r\n      , y = 0\r\n      , paramCnt = { 'M':2, 'L':2, 'H':1, 'V':1, 'C':6, 'S':4, 'Q':4, 'T':2, 'A':7, 'Z':0 }\r\n\r\n    if(typeof array == 'string'){\r\n\r\n      array = array\r\n        .replace(SVG.regex.numbersWithDots, pathRegReplace) // convert 45.123.123 to 45.123 .123\r\n        .replace(SVG.regex.pathLetters, ' $& ') // put some room between letters and numbers\r\n        .replace(SVG.regex.hyphen, '$1 -')      // add space before hyphen\r\n        .trim()                                 // trim\r\n        .split(SVG.regex.delimiter)   // split into array\r\n\r\n    }else{\r\n      array = array.reduce(function(prev, curr){\r\n        return [].concat.call(prev, curr)\r\n      }, [])\r\n    }\r\n\r\n    // array now is an array containing all parts of a path e.g. ['M', '0', '0', 'L', '30', '30' ...]\r\n    var arr = []\r\n      , p = new SVG.Point()\r\n      , p0 = new SVG.Point()\r\n      , index = 0\r\n      , len = array.length\r\n\r\n    do{\r\n      // Test if we have a path letter\r\n      if(SVG.regex.isPathLetter.test(array[index])){\r\n        s = array[index]\r\n        ++index\r\n      // If last letter was a move command and we got no new, it defaults to [L]ine\r\n      }else if(s == 'M'){\r\n        s = 'L'\r\n      }else if(s == 'm'){\r\n        s = 'l'\r\n      }\r\n\r\n      arr.push(pathHandlers[s].call(null,\r\n          array.slice(index, (index = index + paramCnt[s.toUpperCase()])).map(parseFloat),\r\n          p, p0\r\n        )\r\n      )\r\n\r\n    }while(len > index)\r\n\r\n    return arr\r\n\r\n  }\r\n  // Get bounding box of path\r\n, bbox: function() {\r\n    SVG.parser.path.setAttribute('d', this.toString())\r\n\r\n    return SVG.parser.path.getBBox()\r\n  }\r\n\r\n})\r\n\n// Module for unit convertions\r\nSVG.Number = SVG.invent({\r\n  // Initialize\r\n  create: function(value, unit) {\r\n    // initialize defaults\r\n    this.value = 0\r\n    this.unit  = unit || ''\r\n\r\n    // parse value\r\n    if (typeof value === 'number') {\r\n      // ensure a valid numeric value\r\n      this.value = isNaN(value) ? 0 : !isFinite(value) ? (value < 0 ? -3.4e+38 : +3.4e+38) : value\r\n\r\n    } else if (typeof value === 'string') {\r\n      unit = value.match(SVG.regex.numberAndUnit)\r\n\r\n      if (unit) {\r\n        // make value numeric\r\n        this.value = parseFloat(unit[1])\r\n\r\n        // normalize\r\n        if (unit[5] == '%')\r\n          this.value /= 100\r\n        else if (unit[5] == 's')\r\n          this.value *= 1000\r\n\r\n        // store unit\r\n        this.unit = unit[5]\r\n      }\r\n\r\n    } else {\r\n      if (value instanceof SVG.Number) {\r\n        this.value = value.valueOf()\r\n        this.unit  = value.unit\r\n      }\r\n    }\r\n\r\n  }\r\n  // Add methods\r\n, extend: {\r\n    // Stringalize\r\n    toString: function() {\r\n      return (\r\n        this.unit == '%' ?\r\n          ~~(this.value * 1e8) / 1e6:\r\n        this.unit == 's' ?\r\n          this.value / 1e3 :\r\n          this.value\r\n      ) + this.unit\r\n    }\r\n  , toJSON: function() {\r\n      return this.toString()\r\n    }\r\n  , // Convert to primitive\r\n    valueOf: function() {\r\n      return this.value\r\n    }\r\n    // Add number\r\n  , plus: function(number) {\r\n      number = new SVG.Number(number)\r\n      return new SVG.Number(this + number, this.unit || number.unit)\r\n    }\r\n    // Subtract number\r\n  , minus: function(number) {\r\n      number = new SVG.Number(number)\r\n      return new SVG.Number(this - number, this.unit || number.unit)\r\n    }\r\n    // Multiply number\r\n  , times: function(number) {\r\n      number = new SVG.Number(number)\r\n      return new SVG.Number(this * number, this.unit || number.unit)\r\n    }\r\n    // Divide number\r\n  , divide: function(number) {\r\n      number = new SVG.Number(number)\r\n      return new SVG.Number(this / number, this.unit || number.unit)\r\n    }\r\n    // Convert to different unit\r\n  , to: function(unit) {\r\n      var number = new SVG.Number(this)\r\n\r\n      if (typeof unit === 'string')\r\n        number.unit = unit\r\n\r\n      return number\r\n    }\r\n    // Make number morphable\r\n  , morph: function(number) {\r\n      this.destination = new SVG.Number(number)\r\n\r\n      if(number.relative) {\r\n        this.destination.value += this.value\r\n      }\r\n\r\n      return this\r\n    }\r\n    // Get morphed number at given position\r\n  , at: function(pos) {\r\n      // Make sure a destination is defined\r\n      if (!this.destination) return this\r\n\r\n      // Generate new morphed number\r\n      return new SVG.Number(this.destination)\r\n          .minus(this)\r\n          .times(pos)\r\n          .plus(this)\r\n    }\r\n\r\n  }\r\n})\r\n\n\r\nSVG.Element = SVG.invent({\r\n  // Initialize node\r\n  create: function(node) {\r\n    // make stroke value accessible dynamically\r\n    this._stroke = SVG.defaults.attrs.stroke\r\n    this._event = null\r\n    this._events = {}\r\n\r\n    // initialize data object\r\n    this.dom = {}\r\n\r\n    // create circular reference\r\n    if (this.node = node) {\r\n      this.type = node.nodeName\r\n      this.node.instance = this\r\n      this._events = node._events || {}\r\n\r\n      // store current attribute value\r\n      this._stroke = node.getAttribute('stroke') || this._stroke\r\n    }\r\n  }\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Move over x-axis\r\n    x: function(x) {\r\n      return this.attr('x', x)\r\n    }\r\n    // Move over y-axis\r\n  , y: function(y) {\r\n      return this.attr('y', y)\r\n    }\r\n    // Move by center over x-axis\r\n  , cx: function(x) {\r\n      return x == null ? this.x() + this.width() / 2 : this.x(x - this.width() / 2)\r\n    }\r\n    // Move by center over y-axis\r\n  , cy: function(y) {\r\n      return y == null ? this.y() + this.height() / 2 : this.y(y - this.height() / 2)\r\n    }\r\n    // Move element to given x and y values\r\n  , move: function(x, y) {\r\n      return this.x(x).y(y)\r\n    }\r\n    // Move element by its center\r\n  , center: function(x, y) {\r\n      return this.cx(x).cy(y)\r\n    }\r\n    // Set width of element\r\n  , width: function(width) {\r\n      return this.attr('width', width)\r\n    }\r\n    // Set height of element\r\n  , height: function(height) {\r\n      return this.attr('height', height)\r\n    }\r\n    // Set element size to given width and height\r\n  , size: function(width, height) {\r\n      var p = proportionalSize(this, width, height)\r\n\r\n      return this\r\n        .width(new SVG.Number(p.width))\r\n        .height(new SVG.Number(p.height))\r\n    }\r\n    // Clone element\r\n  , clone: function(parent) {\r\n      // write dom data to the dom so the clone can pickup the data\r\n      this.writeDataToDom()\r\n\r\n      // clone element and assign new id\r\n      var clone = assignNewId(this.node.cloneNode(true))\r\n\r\n      // insert the clone in the given parent or after myself\r\n      if(parent) parent.add(clone)\r\n      else this.after(clone)\r\n\r\n      return clone\r\n    }\r\n    // Remove element\r\n  , remove: function() {\r\n      if (this.parent())\r\n        this.parent().removeElement(this)\r\n\r\n      return this\r\n    }\r\n    // Replace element\r\n  , replace: function(element) {\r\n      this.after(element).remove()\r\n\r\n      return element\r\n    }\r\n    // Add element to given container and return self\r\n  , addTo: function(parent) {\r\n      return parent.put(this)\r\n    }\r\n    // Add element to given container and return container\r\n  , putIn: function(parent) {\r\n      return parent.add(this)\r\n    }\r\n    // Get / set id\r\n  , id: function(id) {\r\n      return this.attr('id', id)\r\n    }\r\n    // Checks whether the given point inside the bounding box of the element\r\n  , inside: function(x, y) {\r\n      var box = this.bbox()\r\n\r\n      return x > box.x\r\n          && y > box.y\r\n          && x < box.x + box.width\r\n          && y < box.y + box.height\r\n    }\r\n    // Show element\r\n  , show: function() {\r\n      return this.style('display', '')\r\n    }\r\n    // Hide element\r\n  , hide: function() {\r\n      return this.style('display', 'none')\r\n    }\r\n    // Is element visible?\r\n  , visible: function() {\r\n      return this.style('display') != 'none'\r\n    }\r\n    // Return id on string conversion\r\n  , toString: function() {\r\n      return this.attr('id')\r\n    }\r\n    // Return array of classes on the node\r\n  , classes: function() {\r\n      var attr = this.attr('class')\r\n\r\n      return attr == null ? [] : attr.trim().split(SVG.regex.delimiter)\r\n    }\r\n    // Return true if class exists on the node, false otherwise\r\n  , hasClass: function(name) {\r\n      return this.classes().indexOf(name) != -1\r\n    }\r\n    // Add class to the node\r\n  , addClass: function(name) {\r\n      if (!this.hasClass(name)) {\r\n        var array = this.classes()\r\n        array.push(name)\r\n        this.attr('class', array.join(' '))\r\n      }\r\n\r\n      return this\r\n    }\r\n    // Remove class from the node\r\n  , removeClass: function(name) {\r\n      if (this.hasClass(name)) {\r\n        this.attr('class', this.classes().filter(function(c) {\r\n          return c != name\r\n        }).join(' '))\r\n      }\r\n\r\n      return this\r\n    }\r\n    // Toggle the presence of a class on the node\r\n  , toggleClass: function(name) {\r\n      return this.hasClass(name) ? this.removeClass(name) : this.addClass(name)\r\n    }\r\n    // Get referenced element form attribute value\r\n  , reference: function(attr) {\r\n      return SVG.get(this.attr(attr))\r\n    }\r\n    // Returns the parent element instance\r\n  , parent: function(type) {\r\n      var parent = this\r\n\r\n      // check for parent\r\n      if(!parent.node.parentNode) return null\r\n\r\n      // get parent element\r\n      parent = SVG.adopt(parent.node.parentNode)\r\n\r\n      if(!type) return parent\r\n\r\n      // loop trough ancestors if type is given\r\n      while(parent && parent.node instanceof window.SVGElement){\r\n        if(typeof type === 'string' ? parent.matches(type) : parent instanceof type) return parent\r\n        if(!parent.node.parentNode || parent.node.parentNode.nodeName == '#document' || parent.node.parentNode.nodeName == '#document-fragment') return null // #759, #720\r\n        parent = SVG.adopt(parent.node.parentNode)\r\n      }\r\n    }\r\n    // Get parent document\r\n  , doc: function() {\r\n      return this instanceof SVG.Doc ? this : this.parent(SVG.Doc)\r\n    }\r\n    // return array of all ancestors of given type up to the root svg\r\n  , parents: function(type) {\r\n      var parents = [], parent = this\r\n\r\n      do{\r\n        parent = parent.parent(type)\r\n        if(!parent || !parent.node) break\r\n\r\n        parents.push(parent)\r\n      } while(parent.parent)\r\n\r\n      return parents\r\n    }\r\n    // matches the element vs a css selector\r\n  , matches: function(selector){\r\n      return matches(this.node, selector)\r\n    }\r\n    // Returns the svg node to call native svg methods on it\r\n  , native: function() {\r\n      return this.node\r\n    }\r\n    // Import raw svg\r\n  , svg: function(svg) {\r\n      // create temporary holder\r\n      var well = document.createElement('svg')\r\n\r\n      // act as a setter if svg is given\r\n      if (svg && this instanceof SVG.Parent) {\r\n        // dump raw svg\r\n        well.innerHTML = '<svg>' + svg.replace(/\\n/, '').replace(/<([\\w:-]+)([^<]+?)\\/>/g, '<$1$2></$1>') + '</svg>'\r\n\r\n        // transplant nodes\r\n        for (var i = 0, il = well.firstChild.childNodes.length; i < il; i++)\r\n          this.node.appendChild(well.firstChild.firstChild)\r\n\r\n      // otherwise act as a getter\r\n      } else {\r\n        // create a wrapping svg element in case of partial content\r\n        well.appendChild(svg = document.createElement('svg'))\r\n\r\n        // write svgjs data to the dom\r\n        this.writeDataToDom()\r\n\r\n        // insert a copy of this node\r\n        svg.appendChild(this.node.cloneNode(true))\r\n\r\n        // return target element\r\n        return well.innerHTML.replace(/^<svg>/, '').replace(/<\\/svg>$/, '')\r\n      }\r\n\r\n      return this\r\n    }\r\n  // write svgjs data to the dom\r\n  , writeDataToDom: function() {\r\n\r\n      // dump variables recursively\r\n      if(this.each || this.lines){\r\n        var fn = this.each ? this : this.lines();\r\n        fn.each(function(){\r\n          this.writeDataToDom()\r\n        })\r\n      }\r\n\r\n      // remove previously set data\r\n      this.node.removeAttribute('svgjs:data')\r\n\r\n      if(Object.keys(this.dom).length)\r\n        this.node.setAttribute('svgjs:data', JSON.stringify(this.dom)) // see #428\r\n\r\n      return this\r\n    }\r\n  // set given data to the elements data property\r\n  , setData: function(o){\r\n      this.dom = o\r\n      return this\r\n    }\r\n  , is: function(obj){\r\n      return is(this, obj)\r\n    }\r\n  }\r\n})\r\n\nSVG.easing = {\r\n  '-': function(pos){return pos}\r\n, '<>':function(pos){return -Math.cos(pos * Math.PI) / 2 + 0.5}\r\n, '>': function(pos){return  Math.sin(pos * Math.PI / 2)}\r\n, '<': function(pos){return -Math.cos(pos * Math.PI / 2) + 1}\r\n}\r\n\r\nSVG.morph = function(pos){\r\n  return function(from, to) {\r\n    return new SVG.MorphObj(from, to).at(pos)\r\n  }\r\n}\r\n\r\nSVG.Situation = SVG.invent({\r\n\r\n  create: function(o){\r\n    this.init = false\r\n    this.reversed = false\r\n    this.reversing = false\r\n\r\n    this.duration = new SVG.Number(o.duration).valueOf()\r\n    this.delay = new SVG.Number(o.delay).valueOf()\r\n\r\n    this.start = +new Date() + this.delay\r\n    this.finish = this.start + this.duration\r\n    this.ease = o.ease\r\n\r\n    // this.loop is incremented from 0 to this.loops\r\n    // it is also incremented when in an infinite loop (when this.loops is true)\r\n    this.loop = 0\r\n    this.loops = false\r\n\r\n    this.animations = {\r\n      // functionToCall: [list of morphable objects]\r\n      // e.g. move: [SVG.Number, SVG.Number]\r\n    }\r\n\r\n    this.attrs = {\r\n      // holds all attributes which are not represented from a function svg.js provides\r\n      // e.g. someAttr: SVG.Number\r\n    }\r\n\r\n    this.styles = {\r\n      // holds all styles which should be animated\r\n      // e.g. fill-color: SVG.Color\r\n    }\r\n\r\n    this.transforms = [\r\n      // holds all transformations as transformation objects\r\n      // e.g. [SVG.Rotate, SVG.Translate, SVG.Matrix]\r\n    ]\r\n\r\n    this.once = {\r\n      // functions to fire at a specific position\r\n      // e.g. \"0.5\": function foo(){}\r\n    }\r\n\r\n  }\r\n\r\n})\r\n\r\n\r\nSVG.FX = SVG.invent({\r\n\r\n  create: function(element) {\r\n    this._target = element\r\n    this.situations = []\r\n    this.active = false\r\n    this.situation = null\r\n    this.paused = false\r\n    this.lastPos = 0\r\n    this.pos = 0\r\n    // The absolute position of an animation is its position in the context of its complete duration (including delay and loops)\r\n    // When performing a delay, absPos is below 0 and when performing a loop, its value is above 1\r\n    this.absPos = 0\r\n    this._speed = 1\r\n  }\r\n\r\n, extend: {\r\n\r\n    /**\r\n     * sets or returns the target of this animation\r\n     * @param o object || number In case of Object it holds all parameters. In case of number its the duration of the animation\r\n     * @param ease function || string Function which should be used for easing or easing keyword\r\n     * @param delay Number indicating the delay before the animation starts\r\n     * @return target || this\r\n     */\r\n    animate: function(o, ease, delay){\r\n\r\n      if(typeof o == 'object'){\r\n        ease = o.ease\r\n        delay = o.delay\r\n        o = o.duration\r\n      }\r\n\r\n      var situation = new SVG.Situation({\r\n        duration: o || 1000,\r\n        delay: delay || 0,\r\n        ease: SVG.easing[ease || '-'] || ease\r\n      })\r\n\r\n      this.queue(situation)\r\n\r\n      return this\r\n    }\r\n\r\n    /**\r\n     * sets a delay before the next element of the queue is called\r\n     * @param delay Duration of delay in milliseconds\r\n     * @return this.target()\r\n     */\r\n  , delay: function(delay){\r\n      // The delay is performed by an empty situation with its duration\r\n      // attribute set to the duration of the delay\r\n      var situation = new SVG.Situation({\r\n        duration: delay,\r\n        delay: 0,\r\n        ease: SVG.easing['-']\r\n      })\r\n\r\n      return this.queue(situation)\r\n    }\r\n\r\n    /**\r\n     * sets or returns the target of this animation\r\n     * @param null || target SVG.Element which should be set as new target\r\n     * @return target || this\r\n     */\r\n  , target: function(target){\r\n      if(target && target instanceof SVG.Element){\r\n        this._target = target\r\n        return this\r\n      }\r\n\r\n      return this._target\r\n    }\r\n\r\n    // returns the absolute position at a given time\r\n  , timeToAbsPos: function(timestamp){\r\n      return (timestamp - this.situation.start) / (this.situation.duration/this._speed)\r\n    }\r\n\r\n    // returns the timestamp from a given absolute positon\r\n  , absPosToTime: function(absPos){\r\n      return this.situation.duration/this._speed * absPos + this.situation.start\r\n    }\r\n\r\n    // starts the animationloop\r\n  , startAnimFrame: function(){\r\n      this.stopAnimFrame()\r\n      this.animationFrame = window.requestAnimationFrame(function(){ this.step() }.bind(this))\r\n    }\r\n\r\n    // cancels the animationframe\r\n  , stopAnimFrame: function(){\r\n      window.cancelAnimationFrame(this.animationFrame)\r\n    }\r\n\r\n    // kicks off the animation - only does something when the queue is currently not active and at least one situation is set\r\n  , start: function(){\r\n      // dont start if already started\r\n      if(!this.active && this.situation){\r\n        this.active = true\r\n        this.startCurrent()\r\n      }\r\n\r\n      return this\r\n    }\r\n\r\n    // start the current situation\r\n  , startCurrent: function(){\r\n      this.situation.start = +new Date + this.situation.delay/this._speed\r\n      this.situation.finish = this.situation.start + this.situation.duration/this._speed\r\n      return this.initAnimations().step()\r\n    }\r\n\r\n    /**\r\n     * adds a function / Situation to the animation queue\r\n     * @param fn function / situation to add\r\n     * @return this\r\n     */\r\n  , queue: function(fn){\r\n      if(typeof fn == 'function' || fn instanceof SVG.Situation)\r\n        this.situations.push(fn)\r\n\r\n      if(!this.situation) this.situation = this.situations.shift()\r\n\r\n      return this\r\n    }\r\n\r\n    /**\r\n     * pulls next element from the queue and execute it\r\n     * @return this\r\n     */\r\n  , dequeue: function(){\r\n      // stop current animation\r\n      this.stop()\r\n\r\n      // get next animation from queue\r\n      this.situation = this.situations.shift()\r\n\r\n      if(this.situation){\r\n        if(this.situation instanceof SVG.Situation) {\r\n          this.start()\r\n        } else {\r\n          // If it is not a SVG.Situation, then it is a function, we execute it\r\n          this.situation.call(this)\r\n        }\r\n      }\r\n\r\n      return this\r\n    }\r\n\r\n    // updates all animations to the current state of the element\r\n    // this is important when one property could be changed from another property\r\n  , initAnimations: function() {\r\n      var i, j, source\r\n      var s = this.situation\r\n\r\n      if(s.init) return this\r\n\r\n      for(i in s.animations){\r\n        source = this.target()[i]()\r\n\r\n        if(!Array.isArray(source)) {\r\n          source = [source]\r\n        }\r\n\r\n        if(!Array.isArray(s.animations[i])) {\r\n          s.animations[i] = [s.animations[i]]\r\n        }\r\n\r\n        //if(s.animations[i].length > source.length) {\r\n        //  source.concat = source.concat(s.animations[i].slice(source.length, s.animations[i].length))\r\n        //}\r\n\r\n        for(j = source.length; j--;) {\r\n          // The condition is because some methods return a normal number instead\r\n          // of a SVG.Number\r\n          if(s.animations[i][j] instanceof SVG.Number)\r\n            source[j] = new SVG.Number(source[j])\r\n\r\n          s.animations[i][j] = source[j].morph(s.animations[i][j])\r\n        }\r\n      }\r\n\r\n      for(i in s.attrs){\r\n        s.attrs[i] = new SVG.MorphObj(this.target().attr(i), s.attrs[i])\r\n      }\r\n\r\n      for(i in s.styles){\r\n        s.styles[i] = new SVG.MorphObj(this.target().style(i), s.styles[i])\r\n      }\r\n\r\n      s.initialTransformation = this.target().matrixify()\r\n\r\n      s.init = true\r\n      return this\r\n    }\r\n  , clearQueue: function(){\r\n      this.situations = []\r\n      return this\r\n    }\r\n  , clearCurrent: function(){\r\n      this.situation = null\r\n      return this\r\n    }\r\n    /** stops the animation immediately\r\n     * @param jumpToEnd A Boolean indicating whether to complete the current animation immediately.\r\n     * @param clearQueue A Boolean indicating whether to remove queued animation as well.\r\n     * @return this\r\n     */\r\n  , stop: function(jumpToEnd, clearQueue){\r\n      var active = this.active\r\n      this.active = false\r\n\r\n      if(clearQueue){\r\n        this.clearQueue()\r\n      }\r\n\r\n      if(jumpToEnd && this.situation){\r\n        // initialize the situation if it was not\r\n        !active && this.startCurrent()\r\n        this.atEnd()\r\n      }\r\n\r\n      this.stopAnimFrame()\r\n\r\n      return this.clearCurrent()\r\n    }\r\n\r\n    /** resets the element to the state where the current element has started\r\n     * @return this\r\n     */\r\n  , reset: function(){\r\n      if(this.situation){\r\n        var temp = this.situation\r\n        this.stop()\r\n        this.situation = temp\r\n        this.atStart()\r\n      }\r\n      return this\r\n    }\r\n\r\n    // Stop the currently-running animation, remove all queued animations, and complete all animations for the element.\r\n  , finish: function(){\r\n\r\n      this.stop(true, false)\r\n\r\n      while(this.dequeue().situation && this.stop(true, false));\r\n\r\n      this.clearQueue().clearCurrent()\r\n\r\n      return this\r\n    }\r\n\r\n    // set the internal animation pointer at the start position, before any loops, and updates the visualisation\r\n  , atStart: function() {\r\n      return this.at(0, true)\r\n    }\r\n\r\n    // set the internal animation pointer at the end position, after all the loops, and updates the visualisation\r\n  , atEnd: function() {\r\n      if (this.situation.loops === true) {\r\n        // If in a infinite loop, we end the current iteration\r\n        this.situation.loops = this.situation.loop + 1\r\n      }\r\n\r\n      if(typeof this.situation.loops == 'number') {\r\n        // If performing a finite number of loops, we go after all the loops\r\n        return this.at(this.situation.loops, true)\r\n      } else {\r\n        // If no loops, we just go at the end\r\n        return this.at(1, true)\r\n      }\r\n    }\r\n\r\n    // set the internal animation pointer to the specified position and updates the visualisation\r\n    // if isAbsPos is true, pos is treated as an absolute position\r\n  , at: function(pos, isAbsPos){\r\n      var durDivSpd = this.situation.duration/this._speed\r\n\r\n      this.absPos = pos\r\n      // If pos is not an absolute position, we convert it into one\r\n      if (!isAbsPos) {\r\n        if (this.situation.reversed) this.absPos = 1 - this.absPos\r\n        this.absPos += this.situation.loop\r\n      }\r\n\r\n      this.situation.start = +new Date - this.absPos * durDivSpd\r\n      this.situation.finish = this.situation.start + durDivSpd\r\n\r\n      return this.step(true)\r\n    }\r\n\r\n    /**\r\n     * sets or returns the speed of the animations\r\n     * @param speed null || Number The new speed of the animations\r\n     * @return Number || this\r\n     */\r\n  , speed: function(speed){\r\n      if (speed === 0) return this.pause()\r\n\r\n      if (speed) {\r\n        this._speed = speed\r\n        // We use an absolute position here so that speed can affect the delay before the animation\r\n        return this.at(this.absPos, true)\r\n      } else return this._speed\r\n    }\r\n\r\n    // Make loopable\r\n  , loop: function(times, reverse) {\r\n      var c = this.last()\r\n\r\n      // store total loops\r\n      c.loops = (times != null) ? times : true\r\n      c.loop = 0\r\n\r\n      if(reverse) c.reversing = true\r\n      return this\r\n    }\r\n\r\n    // pauses the animation\r\n  , pause: function(){\r\n      this.paused = true\r\n      this.stopAnimFrame()\r\n\r\n      return this\r\n    }\r\n\r\n    // unpause the animation\r\n  , play: function(){\r\n      if(!this.paused) return this\r\n      this.paused = false\r\n      // We use an absolute position here so that the delay before the animation can be paused\r\n      return this.at(this.absPos, true)\r\n    }\r\n\r\n    /**\r\n     * toggle or set the direction of the animation\r\n     * true sets direction to backwards while false sets it to forwards\r\n     * @param reversed Boolean indicating whether to reverse the animation or not (default: toggle the reverse status)\r\n     * @return this\r\n     */\r\n  , reverse: function(reversed){\r\n      var c = this.last()\r\n\r\n      if(typeof reversed == 'undefined') c.reversed = !c.reversed\r\n      else c.reversed = reversed\r\n\r\n      return this\r\n    }\r\n\r\n\r\n    /**\r\n     * returns a float from 0-1 indicating the progress of the current animation\r\n     * @param eased Boolean indicating whether the returned position should be eased or not\r\n     * @return number\r\n     */\r\n  , progress: function(easeIt){\r\n      return easeIt ? this.situation.ease(this.pos) : this.pos\r\n    }\r\n\r\n    /**\r\n     * adds a callback function which is called when the current animation is finished\r\n     * @param fn Function which should be executed as callback\r\n     * @return number\r\n     */\r\n  , after: function(fn){\r\n      var c = this.last()\r\n        , wrapper = function wrapper(e){\r\n            if(e.detail.situation == c){\r\n              fn.call(this, c)\r\n              this.off('finished.fx', wrapper) // prevent memory leak\r\n            }\r\n          }\r\n\r\n      this.target().on('finished.fx', wrapper)\r\n\r\n      return this._callStart()\r\n    }\r\n\r\n    // adds a callback which is called whenever one animation step is performed\r\n  , during: function(fn){\r\n      var c = this.last()\r\n        , wrapper = function(e){\r\n            if(e.detail.situation == c){\r\n              fn.call(this, e.detail.pos, SVG.morph(e.detail.pos), e.detail.eased, c)\r\n            }\r\n          }\r\n\r\n      // see above\r\n      this.target().off('during.fx', wrapper).on('during.fx', wrapper)\r\n\r\n      this.after(function(){\r\n        this.off('during.fx', wrapper)\r\n      })\r\n\r\n      return this._callStart()\r\n    }\r\n\r\n    // calls after ALL animations in the queue are finished\r\n  , afterAll: function(fn){\r\n      var wrapper = function wrapper(e){\r\n            fn.call(this)\r\n            this.off('allfinished.fx', wrapper)\r\n          }\r\n\r\n      // see above\r\n      this.target().off('allfinished.fx', wrapper).on('allfinished.fx', wrapper)\r\n\r\n      return this._callStart()\r\n    }\r\n\r\n    // calls on every animation step for all animations\r\n  , duringAll: function(fn){\r\n      var wrapper = function(e){\r\n            fn.call(this, e.detail.pos, SVG.morph(e.detail.pos), e.detail.eased, e.detail.situation)\r\n          }\r\n\r\n      this.target().off('during.fx', wrapper).on('during.fx', wrapper)\r\n\r\n      this.afterAll(function(){\r\n        this.off('during.fx', wrapper)\r\n      })\r\n\r\n      return this._callStart()\r\n    }\r\n\r\n  , last: function(){\r\n      return this.situations.length ? this.situations[this.situations.length-1] : this.situation\r\n    }\r\n\r\n    // adds one property to the animations\r\n  , add: function(method, args, type){\r\n      this.last()[type || 'animations'][method] = args\r\n      return this._callStart()\r\n    }\r\n\r\n    /** perform one step of the animation\r\n     *  @param ignoreTime Boolean indicating whether to ignore time and use position directly or recalculate position based on time\r\n     *  @return this\r\n     */\r\n  , step: function(ignoreTime){\r\n\r\n      // convert current time to an absolute position\r\n      if(!ignoreTime) this.absPos = this.timeToAbsPos(+new Date)\r\n\r\n      // This part convert an absolute position to a position\r\n      if(this.situation.loops !== false) {\r\n        var absPos, absPosInt, lastLoop\r\n\r\n        // If the absolute position is below 0, we just treat it as if it was 0\r\n        absPos = Math.max(this.absPos, 0)\r\n        absPosInt = Math.floor(absPos)\r\n\r\n        if(this.situation.loops === true || absPosInt < this.situation.loops) {\r\n          this.pos = absPos - absPosInt\r\n          lastLoop = this.situation.loop\r\n          this.situation.loop = absPosInt\r\n        } else {\r\n          this.absPos = this.situation.loops\r\n          this.pos = 1\r\n          // The -1 here is because we don't want to toggle reversed when all the loops have been completed\r\n          lastLoop = this.situation.loop - 1\r\n          this.situation.loop = this.situation.loops\r\n        }\r\n\r\n        if(this.situation.reversing) {\r\n          // Toggle reversed if an odd number of loops as occured since the last call of step\r\n          this.situation.reversed = this.situation.reversed != Boolean((this.situation.loop - lastLoop) % 2)\r\n        }\r\n\r\n      } else {\r\n        // If there are no loop, the absolute position must not be above 1\r\n        this.absPos = Math.min(this.absPos, 1)\r\n        this.pos = this.absPos\r\n      }\r\n\r\n      // while the absolute position can be below 0, the position must not be below 0\r\n      if(this.pos < 0) this.pos = 0\r\n\r\n      if(this.situation.reversed) this.pos = 1 - this.pos\r\n\r\n\r\n      // apply easing\r\n      var eased = this.situation.ease(this.pos)\r\n\r\n      // call once-callbacks\r\n      for(var i in this.situation.once){\r\n        if(i > this.lastPos && i <= eased){\r\n          this.situation.once[i].call(this.target(), this.pos, eased)\r\n          delete this.situation.once[i]\r\n        }\r\n      }\r\n\r\n      // fire during callback with position, eased position and current situation as parameter\r\n      if(this.active) this.target().fire('during', {pos: this.pos, eased: eased, fx: this, situation: this.situation})\r\n\r\n      // the user may call stop or finish in the during callback\r\n      // so make sure that we still have a valid situation\r\n      if(!this.situation){\r\n        return this\r\n      }\r\n\r\n      // apply the actual animation to every property\r\n      this.eachAt()\r\n\r\n      // do final code when situation is finished\r\n      if((this.pos == 1 && !this.situation.reversed) || (this.situation.reversed && this.pos == 0)){\r\n\r\n        // stop animation callback\r\n        this.stopAnimFrame()\r\n\r\n        // fire finished callback with current situation as parameter\r\n        this.target().fire('finished', {fx:this, situation: this.situation})\r\n\r\n        if(!this.situations.length){\r\n          this.target().fire('allfinished')\r\n\r\n          // Recheck the length since the user may call animate in the afterAll callback\r\n          if(!this.situations.length){\r\n            this.target().off('.fx') // there shouldnt be any binding left, but to make sure...\r\n            this.active = false\r\n          }\r\n        }\r\n\r\n        // start next animation\r\n        if(this.active) this.dequeue()\r\n        else this.clearCurrent()\r\n\r\n      }else if(!this.paused && this.active){\r\n        // we continue animating when we are not at the end\r\n        this.startAnimFrame()\r\n      }\r\n\r\n      // save last eased position for once callback triggering\r\n      this.lastPos = eased\r\n      return this\r\n\r\n    }\r\n\r\n    // calculates the step for every property and calls block with it\r\n  , eachAt: function(){\r\n      var i, len, at, self = this, target = this.target(), s = this.situation\r\n\r\n      // apply animations which can be called trough a method\r\n      for(i in s.animations){\r\n\r\n        at = [].concat(s.animations[i]).map(function(el){\r\n          return typeof el !== 'string' && el.at ? el.at(s.ease(self.pos), self.pos) : el\r\n        })\r\n\r\n        target[i].apply(target, at)\r\n\r\n      }\r\n\r\n      // apply animation which has to be applied with attr()\r\n      for(i in s.attrs){\r\n\r\n        at = [i].concat(s.attrs[i]).map(function(el){\r\n          return typeof el !== 'string' && el.at ? el.at(s.ease(self.pos), self.pos) : el\r\n        })\r\n\r\n        target.attr.apply(target, at)\r\n\r\n      }\r\n\r\n      // apply animation which has to be applied with style()\r\n      for(i in s.styles){\r\n\r\n        at = [i].concat(s.styles[i]).map(function(el){\r\n          return typeof el !== 'string' && el.at ? el.at(s.ease(self.pos), self.pos) : el\r\n        })\r\n\r\n        target.style.apply(target, at)\r\n\r\n      }\r\n\r\n      // animate initialTransformation which has to be chained\r\n      if(s.transforms.length){\r\n\r\n        // get initial initialTransformation\r\n        at = s.initialTransformation\r\n        for(i = 0, len = s.transforms.length; i < len; i++){\r\n\r\n          // get next transformation in chain\r\n          var a = s.transforms[i]\r\n\r\n          // multiply matrix directly\r\n          if(a instanceof SVG.Matrix){\r\n\r\n            if(a.relative){\r\n              at = at.multiply(new SVG.Matrix().morph(a).at(s.ease(this.pos)))\r\n            }else{\r\n              at = at.morph(a).at(s.ease(this.pos))\r\n            }\r\n            continue\r\n          }\r\n\r\n          // when transformation is absolute we have to reset the needed transformation first\r\n          if(!a.relative)\r\n            a.undo(at.extract())\r\n\r\n          // and reapply it after\r\n          at = at.multiply(a.at(s.ease(this.pos)))\r\n\r\n        }\r\n\r\n        // set new matrix on element\r\n        target.matrix(at)\r\n      }\r\n\r\n      return this\r\n\r\n    }\r\n\r\n\r\n    // adds an once-callback which is called at a specific position and never again\r\n  , once: function(pos, fn, isEased){\r\n      var c = this.last()\r\n      if(!isEased) pos = c.ease(pos)\r\n\r\n      c.once[pos] = fn\r\n\r\n      return this\r\n    }\r\n\r\n  , _callStart: function() {\r\n      setTimeout(function(){this.start()}.bind(this), 0)\r\n      return this\r\n    }\r\n\r\n  }\r\n\r\n, parent: SVG.Element\r\n\r\n  // Add method to parent elements\r\n, construct: {\r\n    // Get fx module or create a new one, then animate with given duration and ease\r\n    animate: function(o, ease, delay) {\r\n      return (this.fx || (this.fx = new SVG.FX(this))).animate(o, ease, delay)\r\n    }\r\n  , delay: function(delay){\r\n      return (this.fx || (this.fx = new SVG.FX(this))).delay(delay)\r\n    }\r\n  , stop: function(jumpToEnd, clearQueue) {\r\n      if (this.fx)\r\n        this.fx.stop(jumpToEnd, clearQueue)\r\n\r\n      return this\r\n    }\r\n  , finish: function() {\r\n      if (this.fx)\r\n        this.fx.finish()\r\n\r\n      return this\r\n    }\r\n    // Pause current animation\r\n  , pause: function() {\r\n      if (this.fx)\r\n        this.fx.pause()\r\n\r\n      return this\r\n    }\r\n    // Play paused current animation\r\n  , play: function() {\r\n      if (this.fx)\r\n        this.fx.play()\r\n\r\n      return this\r\n    }\r\n    // Set/Get the speed of the animations\r\n  , speed: function(speed) {\r\n      if (this.fx)\r\n        if (speed == null)\r\n          return this.fx.speed()\r\n        else\r\n          this.fx.speed(speed)\r\n\r\n      return this\r\n    }\r\n  }\r\n\r\n})\r\n\r\n// MorphObj is used whenever no morphable object is given\r\nSVG.MorphObj = SVG.invent({\r\n\r\n  create: function(from, to){\r\n    // prepare color for morphing\r\n    if(SVG.Color.isColor(to)) return new SVG.Color(from).morph(to)\r\n    // check if we have a list of values\r\n    if(SVG.regex.delimiter.test(from)) {\r\n      // prepare path for morphing\r\n      if(SVG.regex.pathLetters.test(from)) return new SVG.PathArray(from).morph(to)\r\n      // prepare value list for morphing\r\n      else return new SVG.Array(from).morph(to)\r\n    }\r\n    // prepare number for morphing\r\n    if(SVG.regex.numberAndUnit.test(to)) return new SVG.Number(from).morph(to)\r\n\r\n    // prepare for plain morphing\r\n    this.value = from\r\n    this.destination = to\r\n  }\r\n\r\n, extend: {\r\n    at: function(pos, real){\r\n      return real < 1 ? this.value : this.destination\r\n    },\r\n\r\n    valueOf: function(){\r\n      return this.value\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.extend(SVG.FX, {\r\n  // Add animatable attributes\r\n  attr: function(a, v, relative) {\r\n    // apply attributes individually\r\n    if (typeof a == 'object') {\r\n      for (var key in a)\r\n        this.attr(key, a[key])\r\n\r\n    } else {\r\n      this.add(a, v, 'attrs')\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Add animatable styles\r\n, style: function(s, v) {\r\n    if (typeof s == 'object')\r\n      for (var key in s)\r\n        this.style(key, s[key])\r\n\r\n    else\r\n      this.add(s, v, 'styles')\r\n\r\n    return this\r\n  }\r\n  // Animatable x-axis\r\n, x: function(x, relative) {\r\n    if(this.target() instanceof SVG.G){\r\n      this.transform({x:x}, relative)\r\n      return this\r\n    }\r\n\r\n    var num = new SVG.Number(x)\r\n    num.relative = relative\r\n    return this.add('x', num)\r\n  }\r\n  // Animatable y-axis\r\n, y: function(y, relative) {\r\n    if(this.target() instanceof SVG.G){\r\n      this.transform({y:y}, relative)\r\n      return this\r\n    }\r\n\r\n    var num = new SVG.Number(y)\r\n    num.relative = relative\r\n    return this.add('y', num)\r\n  }\r\n  // Animatable center x-axis\r\n, cx: function(x) {\r\n    return this.add('cx', new SVG.Number(x))\r\n  }\r\n  // Animatable center y-axis\r\n, cy: function(y) {\r\n    return this.add('cy', new SVG.Number(y))\r\n  }\r\n  // Add animatable move\r\n, move: function(x, y) {\r\n    return this.x(x).y(y)\r\n  }\r\n  // Add animatable center\r\n, center: function(x, y) {\r\n    return this.cx(x).cy(y)\r\n  }\r\n  // Add animatable size\r\n, size: function(width, height) {\r\n    if (this.target() instanceof SVG.Text) {\r\n      // animate font size for Text elements\r\n      this.attr('font-size', width)\r\n\r\n    } else {\r\n      // animate bbox based size for all other elements\r\n      var box\r\n\r\n      if(!width || !height){\r\n        box = this.target().bbox()\r\n      }\r\n\r\n      if(!width){\r\n        width = box.width / box.height  * height\r\n      }\r\n\r\n      if(!height){\r\n        height = box.height / box.width  * width\r\n      }\r\n\r\n      this.add('width' , new SVG.Number(width))\r\n          .add('height', new SVG.Number(height))\r\n\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Add animatable width\r\n, width: function(width) {\r\n    return this.add('width', new SVG.Number(width))\r\n  }\r\n  // Add animatable height\r\n, height: function(height) {\r\n    return this.add('height', new SVG.Number(height))\r\n  }\r\n  // Add animatable plot\r\n, plot: function(a, b, c, d) {\r\n    // Lines can be plotted with 4 arguments\r\n    if(arguments.length == 4) {\r\n      return this.plot([a, b, c, d])\r\n    }\r\n\r\n    return this.add('plot', new (this.target().morphArray)(a))\r\n  }\r\n  // Add leading method\r\n, leading: function(value) {\r\n    return this.target().leading ?\r\n      this.add('leading', new SVG.Number(value)) :\r\n      this\r\n  }\r\n  // Add animatable viewbox\r\n, viewbox: function(x, y, width, height) {\r\n    if (this.target() instanceof SVG.Container) {\r\n      this.add('viewbox', new SVG.ViewBox(x, y, width, height))\r\n    }\r\n\r\n    return this\r\n  }\r\n, update: function(o) {\r\n    if (this.target() instanceof SVG.Stop) {\r\n      if (typeof o == 'number' || o instanceof SVG.Number) {\r\n        return this.update({\r\n          offset:  arguments[0]\r\n        , color:   arguments[1]\r\n        , opacity: arguments[2]\r\n        })\r\n      }\r\n\r\n      if (o.opacity != null) this.attr('stop-opacity', o.opacity)\r\n      if (o.color   != null) this.attr('stop-color', o.color)\r\n      if (o.offset  != null) this.attr('offset', o.offset)\r\n    }\r\n\r\n    return this\r\n  }\r\n})\r\n\nSVG.Box = SVG.invent({\r\n  create: function(x, y, width, height) {\r\n    if (typeof x == 'object' && !(x instanceof SVG.Element)) {\r\n      // chromes getBoundingClientRect has no x and y property\r\n      return SVG.Box.call(this, x.left != null ? x.left : x.x , x.top != null ? x.top : x.y, x.width, x.height)\r\n    } else if (arguments.length == 4) {\r\n      this.x = x\r\n      this.y = y\r\n      this.width = width\r\n      this.height = height\r\n    }\r\n\r\n    // add center, right, bottom...\r\n    fullBox(this)\r\n  }\r\n, extend: {\r\n    // Merge rect box with another, return a new instance\r\n    merge: function(box) {\r\n      var b = new this.constructor()\r\n\r\n      // merge boxes\r\n      b.x      = Math.min(this.x, box.x)\r\n      b.y      = Math.min(this.y, box.y)\r\n      b.width  = Math.max(this.x + this.width,  box.x + box.width)  - b.x\r\n      b.height = Math.max(this.y + this.height, box.y + box.height) - b.y\r\n\r\n      return fullBox(b)\r\n    }\r\n\r\n  , transform: function(m) {\r\n      var xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, p, bbox\r\n\r\n      var pts = [\r\n        new SVG.Point(this.x, this.y),\r\n        new SVG.Point(this.x2, this.y),\r\n        new SVG.Point(this.x, this.y2),\r\n        new SVG.Point(this.x2, this.y2)\r\n      ]\r\n\r\n      pts.forEach(function(p) {\r\n        p = p.transform(m)\r\n        xMin = Math.min(xMin,p.x)\r\n        xMax = Math.max(xMax,p.x)\r\n        yMin = Math.min(yMin,p.y)\r\n        yMax = Math.max(yMax,p.y)\r\n      })\r\n\r\n      bbox = new this.constructor()\r\n      bbox.x = xMin\r\n      bbox.width = xMax-xMin\r\n      bbox.y = yMin\r\n      bbox.height = yMax-yMin\r\n\r\n      fullBox(bbox)\r\n\r\n      return bbox\r\n    }\r\n  }\r\n})\r\n\r\nSVG.BBox = SVG.invent({\r\n  // Initialize\r\n  create: function(element) {\r\n    SVG.Box.apply(this, [].slice.call(arguments))\r\n\r\n    // get values if element is given\r\n    if (element instanceof SVG.Element) {\r\n      var box\r\n\r\n      // yes this is ugly, but Firefox can be a pain when it comes to elements that are not yet rendered\r\n      try {\r\n\r\n        if (!document.documentElement.contains){\r\n          // This is IE - it does not support contains() for top-level SVGs\r\n          var topParent = element.node\r\n          while (topParent.parentNode){\r\n            topParent = topParent.parentNode\r\n          }\r\n          if (topParent != document) throw new Exception('Element not in the dom')\r\n        } else {\r\n          // the element is NOT in the dom, throw error\r\n          if(!document.documentElement.contains(element.node)) throw new Exception('Element not in the dom')\r\n        }\r\n\r\n        // find native bbox\r\n        box = element.node.getBBox()\r\n      } catch(e) {\r\n        if(element instanceof SVG.Shape){\r\n          var clone = element.clone(SVG.parser.draw.instance).show()\r\n          box = clone.node.getBBox()\r\n          clone.remove()\r\n        }else{\r\n          box = {\r\n            x:      element.node.clientLeft\r\n          , y:      element.node.clientTop\r\n          , width:  element.node.clientWidth\r\n          , height: element.node.clientHeight\r\n          }\r\n        }\r\n      }\r\n\r\n      SVG.Box.call(this, box)\r\n    }\r\n\r\n  }\r\n\r\n  // Define ancestor\r\n, inherit: SVG.Box\r\n\r\n  // Define Parent\r\n, parent: SVG.Element\r\n\r\n  // Constructor\r\n, construct: {\r\n    // Get bounding box\r\n    bbox: function() {\r\n      return new SVG.BBox(this)\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.BBox.prototype.constructor = SVG.BBox\r\n\r\n\r\nSVG.extend(SVG.Element, {\r\n  tbox: function(){\r\n    console.warn('Use of TBox is deprecated and mapped to RBox. Use .rbox() instead.')\r\n    return this.rbox(this.doc())\r\n  }\r\n})\r\n\r\nSVG.RBox = SVG.invent({\r\n  // Initialize\r\n  create: function(element) {\r\n    SVG.Box.apply(this, [].slice.call(arguments))\r\n\r\n    if (element instanceof SVG.Element) {\r\n      SVG.Box.call(this, element.node.getBoundingClientRect())\r\n    }\r\n  }\r\n\r\n, inherit: SVG.Box\r\n\r\n  // define Parent\r\n, parent: SVG.Element\r\n\r\n, extend: {\r\n    addOffset: function() {\r\n      // offset by window scroll position, because getBoundingClientRect changes when window is scrolled\r\n      this.x += window.pageXOffset\r\n      this.y += window.pageYOffset\r\n      return this\r\n    }\r\n  }\r\n\r\n  // Constructor\r\n, construct: {\r\n    // Get rect box\r\n    rbox: function(el) {\r\n      if (el) return new SVG.RBox(this).transform(el.screenCTM().inverse())\r\n      return new SVG.RBox(this).addOffset()\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.RBox.prototype.constructor = SVG.RBox\r\n\nSVG.Matrix = SVG.invent({\r\n  // Initialize\r\n  create: function(source) {\r\n    var i, base = arrayToMatrix([1, 0, 0, 1, 0, 0])\r\n\r\n    // ensure source as object\r\n    source = source instanceof SVG.Element ?\r\n      source.matrixify() :\r\n    typeof source === 'string' ?\r\n      arrayToMatrix(source.split(SVG.regex.delimiter).map(parseFloat)) :\r\n    arguments.length == 6 ?\r\n      arrayToMatrix([].slice.call(arguments)) :\r\n    Array.isArray(source) ?\r\n      arrayToMatrix(source) :\r\n    typeof source === 'object' ?\r\n      source : base\r\n\r\n    // merge source\r\n    for (i = abcdef.length - 1; i >= 0; --i)\r\n      this[abcdef[i]] = source[abcdef[i]] != null ?\r\n        source[abcdef[i]] : base[abcdef[i]]\r\n  }\r\n\r\n  // Add methods\r\n, extend: {\r\n    // Extract individual transformations\r\n    extract: function() {\r\n      // find delta transform points\r\n      var px    = deltaTransformPoint(this, 0, 1)\r\n        , py    = deltaTransformPoint(this, 1, 0)\r\n        , skewX = 180 / Math.PI * Math.atan2(px.y, px.x) - 90\r\n\r\n      return {\r\n        // translation\r\n        x:        this.e\r\n      , y:        this.f\r\n      , transformedX:(this.e * Math.cos(skewX * Math.PI / 180) + this.f * Math.sin(skewX * Math.PI / 180)) / Math.sqrt(this.a * this.a + this.b * this.b)\r\n      , transformedY:(this.f * Math.cos(skewX * Math.PI / 180) + this.e * Math.sin(-skewX * Math.PI / 180)) / Math.sqrt(this.c * this.c + this.d * this.d)\r\n        // skew\r\n      , skewX:    -skewX\r\n      , skewY:    180 / Math.PI * Math.atan2(py.y, py.x)\r\n        // scale\r\n      , scaleX:   Math.sqrt(this.a * this.a + this.b * this.b)\r\n      , scaleY:   Math.sqrt(this.c * this.c + this.d * this.d)\r\n        // rotation\r\n      , rotation: skewX\r\n      , a: this.a\r\n      , b: this.b\r\n      , c: this.c\r\n      , d: this.d\r\n      , e: this.e\r\n      , f: this.f\r\n      , matrix: new SVG.Matrix(this)\r\n      }\r\n    }\r\n    // Clone matrix\r\n  , clone: function() {\r\n      return new SVG.Matrix(this)\r\n    }\r\n    // Morph one matrix into another\r\n  , morph: function(matrix) {\r\n      // store new destination\r\n      this.destination = new SVG.Matrix(matrix)\r\n\r\n      return this\r\n    }\r\n    // Get morphed matrix at a given position\r\n  , at: function(pos) {\r\n      // make sure a destination is defined\r\n      if (!this.destination) return this\r\n\r\n      // calculate morphed matrix at a given position\r\n      var matrix = new SVG.Matrix({\r\n        a: this.a + (this.destination.a - this.a) * pos\r\n      , b: this.b + (this.destination.b - this.b) * pos\r\n      , c: this.c + (this.destination.c - this.c) * pos\r\n      , d: this.d + (this.destination.d - this.d) * pos\r\n      , e: this.e + (this.destination.e - this.e) * pos\r\n      , f: this.f + (this.destination.f - this.f) * pos\r\n      })\r\n\r\n      return matrix\r\n    }\r\n    // Multiplies by given matrix\r\n  , multiply: function(matrix) {\r\n      return new SVG.Matrix(this.native().multiply(parseMatrix(matrix).native()))\r\n    }\r\n    // Inverses matrix\r\n  , inverse: function() {\r\n      return new SVG.Matrix(this.native().inverse())\r\n    }\r\n    // Translate matrix\r\n  , translate: function(x, y) {\r\n      return new SVG.Matrix(this.native().translate(x || 0, y || 0))\r\n    }\r\n    // Scale matrix\r\n  , scale: function(x, y, cx, cy) {\r\n      // support uniformal scale\r\n      if (arguments.length == 1) {\r\n        y = x\r\n      } else if (arguments.length == 3) {\r\n        cy = cx\r\n        cx = y\r\n        y = x\r\n      }\r\n\r\n      return this.around(cx, cy, new SVG.Matrix(x, 0, 0, y, 0, 0))\r\n    }\r\n    // Rotate matrix\r\n  , rotate: function(r, cx, cy) {\r\n      // convert degrees to radians\r\n      r = SVG.utils.radians(r)\r\n\r\n      return this.around(cx, cy, new SVG.Matrix(Math.cos(r), Math.sin(r), -Math.sin(r), Math.cos(r), 0, 0))\r\n    }\r\n    // Flip matrix on x or y, at a given offset\r\n  , flip: function(a, o) {\r\n      return a == 'x' ?\r\n          this.scale(-1, 1, o, 0) :\r\n        a == 'y' ?\r\n          this.scale(1, -1, 0, o) :\r\n          this.scale(-1, -1, a, o != null ? o : a)\r\n    }\r\n    // Skew\r\n  , skew: function(x, y, cx, cy) {\r\n      // support uniformal skew\r\n      if (arguments.length == 1) {\r\n        y = x\r\n      } else if (arguments.length == 3) {\r\n        cy = cx\r\n        cx = y\r\n        y = x\r\n      }\r\n\r\n      // convert degrees to radians\r\n      x = SVG.utils.radians(x)\r\n      y = SVG.utils.radians(y)\r\n\r\n      return this.around(cx, cy, new SVG.Matrix(1, Math.tan(y), Math.tan(x), 1, 0, 0))\r\n    }\r\n    // SkewX\r\n  , skewX: function(x, cx, cy) {\r\n      return this.skew(x, 0, cx, cy)\r\n    }\r\n    // SkewY\r\n  , skewY: function(y, cx, cy) {\r\n      return this.skew(0, y, cx, cy)\r\n    }\r\n    // Transform around a center point\r\n  , around: function(cx, cy, matrix) {\r\n      return this\r\n        .multiply(new SVG.Matrix(1, 0, 0, 1, cx || 0, cy || 0))\r\n        .multiply(matrix)\r\n        .multiply(new SVG.Matrix(1, 0, 0, 1, -cx || 0, -cy || 0))\r\n    }\r\n    // Convert to native SVGMatrix\r\n  , native: function() {\r\n      // create new matrix\r\n      var matrix = SVG.parser.native.createSVGMatrix()\r\n\r\n      // update with current values\r\n      for (var i = abcdef.length - 1; i >= 0; i--)\r\n        matrix[abcdef[i]] = this[abcdef[i]]\r\n\r\n      return matrix\r\n    }\r\n    // Convert matrix to string\r\n  , toString: function() {\r\n      // Construct the matrix directly, avoid values that are too small\r\n      return 'matrix(' + float32String(this.a) + ',' + float32String(this.b)\r\n        + ',' + float32String(this.c) + ',' + float32String(this.d)\r\n        + ',' + float32String(this.e) + ',' + float32String(this.f)\r\n        + ')'\r\n    }\r\n  }\r\n\r\n  // Define parent\r\n, parent: SVG.Element\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Get current matrix\r\n    ctm: function() {\r\n      return new SVG.Matrix(this.node.getCTM())\r\n    },\r\n    // Get current screen matrix\r\n    screenCTM: function() {\r\n      /* https://bugzilla.mozilla.org/show_bug.cgi?id=1344537\r\n         This is needed because FF does not return the transformation matrix\r\n         for the inner coordinate system when getScreenCTM() is called on nested svgs.\r\n         However all other Browsers do that */\r\n      if(this instanceof SVG.Nested) {\r\n        var rect = this.rect(1,1)\r\n        var m = rect.node.getScreenCTM()\r\n        rect.remove()\r\n        return new SVG.Matrix(m)\r\n      }\r\n      return new SVG.Matrix(this.node.getScreenCTM())\r\n    }\r\n\r\n  }\r\n\r\n})\r\n\nSVG.Point = SVG.invent({\r\n  // Initialize\r\n  create: function(x,y) {\r\n    var i, source, base = {x:0, y:0}\r\n\r\n    // ensure source as object\r\n    source = Array.isArray(x) ?\r\n      {x:x[0], y:x[1]} :\r\n    typeof x === 'object' ?\r\n      {x:x.x, y:x.y} :\r\n    x != null ?\r\n      {x:x, y:(y != null ? y : x)} : base // If y has no value, then x is used has its value\r\n\r\n    // merge source\r\n    this.x = source.x\r\n    this.y = source.y\r\n  }\r\n\r\n  // Add methods\r\n, extend: {\r\n    // Clone point\r\n    clone: function() {\r\n      return new SVG.Point(this)\r\n    }\r\n    // Morph one point into another\r\n  , morph: function(x, y) {\r\n      // store new destination\r\n      this.destination = new SVG.Point(x, y)\r\n\r\n      return this\r\n    }\r\n    // Get morphed point at a given position\r\n  , at: function(pos) {\r\n      // make sure a destination is defined\r\n      if (!this.destination) return this\r\n\r\n      // calculate morphed matrix at a given position\r\n      var point = new SVG.Point({\r\n        x: this.x + (this.destination.x - this.x) * pos\r\n      , y: this.y + (this.destination.y - this.y) * pos\r\n      })\r\n\r\n      return point\r\n    }\r\n    // Convert to native SVGPoint\r\n  , native: function() {\r\n      // create new point\r\n      var point = SVG.parser.native.createSVGPoint()\r\n\r\n      // update with current values\r\n      point.x = this.x\r\n      point.y = this.y\r\n\r\n      return point\r\n    }\r\n    // transform point with matrix\r\n  , transform: function(matrix) {\r\n      return new SVG.Point(this.native().matrixTransform(matrix.native()))\r\n    }\r\n\r\n  }\r\n\r\n})\r\n\r\nSVG.extend(SVG.Element, {\r\n\r\n  // Get point\r\n  point: function(x, y) {\r\n    return new SVG.Point(x,y).transform(this.screenCTM().inverse());\r\n  }\r\n\r\n})\r\n\nSVG.extend(SVG.Element, {\r\n  // Set svg element attribute\r\n  attr: function(a, v, n) {\r\n    // act as full getter\r\n    if (a == null) {\r\n      // get an object of attributes\r\n      a = {}\r\n      v = this.node.attributes\r\n      for (n = v.length - 1; n >= 0; n--)\r\n        a[v[n].nodeName] = SVG.regex.isNumber.test(v[n].nodeValue) ? parseFloat(v[n].nodeValue) : v[n].nodeValue\r\n\r\n      return a\r\n\r\n    } else if (typeof a == 'object') {\r\n      // apply every attribute individually if an object is passed\r\n      for (v in a) this.attr(v, a[v])\r\n\r\n    } else if (v === null) {\r\n        // remove value\r\n        this.node.removeAttribute(a)\r\n\r\n    } else if (v == null) {\r\n      // act as a getter if the first and only argument is not an object\r\n      v = this.node.getAttribute(a)\r\n      return v == null ?\r\n        SVG.defaults.attrs[a] :\r\n      SVG.regex.isNumber.test(v) ?\r\n        parseFloat(v) : v\r\n\r\n    } else {\r\n      // BUG FIX: some browsers will render a stroke if a color is given even though stroke width is 0\r\n      if (a == 'stroke-width')\r\n        this.attr('stroke', parseFloat(v) > 0 ? this._stroke : null)\r\n      else if (a == 'stroke')\r\n        this._stroke = v\r\n\r\n      // convert image fill and stroke to patterns\r\n      if (a == 'fill' || a == 'stroke') {\r\n        if (SVG.regex.isImage.test(v))\r\n          v = this.doc().defs().image(v, 0, 0)\r\n\r\n        if (v instanceof SVG.Image)\r\n          v = this.doc().defs().pattern(0, 0, function() {\r\n            this.add(v)\r\n          })\r\n      }\r\n\r\n      // ensure correct numeric values (also accepts NaN and Infinity)\r\n      if (typeof v === 'number')\r\n        v = new SVG.Number(v)\r\n\r\n      // ensure full hex color\r\n      else if (SVG.Color.isColor(v))\r\n        v = new SVG.Color(v)\r\n\r\n      // parse array values\r\n      else if (Array.isArray(v))\r\n        v = new SVG.Array(v)\r\n\r\n      // if the passed attribute is leading...\r\n      if (a == 'leading') {\r\n        // ... call the leading method instead\r\n        if (this.leading)\r\n          this.leading(v)\r\n      } else {\r\n        // set given attribute on node\r\n        typeof n === 'string' ?\r\n          this.node.setAttributeNS(n, a, v.toString()) :\r\n          this.node.setAttribute(a, v.toString())\r\n      }\r\n\r\n      // rebuild if required\r\n      if (this.rebuild && (a == 'font-size' || a == 'x'))\r\n        this.rebuild(a, v)\r\n    }\r\n\r\n    return this\r\n  }\r\n})\nSVG.extend(SVG.Element, {\r\n  // Add transformations\r\n  transform: function(o, relative) {\r\n    // get target in case of the fx module, otherwise reference this\r\n    var target = this\r\n      , matrix, bbox\r\n\r\n    // act as a getter\r\n    if (typeof o !== 'object') {\r\n      // get current matrix\r\n      matrix = new SVG.Matrix(target).extract()\r\n\r\n      return typeof o === 'string' ? matrix[o] : matrix\r\n    }\r\n\r\n    // get current matrix\r\n    matrix = new SVG.Matrix(target)\r\n\r\n    // ensure relative flag\r\n    relative = !!relative || !!o.relative\r\n\r\n    // act on matrix\r\n    if (o.a != null) {\r\n      matrix = relative ?\r\n        // relative\r\n        matrix.multiply(new SVG.Matrix(o)) :\r\n        // absolute\r\n        new SVG.Matrix(o)\r\n\r\n    // act on rotation\r\n    } else if (o.rotation != null) {\r\n      // ensure centre point\r\n      ensureCentre(o, target)\r\n\r\n      // apply transformation\r\n      matrix = relative ?\r\n        // relative\r\n        matrix.rotate(o.rotation, o.cx, o.cy) :\r\n        // absolute\r\n        matrix.rotate(o.rotation - matrix.extract().rotation, o.cx, o.cy)\r\n\r\n    // act on scale\r\n    } else if (o.scale != null || o.scaleX != null || o.scaleY != null) {\r\n      // ensure centre point\r\n      ensureCentre(o, target)\r\n\r\n      // ensure scale values on both axes\r\n      o.scaleX = o.scale != null ? o.scale : o.scaleX != null ? o.scaleX : 1\r\n      o.scaleY = o.scale != null ? o.scale : o.scaleY != null ? o.scaleY : 1\r\n\r\n      if (!relative) {\r\n        // absolute; multiply inversed values\r\n        var e = matrix.extract()\r\n        o.scaleX = o.scaleX * 1 / e.scaleX\r\n        o.scaleY = o.scaleY * 1 / e.scaleY\r\n      }\r\n\r\n      matrix = matrix.scale(o.scaleX, o.scaleY, o.cx, o.cy)\r\n\r\n    // act on skew\r\n    } else if (o.skew != null || o.skewX != null || o.skewY != null) {\r\n      // ensure centre point\r\n      ensureCentre(o, target)\r\n\r\n      // ensure skew values on both axes\r\n      o.skewX = o.skew != null ? o.skew : o.skewX != null ? o.skewX : 0\r\n      o.skewY = o.skew != null ? o.skew : o.skewY != null ? o.skewY : 0\r\n\r\n      if (!relative) {\r\n        // absolute; reset skew values\r\n        var e = matrix.extract()\r\n        matrix = matrix.multiply(new SVG.Matrix().skew(e.skewX, e.skewY, o.cx, o.cy).inverse())\r\n      }\r\n\r\n      matrix = matrix.skew(o.skewX, o.skewY, o.cx, o.cy)\r\n\r\n    // act on flip\r\n    } else if (o.flip) {\r\n      if(o.flip == 'x' || o.flip == 'y') {\r\n        o.offset = o.offset == null ? target.bbox()['c' + o.flip] : o.offset\r\n      } else {\r\n        if(o.offset == null) {\r\n          bbox = target.bbox()\r\n          o.flip = bbox.cx\r\n          o.offset = bbox.cy\r\n        } else {\r\n          o.flip = o.offset\r\n        }\r\n      }\r\n\r\n      matrix = new SVG.Matrix().flip(o.flip, o.offset)\r\n\r\n    // act on translate\r\n    } else if (o.x != null || o.y != null) {\r\n      if (relative) {\r\n        // relative\r\n        matrix = matrix.translate(o.x, o.y)\r\n      } else {\r\n        // absolute\r\n        if (o.x != null) matrix.e = o.x\r\n        if (o.y != null) matrix.f = o.y\r\n      }\r\n    }\r\n\r\n    return this.attr('transform', matrix)\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.FX, {\r\n  transform: function(o, relative) {\r\n    // get target in case of the fx module, otherwise reference this\r\n    var target = this.target()\r\n      , matrix, bbox\r\n\r\n    // act as a getter\r\n    if (typeof o !== 'object') {\r\n      // get current matrix\r\n      matrix = new SVG.Matrix(target).extract()\r\n\r\n      return typeof o === 'string' ? matrix[o] : matrix\r\n    }\r\n\r\n    // ensure relative flag\r\n    relative = !!relative || !!o.relative\r\n\r\n    // act on matrix\r\n    if (o.a != null) {\r\n      matrix = new SVG.Matrix(o)\r\n\r\n    // act on rotation\r\n    } else if (o.rotation != null) {\r\n      // ensure centre point\r\n      ensureCentre(o, target)\r\n\r\n      // apply transformation\r\n      matrix = new SVG.Rotate(o.rotation, o.cx, o.cy)\r\n\r\n    // act on scale\r\n    } else if (o.scale != null || o.scaleX != null || o.scaleY != null) {\r\n      // ensure centre point\r\n      ensureCentre(o, target)\r\n\r\n      // ensure scale values on both axes\r\n      o.scaleX = o.scale != null ? o.scale : o.scaleX != null ? o.scaleX : 1\r\n      o.scaleY = o.scale != null ? o.scale : o.scaleY != null ? o.scaleY : 1\r\n\r\n      matrix = new SVG.Scale(o.scaleX, o.scaleY, o.cx, o.cy)\r\n\r\n    // act on skew\r\n    } else if (o.skewX != null || o.skewY != null) {\r\n      // ensure centre point\r\n      ensureCentre(o, target)\r\n\r\n      // ensure skew values on both axes\r\n      o.skewX = o.skewX != null ? o.skewX : 0\r\n      o.skewY = o.skewY != null ? o.skewY : 0\r\n\r\n      matrix = new SVG.Skew(o.skewX, o.skewY, o.cx, o.cy)\r\n\r\n    // act on flip\r\n    } else if (o.flip) {\r\n      if(o.flip == 'x' || o.flip == 'y') {\r\n        o.offset = o.offset == null ? target.bbox()['c' + o.flip] : o.offset\r\n      } else {\r\n        if(o.offset == null) {\r\n          bbox = target.bbox()\r\n          o.flip = bbox.cx\r\n          o.offset = bbox.cy\r\n        } else {\r\n          o.flip = o.offset\r\n        }\r\n      }\r\n\r\n      matrix = new SVG.Matrix().flip(o.flip, o.offset)\r\n\r\n    // act on translate\r\n    } else if (o.x != null || o.y != null) {\r\n      matrix = new SVG.Translate(o.x, o.y)\r\n    }\r\n\r\n    if(!matrix) return this\r\n\r\n    matrix.relative = relative\r\n\r\n    this.last().transforms.push(matrix)\r\n\r\n    return this._callStart()\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Element, {\r\n  // Reset all transformations\r\n  untransform: function() {\r\n    return this.attr('transform', null)\r\n  },\r\n  // merge the whole transformation chain into one matrix and returns it\r\n  matrixify: function() {\r\n\r\n    var matrix = (this.attr('transform') || '')\r\n      // split transformations\r\n      .split(SVG.regex.transforms).slice(0,-1).map(function(str){\r\n        // generate key => value pairs\r\n        var kv = str.trim().split('(')\r\n        return [kv[0], kv[1].split(SVG.regex.delimiter).map(function(str){ return parseFloat(str) })]\r\n      })\r\n      // merge every transformation into one matrix\r\n      .reduce(function(matrix, transform){\r\n\r\n        if(transform[0] == 'matrix') return matrix.multiply(arrayToMatrix(transform[1]))\r\n        return matrix[transform[0]].apply(matrix, transform[1])\r\n\r\n      }, new SVG.Matrix())\r\n\r\n    return matrix\r\n  },\r\n  // add an element to another parent without changing the visual representation on the screen\r\n  toParent: function(parent) {\r\n    if(this == parent) return this\r\n    var ctm = this.screenCTM()\r\n    var pCtm = parent.screenCTM().inverse()\r\n\r\n    this.addTo(parent).untransform().transform(pCtm.multiply(ctm))\r\n\r\n    return this\r\n  },\r\n  // same as above with parent equals root-svg\r\n  toDoc: function() {\r\n    return this.toParent(this.doc())\r\n  }\r\n\r\n})\r\n\r\nSVG.Transformation = SVG.invent({\r\n\r\n  create: function(source, inversed){\r\n\r\n    if(arguments.length > 1 && typeof inversed != 'boolean'){\r\n      return this.constructor.call(this, [].slice.call(arguments))\r\n    }\r\n\r\n    if(Array.isArray(source)){\r\n      for(var i = 0, len = this.arguments.length; i < len; ++i){\r\n        this[this.arguments[i]] = source[i]\r\n      }\r\n    } else if(typeof source == 'object'){\r\n      for(var i = 0, len = this.arguments.length; i < len; ++i){\r\n        this[this.arguments[i]] = source[this.arguments[i]]\r\n      }\r\n    }\r\n\r\n    this.inversed = false\r\n\r\n    if(inversed === true){\r\n      this.inversed = true\r\n    }\r\n\r\n  }\r\n\r\n, extend: {\r\n\r\n    arguments: []\r\n  , method: ''\r\n\r\n  , at: function(pos){\r\n\r\n      var params = []\r\n\r\n      for(var i = 0, len = this.arguments.length; i < len; ++i){\r\n        params.push(this[this.arguments[i]])\r\n      }\r\n\r\n      var m = this._undo || new SVG.Matrix()\r\n\r\n      m = new SVG.Matrix().morph(SVG.Matrix.prototype[this.method].apply(m, params)).at(pos)\r\n\r\n      return this.inversed ? m.inverse() : m\r\n\r\n    }\r\n\r\n  , undo: function(o){\r\n      for(var i = 0, len = this.arguments.length; i < len; ++i){\r\n        o[this.arguments[i]] = typeof this[this.arguments[i]] == 'undefined' ? 0 : o[this.arguments[i]]\r\n      }\r\n\r\n      // The method SVG.Matrix.extract which was used before calling this\r\n      // method to obtain a value for the parameter o doesn't return a cx and\r\n      // a cy so we use the ones that were provided to this object at its creation\r\n      o.cx = this.cx\r\n      o.cy = this.cy\r\n\r\n      this._undo = new SVG[capitalize(this.method)](o, true).at(1)\r\n\r\n      return this\r\n    }\r\n\r\n  }\r\n\r\n})\r\n\r\nSVG.Translate = SVG.invent({\r\n\r\n  parent: SVG.Matrix\r\n, inherit: SVG.Transformation\r\n\r\n, create: function(source, inversed){\r\n    this.constructor.apply(this, [].slice.call(arguments))\r\n  }\r\n\r\n, extend: {\r\n    arguments: ['transformedX', 'transformedY']\r\n  , method: 'translate'\r\n  }\r\n\r\n})\r\n\r\nSVG.Rotate = SVG.invent({\r\n\r\n  parent: SVG.Matrix\r\n, inherit: SVG.Transformation\r\n\r\n, create: function(source, inversed){\r\n    this.constructor.apply(this, [].slice.call(arguments))\r\n  }\r\n\r\n, extend: {\r\n    arguments: ['rotation', 'cx', 'cy']\r\n  , method: 'rotate'\r\n  , at: function(pos){\r\n      var m = new SVG.Matrix().rotate(new SVG.Number().morph(this.rotation - (this._undo ? this._undo.rotation : 0)).at(pos), this.cx, this.cy)\r\n      return this.inversed ? m.inverse() : m\r\n    }\r\n  , undo: function(o){\r\n      this._undo = o\r\n      return this\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.Scale = SVG.invent({\r\n\r\n  parent: SVG.Matrix\r\n, inherit: SVG.Transformation\r\n\r\n, create: function(source, inversed){\r\n    this.constructor.apply(this, [].slice.call(arguments))\r\n  }\r\n\r\n, extend: {\r\n    arguments: ['scaleX', 'scaleY', 'cx', 'cy']\r\n  , method: 'scale'\r\n  }\r\n\r\n})\r\n\r\nSVG.Skew = SVG.invent({\r\n\r\n  parent: SVG.Matrix\r\n, inherit: SVG.Transformation\r\n\r\n, create: function(source, inversed){\r\n    this.constructor.apply(this, [].slice.call(arguments))\r\n  }\r\n\r\n, extend: {\r\n    arguments: ['skewX', 'skewY', 'cx', 'cy']\r\n  , method: 'skew'\r\n  }\r\n\r\n})\r\n\nSVG.extend(SVG.Element, {\r\n  // Dynamic style generator\r\n  style: function(s, v) {\r\n    if (arguments.length == 0) {\r\n      // get full style\r\n      return this.node.style.cssText || ''\r\n\r\n    } else if (arguments.length < 2) {\r\n      // apply every style individually if an object is passed\r\n      if (typeof s == 'object') {\r\n        for (v in s) this.style(v, s[v])\r\n\r\n      } else if (SVG.regex.isCss.test(s)) {\r\n        // parse css string\r\n        s = s.split(/\\s*;\\s*/)\r\n          // filter out suffix ; and stuff like ;;\r\n          .filter(function(e) { return !!e })\r\n          .map(function(e){ return e.split(/\\s*:\\s*/) })\r\n\r\n        // apply every definition individually\r\n        while (v = s.pop()) {\r\n          this.style(v[0], v[1])\r\n        }\r\n      } else {\r\n        // act as a getter if the first and only argument is not an object\r\n        return this.node.style[camelCase(s)]\r\n      }\r\n\r\n    } else {\r\n      this.node.style[camelCase(s)] = v === null || SVG.regex.isBlank.test(v) ? '' : v\r\n    }\r\n\r\n    return this\r\n  }\r\n})\nSVG.Parent = SVG.invent({\r\n  // Initialize node\r\n  create: function(element) {\r\n    this.constructor.call(this, element)\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Element\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Returns all child elements\r\n    children: function() {\r\n      return SVG.utils.map(SVG.utils.filterSVGElements(this.node.childNodes), function(node) {\r\n        return SVG.adopt(node)\r\n      })\r\n    }\r\n    // Add given element at a position\r\n  , add: function(element, i) {\r\n      if (i == null)\r\n        this.node.appendChild(element.node)\r\n      else if (element.node != this.node.childNodes[i])\r\n        this.node.insertBefore(element.node, this.node.childNodes[i])\r\n\r\n      return this\r\n    }\r\n    // Basically does the same as `add()` but returns the added element instead\r\n  , put: function(element, i) {\r\n      this.add(element, i)\r\n      return element\r\n    }\r\n    // Checks if the given element is a child\r\n  , has: function(element) {\r\n      return this.index(element) >= 0\r\n    }\r\n    // Gets index of given element\r\n  , index: function(element) {\r\n      return [].slice.call(this.node.childNodes).indexOf(element.node)\r\n    }\r\n    // Get a element at the given index\r\n  , get: function(i) {\r\n      return SVG.adopt(this.node.childNodes[i])\r\n    }\r\n    // Get first child\r\n  , first: function() {\r\n      return this.get(0)\r\n    }\r\n    // Get the last child\r\n  , last: function() {\r\n      return this.get(this.node.childNodes.length - 1)\r\n    }\r\n    // Iterates over all children and invokes a given block\r\n  , each: function(block, deep) {\r\n      var i, il\r\n        , children = this.children()\r\n\r\n      for (i = 0, il = children.length; i < il; i++) {\r\n        if (children[i] instanceof SVG.Element)\r\n          block.apply(children[i], [i, children])\r\n\r\n        if (deep && (children[i] instanceof SVG.Container))\r\n          children[i].each(block, deep)\r\n      }\r\n\r\n      return this\r\n    }\r\n    // Remove a given child\r\n  , removeElement: function(element) {\r\n      this.node.removeChild(element.node)\r\n\r\n      return this\r\n    }\r\n    // Remove all elements in this container\r\n  , clear: function() {\r\n      // remove children\r\n      while(this.node.hasChildNodes())\r\n        this.node.removeChild(this.node.lastChild)\r\n\r\n      // remove defs reference\r\n      delete this._defs\r\n\r\n      return this\r\n    }\r\n  , // Get defs\r\n    defs: function() {\r\n      return this.doc().defs()\r\n    }\r\n  }\r\n\r\n})\r\n\nSVG.extend(SVG.Parent, {\r\n\r\n  ungroup: function(parent, depth) {\r\n    if(depth === 0 || this instanceof SVG.Defs || this.node == SVG.parser.draw) return this\r\n\r\n    parent = parent || (this instanceof SVG.Doc ? this : this.parent(SVG.Parent))\r\n    depth = depth || Infinity\r\n\r\n    this.each(function(){\r\n      if(this instanceof SVG.Defs) return this\r\n      if(this instanceof SVG.Parent) return this.ungroup(parent, depth-1)\r\n      return this.toParent(parent)\r\n    })\r\n\r\n    this.node.firstChild || this.remove()\r\n\r\n    return this\r\n  },\r\n\r\n  flatten: function(parent, depth) {\r\n    return this.ungroup(parent, depth)\r\n  }\r\n\r\n})\nSVG.Container = SVG.invent({\r\n  // Initialize node\r\n  create: function(element) {\r\n    this.constructor.call(this, element)\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Parent\r\n\r\n})\n\r\nSVG.ViewBox = SVG.invent({\r\n\r\n  create: function(source) {\r\n    var i, base = [0, 0, 0, 0]\r\n\r\n    var x, y, width, height, box, view, we, he\r\n      , wm   = 1 // width multiplier\r\n      , hm   = 1 // height multiplier\r\n      , reg  = /[+-]?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?/gi\r\n\r\n    if(source instanceof SVG.Element){\r\n\r\n      we = source\r\n      he = source\r\n      view = (source.attr('viewBox') || '').match(reg)\r\n      box = source.bbox\r\n\r\n      // get dimensions of current node\r\n      width  = new SVG.Number(source.width())\r\n      height = new SVG.Number(source.height())\r\n\r\n      // find nearest non-percentual dimensions\r\n      while (width.unit == '%') {\r\n        wm *= width.value\r\n        width = new SVG.Number(we instanceof SVG.Doc ? we.parent().offsetWidth : we.parent().width())\r\n        we = we.parent()\r\n      }\r\n      while (height.unit == '%') {\r\n        hm *= height.value\r\n        height = new SVG.Number(he instanceof SVG.Doc ? he.parent().offsetHeight : he.parent().height())\r\n        he = he.parent()\r\n      }\r\n\r\n      // ensure defaults\r\n      this.x      = 0\r\n      this.y      = 0\r\n      this.width  = width  * wm\r\n      this.height = height * hm\r\n      this.zoom   = 1\r\n\r\n      if (view) {\r\n        // get width and height from viewbox\r\n        x      = parseFloat(view[0])\r\n        y      = parseFloat(view[1])\r\n        width  = parseFloat(view[2])\r\n        height = parseFloat(view[3])\r\n\r\n        // calculate zoom accoring to viewbox\r\n        this.zoom = ((this.width / this.height) > (width / height)) ?\r\n          this.height / height :\r\n          this.width  / width\r\n\r\n        // calculate real pixel dimensions on parent SVG.Doc element\r\n        this.x      = x\r\n        this.y      = y\r\n        this.width  = width\r\n        this.height = height\r\n\r\n      }\r\n\r\n    }else{\r\n\r\n      // ensure source as object\r\n      source = typeof source === 'string' ?\r\n        source.match(reg).map(function(el){ return parseFloat(el) }) :\r\n      Array.isArray(source) ?\r\n        source :\r\n      typeof source == 'object' ?\r\n        [source.x, source.y, source.width, source.height] :\r\n      arguments.length == 4 ?\r\n        [].slice.call(arguments) :\r\n        base\r\n\r\n      this.x = source[0]\r\n      this.y = source[1]\r\n      this.width = source[2]\r\n      this.height = source[3]\r\n    }\r\n\r\n\r\n  }\r\n\r\n, extend: {\r\n\r\n    toString: function() {\r\n      return this.x + ' ' + this.y + ' ' + this.width + ' ' + this.height\r\n    }\r\n  , morph: function(x, y, width, height){\r\n      this.destination = new SVG.ViewBox(x, y, width, height)\r\n      return this\r\n    }\r\n\r\n  , at: function(pos) {\r\n\r\n      if(!this.destination) return this\r\n\r\n      return new SVG.ViewBox([\r\n          this.x + (this.destination.x - this.x) * pos\r\n        , this.y + (this.destination.y - this.y) * pos\r\n        , this.width + (this.destination.width - this.width) * pos\r\n        , this.height + (this.destination.height - this.height) * pos\r\n      ])\r\n\r\n    }\r\n\r\n  }\r\n\r\n  // Define parent\r\n, parent: SVG.Container\r\n\r\n  // Add parent method\r\n, construct: {\r\n\r\n    // get/set viewbox\r\n    viewbox: function(x, y, width, height) {\r\n      if (arguments.length == 0)\r\n        // act as a getter if there are no arguments\r\n        return new SVG.ViewBox(this)\r\n\r\n      // otherwise act as a setter\r\n      return this.attr('viewBox', new SVG.ViewBox(x, y, width, height))\r\n    }\r\n\r\n  }\r\n\r\n})\n// Add events to elements\r\n\r\n;[ 'click',\r\n  'dblclick',\r\n  'mousedown',\r\n  'mouseup',\r\n  'mouseover',\r\n  'mouseout',\r\n  'mousemove',\r\n  'mouseenter',\r\n  'mouseleave',\r\n  'touchstart',\r\n  'touchmove',\r\n  'touchleave',\r\n  'touchend',\r\n  'touchcancel' ].forEach(function (event) {\r\n    // add event to SVG.Element\r\n    SVG.Element.prototype[event] = function (f) {\r\n      // bind event to element rather than element node\r\n      if (f == null) {\r\n        SVG.off(this, event)\r\n      } else {\r\n        SVG.on(this, event, f)\r\n      }\r\n      return this\r\n    }\r\n  })\r\n\r\nSVG.listenerId = 0\r\n\r\n// Add event binder in the SVG namespace\r\nSVG.on = function (node, events, listener, binding, options) {\r\n  var l = listener.bind(binding || node)\r\n  var n = node instanceof SVG.Element ? node.node : node\r\n\r\n  // ensure instance object for nodes which are not adopted\r\n  n.instance = n.instance || {_events: {}}\r\n\r\n  var bag = n.instance._events\r\n\r\n  // add id to listener\r\n  if (!listener._svgjsListenerId) { listener._svgjsListenerId = ++SVG.listenerId }\r\n\r\n  events.split(SVG.regex.delimiter).forEach(function (event) {\r\n    var ev = event.split('.')[0]\r\n    var ns = event.split('.')[1] || '*'\r\n\r\n    // ensure valid object\r\n    bag[ev] = bag[ev] || {}\r\n    bag[ev][ns] = bag[ev][ns] || {}\r\n\r\n    // reference listener\r\n    bag[ev][ns][listener._svgjsListenerId] = l\r\n\r\n    // add listener\r\n    n.addEventListener(ev, l, options || false)\r\n  })\r\n}\r\n\r\n// Add event unbinder in the SVG namespace\r\nSVG.off = function (node, events, listener, options) {\r\n  var n = node instanceof SVG.Element ? node.node : node\r\n  if (!n.instance) return\r\n\r\n  // listener can be a function or a number\r\n  if (typeof listener === 'function') {\r\n    listener = listener._svgjsListenerId\r\n    if (!listener) return\r\n  }\r\n\r\n  var bag = n.instance._events\r\n\r\n  ;(events || '').split(SVG.regex.delimiter).forEach(function (event) {\r\n    var ev = event && event.split('.')[0]\r\n    var ns = event && event.split('.')[1]\r\n    var namespace, l\r\n\r\n    if (listener) {\r\n      // remove listener reference\r\n      if (bag[ev] && bag[ev][ns || '*']) {\r\n        // removeListener\r\n        n.removeEventListener(ev, bag[ev][ns || '*'][listener], options || false)\r\n\r\n        delete bag[ev][ns || '*'][listener]\r\n      }\r\n    } else if (ev && ns) {\r\n      // remove all listeners for a namespaced event\r\n      if (bag[ev] && bag[ev][ns]) {\r\n        for (l in bag[ev][ns]) { SVG.off(n, [ev, ns].join('.'), l) }\r\n\r\n        delete bag[ev][ns]\r\n      }\r\n    } else if (ns) {\r\n      // remove all listeners for a specific namespace\r\n      for (event in bag) {\r\n        for (namespace in bag[event]) {\r\n          if (ns === namespace) { SVG.off(n, [event, ns].join('.')) }\r\n        }\r\n      }\r\n    } else if (ev) {\r\n      // remove all listeners for the event\r\n      if (bag[ev]) {\r\n        for (namespace in bag[ev]) { SVG.off(n, [ev, namespace].join('.')) }\r\n\r\n        delete bag[ev]\r\n      }\r\n    } else {\r\n      // remove all listeners on a given node\r\n      for (event in bag) { SVG.off(n, event) }\r\n\r\n      n.instance._events = {}\r\n    }\r\n  })\r\n}\r\n\r\nSVG.extend(SVG.Element, {\r\n  // Bind given event to listener\r\n  on: function (event, listener, binding, options) {\r\n    SVG.on(this, event, listener, binding, options)\r\n    return this\r\n  },\r\n  // Unbind event from listener\r\n  off: function (event, listener) {\r\n    SVG.off(this.node, event, listener)\r\n    return this\r\n  },\r\n  fire: function (event, data) {\r\n    // Dispatch event\r\n    if (event instanceof window.Event) {\r\n      this.node.dispatchEvent(event)\r\n    } else {\r\n      this.node.dispatchEvent(event = new SVG.CustomEvent(event, {detail: data, cancelable: true}))\r\n    }\r\n    this._event = event\r\n    return this\r\n  },\r\n  event: function() {\r\n    return this._event\r\n  }\r\n})\r\n\n\r\nSVG.Defs = SVG.invent({\r\n  // Initialize node\r\n  create: 'defs'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n})\nSVG.G = SVG.invent({\r\n  // Initialize node\r\n  create: 'g'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Move over x-axis\r\n    x: function(x) {\r\n      return x == null ? this.transform('x') : this.transform({ x: x - this.x() }, true)\r\n    }\r\n    // Move over y-axis\r\n  , y: function(y) {\r\n      return y == null ? this.transform('y') : this.transform({ y: y - this.y() }, true)\r\n    }\r\n    // Move by center over x-axis\r\n  , cx: function(x) {\r\n      return x == null ? this.gbox().cx : this.x(x - this.gbox().width / 2)\r\n    }\r\n    // Move by center over y-axis\r\n  , cy: function(y) {\r\n      return y == null ? this.gbox().cy : this.y(y - this.gbox().height / 2)\r\n    }\r\n  , gbox: function() {\r\n\r\n      var bbox  = this.bbox()\r\n        , trans = this.transform()\r\n\r\n      bbox.x  += trans.x\r\n      bbox.x2 += trans.x\r\n      bbox.cx += trans.x\r\n\r\n      bbox.y  += trans.y\r\n      bbox.y2 += trans.y\r\n      bbox.cy += trans.y\r\n\r\n      return bbox\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a group element\r\n    group: function() {\r\n      return this.put(new SVG.G)\r\n    }\r\n  }\r\n})\r\n\nSVG.Doc = SVG.invent({\r\n  // Initialize node\r\n  create: function(element) {\r\n    if (element) {\r\n      // ensure the presence of a dom element\r\n      element = typeof element == 'string' ?\r\n        document.getElementById(element) :\r\n        element\r\n\r\n      // If the target is an svg element, use that element as the main wrapper.\r\n      // This allows svg.js to work with svg documents as well.\r\n      if (element.nodeName == 'svg') {\r\n        this.constructor.call(this, element)\r\n      } else {\r\n        this.constructor.call(this, SVG.create('svg'))\r\n        element.appendChild(this.node)\r\n        this.size('100%', '100%')\r\n      }\r\n\r\n      // set svg element attributes and ensure defs node\r\n      this.namespace().defs()\r\n    }\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Add namespaces\r\n    namespace: function() {\r\n      return this\r\n        .attr({ xmlns: SVG.ns, version: '1.1' })\r\n        .attr('xmlns:xlink', SVG.xlink, SVG.xmlns)\r\n        .attr('xmlns:svgjs', SVG.svgjs, SVG.xmlns)\r\n    }\r\n    // Creates and returns defs element\r\n  , defs: function() {\r\n      if (!this._defs) {\r\n        var defs\r\n\r\n        // Find or create a defs element in this instance\r\n        if (defs = this.node.getElementsByTagName('defs')[0])\r\n          this._defs = SVG.adopt(defs)\r\n        else\r\n          this._defs = new SVG.Defs\r\n\r\n        // Make sure the defs node is at the end of the stack\r\n        this.node.appendChild(this._defs.node)\r\n      }\r\n\r\n      return this._defs\r\n    }\r\n    // custom parent method\r\n  , parent: function() {\r\n      if(!this.node.parentNode || this.node.parentNode.nodeName == '#document' || this.node.parentNode.nodeName == '#document-fragment') return null\r\n      return this.node.parentNode\r\n    }\r\n    // Fix for possible sub-pixel offset. See:\r\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=608812\r\n  , spof: function() {\r\n      var pos = this.node.getScreenCTM()\r\n\r\n      if (pos)\r\n        this\r\n          .style('left', (-pos.e % 1) + 'px')\r\n          .style('top',  (-pos.f % 1) + 'px')\r\n\r\n      return this\r\n    }\r\n\r\n      // Removes the doc from the DOM\r\n  , remove: function() {\r\n      if(this.parent()) {\r\n        this.parent().removeChild(this.node)\r\n      }\r\n\r\n      return this\r\n    }\r\n  , clear: function() {\r\n      // remove children\r\n      while(this.node.hasChildNodes())\r\n        this.node.removeChild(this.node.lastChild)\r\n\r\n      // remove defs reference\r\n      delete this._defs\r\n\r\n      // add back parser\r\n      if(!SVG.parser.draw.parentNode)\r\n        this.node.appendChild(SVG.parser.draw)\r\n\r\n      return this\r\n    }\r\n  , clone: function (parent) {\r\n      // write dom data to the dom so the clone can pickup the data\r\n      this.writeDataToDom()\r\n\r\n      // get reference to node\r\n      var node = this.node\r\n\r\n      // clone element and assign new id\r\n      var clone = assignNewId(node.cloneNode(true))\r\n\r\n      // insert the clone in the given parent or after myself\r\n      if(parent) {\r\n        (parent.node || parent).appendChild(clone.node)\r\n      } else {\r\n        node.parentNode.insertBefore(clone.node, node.nextSibling)\r\n      }\r\n\r\n      return clone\r\n    }\r\n  }\r\n\r\n})\r\n\n// ### This module adds backward / forward functionality to elements.\r\n\r\n//\r\nSVG.extend(SVG.Element, {\r\n  // Get all siblings, including myself\r\n  siblings: function() {\r\n    return this.parent().children()\r\n  }\r\n  // Get the curent position siblings\r\n, position: function() {\r\n    return this.parent().index(this)\r\n  }\r\n  // Get the next element (will return null if there is none)\r\n, next: function() {\r\n    return this.siblings()[this.position() + 1]\r\n  }\r\n  // Get the next element (will return null if there is none)\r\n, previous: function() {\r\n    return this.siblings()[this.position() - 1]\r\n  }\r\n  // Send given element one step forward\r\n, forward: function() {\r\n    var i = this.position() + 1\r\n      , p = this.parent()\r\n\r\n    // move node one step forward\r\n    p.removeElement(this).add(this, i)\r\n\r\n    // make sure defs node is always at the top\r\n    if (p instanceof SVG.Doc)\r\n      p.node.appendChild(p.defs().node)\r\n\r\n    return this\r\n  }\r\n  // Send given element one step backward\r\n, backward: function() {\r\n    var i = this.position()\r\n\r\n    if (i > 0)\r\n      this.parent().removeElement(this).add(this, i - 1)\r\n\r\n    return this\r\n  }\r\n  // Send given element all the way to the front\r\n, front: function() {\r\n    var p = this.parent()\r\n\r\n    // Move node forward\r\n    p.node.appendChild(this.node)\r\n\r\n    // Make sure defs node is always at the top\r\n    if (p instanceof SVG.Doc)\r\n      p.node.appendChild(p.defs().node)\r\n\r\n    return this\r\n  }\r\n  // Send given element all the way to the back\r\n, back: function() {\r\n    if (this.position() > 0)\r\n      this.parent().removeElement(this).add(this, 0)\r\n\r\n    return this\r\n  }\r\n  // Inserts a given element before the targeted element\r\n, before: function(element) {\r\n    element.remove()\r\n\r\n    var i = this.position()\r\n\r\n    this.parent().add(element, i)\r\n\r\n    return this\r\n  }\r\n  // Insters a given element after the targeted element\r\n, after: function(element) {\r\n    element.remove()\r\n\r\n    var i = this.position()\r\n\r\n    this.parent().add(element, i + 1)\r\n\r\n    return this\r\n  }\r\n\r\n})\nSVG.Mask = SVG.invent({\r\n  // Initialize node\r\n  create: function() {\r\n    this.constructor.call(this, SVG.create('mask'))\r\n\r\n    // keep references to masked elements\r\n    this.targets = []\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Unmask all masked elements and remove itself\r\n    remove: function() {\r\n      // unmask all targets\r\n      for (var i = this.targets.length - 1; i >= 0; i--)\r\n        if (this.targets[i])\r\n          this.targets[i].unmask()\r\n      this.targets = []\r\n\r\n      // remove mask from parent\r\n      SVG.Element.prototype.remove.call(this)\r\n\r\n      return this\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create masking element\r\n    mask: function() {\r\n      return this.defs().put(new SVG.Mask)\r\n    }\r\n  }\r\n})\r\n\r\n\r\nSVG.extend(SVG.Element, {\r\n  // Distribute mask to svg element\r\n  maskWith: function(element) {\r\n    // use given mask or create a new one\r\n    this.masker = element instanceof SVG.Mask ? element : this.parent().mask().add(element)\r\n\r\n    // store reverence on self in mask\r\n    this.masker.targets.push(this)\r\n\r\n    // apply mask\r\n    return this.attr('mask', 'url(\"#' + this.masker.attr('id') + '\")')\r\n  }\r\n  // Unmask element\r\n, unmask: function() {\r\n    delete this.masker\r\n    return this.attr('mask', null)\r\n  }\r\n\r\n})\r\n\nSVG.ClipPath = SVG.invent({\r\n  // Initialize node\r\n  create: function() {\r\n    this.constructor.call(this, SVG.create('clipPath'))\r\n\r\n    // keep references to clipped elements\r\n    this.targets = []\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Unclip all clipped elements and remove itself\r\n    remove: function() {\r\n      // unclip all targets\r\n      for (var i = this.targets.length - 1; i >= 0; i--)\r\n        if (this.targets[i])\r\n          this.targets[i].unclip()\r\n      this.targets = []\r\n\r\n      // remove clipPath from parent\r\n      this.parent().removeElement(this)\r\n\r\n      return this\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create clipping element\r\n    clip: function() {\r\n      return this.defs().put(new SVG.ClipPath)\r\n    }\r\n  }\r\n})\r\n\r\n//\r\nSVG.extend(SVG.Element, {\r\n  // Distribute clipPath to svg element\r\n  clipWith: function(element) {\r\n    // use given clip or create a new one\r\n    this.clipper = element instanceof SVG.ClipPath ? element : this.parent().clip().add(element)\r\n\r\n    // store reverence on self in mask\r\n    this.clipper.targets.push(this)\r\n\r\n    // apply mask\r\n    return this.attr('clip-path', 'url(\"#' + this.clipper.attr('id') + '\")')\r\n  }\r\n  // Unclip element\r\n, unclip: function() {\r\n    delete this.clipper\r\n    return this.attr('clip-path', null)\r\n  }\r\n\r\n})\nSVG.Gradient = SVG.invent({\r\n  // Initialize node\r\n  create: function(type) {\r\n    this.constructor.call(this, SVG.create(type + 'Gradient'))\r\n\r\n    // store type\r\n    this.type = type\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Add a color stop\r\n    at: function(offset, color, opacity) {\r\n      return this.put(new SVG.Stop).update(offset, color, opacity)\r\n    }\r\n    // Update gradient\r\n  , update: function(block) {\r\n      // remove all stops\r\n      this.clear()\r\n\r\n      // invoke passed block\r\n      if (typeof block == 'function')\r\n        block.call(this, this)\r\n\r\n      return this\r\n    }\r\n    // Return the fill id\r\n  , fill: function() {\r\n      return 'url(#' + this.id() + ')'\r\n    }\r\n    // Alias string convertion to fill\r\n  , toString: function() {\r\n      return this.fill()\r\n    }\r\n    // custom attr to handle transform\r\n  , attr: function(a, b, c) {\r\n      if(a == 'transform') a = 'gradientTransform'\r\n      return SVG.Container.prototype.attr.call(this, a, b, c)\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create gradient element in defs\r\n    gradient: function(type, block) {\r\n      return this.defs().gradient(type, block)\r\n    }\r\n  }\r\n})\r\n\r\n// Add animatable methods to both gradient and fx module\r\nSVG.extend(SVG.Gradient, SVG.FX, {\r\n  // From position\r\n  from: function(x, y) {\r\n    return (this._target || this).type == 'radial' ?\r\n      this.attr({ fx: new SVG.Number(x), fy: new SVG.Number(y) }) :\r\n      this.attr({ x1: new SVG.Number(x), y1: new SVG.Number(y) })\r\n  }\r\n  // To position\r\n, to: function(x, y) {\r\n    return (this._target || this).type == 'radial' ?\r\n      this.attr({ cx: new SVG.Number(x), cy: new SVG.Number(y) }) :\r\n      this.attr({ x2: new SVG.Number(x), y2: new SVG.Number(y) })\r\n  }\r\n})\r\n\r\n// Base gradient generation\r\nSVG.extend(SVG.Defs, {\r\n  // define gradient\r\n  gradient: function(type, block) {\r\n    return this.put(new SVG.Gradient(type)).update(block)\r\n  }\r\n\r\n})\r\n\r\nSVG.Stop = SVG.invent({\r\n  // Initialize node\r\n  create: 'stop'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Element\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // add color stops\r\n    update: function(o) {\r\n      if (typeof o == 'number' || o instanceof SVG.Number) {\r\n        o = {\r\n          offset:  arguments[0]\r\n        , color:   arguments[1]\r\n        , opacity: arguments[2]\r\n        }\r\n      }\r\n\r\n      // set attributes\r\n      if (o.opacity != null) this.attr('stop-opacity', o.opacity)\r\n      if (o.color   != null) this.attr('stop-color', o.color)\r\n      if (o.offset  != null) this.attr('offset', new SVG.Number(o.offset))\r\n\r\n      return this\r\n    }\r\n  }\r\n\r\n})\r\n\nSVG.Pattern = SVG.invent({\r\n  // Initialize node\r\n  create: 'pattern'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Return the fill id\r\n    fill: function() {\r\n      return 'url(#' + this.id() + ')'\r\n    }\r\n    // Update pattern by rebuilding\r\n  , update: function(block) {\r\n      // remove content\r\n      this.clear()\r\n\r\n      // invoke passed block\r\n      if (typeof block == 'function')\r\n        block.call(this, this)\r\n\r\n      return this\r\n    }\r\n    // Alias string convertion to fill\r\n  , toString: function() {\r\n      return this.fill()\r\n    }\r\n    // custom attr to handle transform\r\n  , attr: function(a, b, c) {\r\n      if(a == 'transform') a = 'patternTransform'\r\n      return SVG.Container.prototype.attr.call(this, a, b, c)\r\n    }\r\n\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create pattern element in defs\r\n    pattern: function(width, height, block) {\r\n      return this.defs().pattern(width, height, block)\r\n    }\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Defs, {\r\n  // Define gradient\r\n  pattern: function(width, height, block) {\r\n    return this.put(new SVG.Pattern).update(block).attr({\r\n      x:            0\r\n    , y:            0\r\n    , width:        width\r\n    , height:       height\r\n    , patternUnits: 'userSpaceOnUse'\r\n    })\r\n  }\r\n\r\n})\nSVG.Shape = SVG.invent({\r\n  // Initialize node\r\n  create: function(element) {\r\n    this.constructor.call(this, element)\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Element\r\n\r\n})\n\r\nSVG.Bare = SVG.invent({\r\n  // Initialize\r\n  create: function(element, inherit) {\r\n    // construct element\r\n    this.constructor.call(this, SVG.create(element))\r\n\r\n    // inherit custom methods\r\n    if (inherit)\r\n      for (var method in inherit.prototype)\r\n        if (typeof inherit.prototype[method] === 'function')\r\n          this[method] = inherit.prototype[method]\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Element\r\n\r\n  // Add methods\r\n, extend: {\r\n    // Insert some plain text\r\n    words: function(text) {\r\n      // remove contents\r\n      while (this.node.hasChildNodes())\r\n        this.node.removeChild(this.node.lastChild)\r\n\r\n      // create text node\r\n      this.node.appendChild(document.createTextNode(text))\r\n\r\n      return this\r\n    }\r\n  }\r\n})\r\n\r\n\r\nSVG.extend(SVG.Parent, {\r\n  // Create an element that is not described by SVG.js\r\n  element: function(element, inherit) {\r\n    return this.put(new SVG.Bare(element, inherit))\r\n  }\r\n})\r\n\nSVG.Symbol = SVG.invent({\r\n  // Initialize node\r\n  create: 'symbol'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n, construct: {\r\n    // create symbol\r\n    symbol: function() {\r\n      return this.put(new SVG.Symbol)\r\n    }\r\n  }\r\n})\r\n\nSVG.Use = SVG.invent({\r\n  // Initialize node\r\n  create: 'use'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Use element as a reference\r\n    element: function(element, file) {\r\n      // Set lined element\r\n      return this.attr('href', (file || '') + '#' + element, SVG.xlink)\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a use element\r\n    use: function(element, file) {\r\n      return this.put(new SVG.Use).element(element, file)\r\n    }\r\n  }\r\n})\nSVG.Rect = SVG.invent({\r\n  // Initialize node\r\n  create: 'rect'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a rect element\r\n    rect: function(width, height) {\r\n      return this.put(new SVG.Rect()).size(width, height)\r\n    }\r\n  }\r\n})\nSVG.Circle = SVG.invent({\r\n  // Initialize node\r\n  create: 'circle'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create circle element, based on ellipse\r\n    circle: function(size) {\r\n      return this.put(new SVG.Circle).rx(new SVG.Number(size).divide(2)).move(0, 0)\r\n    }\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Circle, SVG.FX, {\r\n  // Radius x value\r\n  rx: function(rx) {\r\n    return this.attr('r', rx)\r\n  }\r\n  // Alias radius x value\r\n, ry: function(ry) {\r\n    return this.rx(ry)\r\n  }\r\n})\r\n\r\nSVG.Ellipse = SVG.invent({\r\n  // Initialize node\r\n  create: 'ellipse'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create an ellipse\r\n    ellipse: function(width, height) {\r\n      return this.put(new SVG.Ellipse).size(width, height).move(0, 0)\r\n    }\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Ellipse, SVG.Rect, SVG.FX, {\r\n  // Radius x value\r\n  rx: function(rx) {\r\n    return this.attr('rx', rx)\r\n  }\r\n  // Radius y value\r\n, ry: function(ry) {\r\n    return this.attr('ry', ry)\r\n  }\r\n})\r\n\r\n// Add common method\r\nSVG.extend(SVG.Circle, SVG.Ellipse, {\r\n    // Move over x-axis\r\n    x: function(x) {\r\n      return x == null ? this.cx() - this.rx() : this.cx(x + this.rx())\r\n    }\r\n    // Move over y-axis\r\n  , y: function(y) {\r\n      return y == null ? this.cy() - this.ry() : this.cy(y + this.ry())\r\n    }\r\n    // Move by center over x-axis\r\n  , cx: function(x) {\r\n      return x == null ? this.attr('cx') : this.attr('cx', x)\r\n    }\r\n    // Move by center over y-axis\r\n  , cy: function(y) {\r\n      return y == null ? this.attr('cy') : this.attr('cy', y)\r\n    }\r\n    // Set width of element\r\n  , width: function(width) {\r\n      return width == null ? this.rx() * 2 : this.rx(new SVG.Number(width).divide(2))\r\n    }\r\n    // Set height of element\r\n  , height: function(height) {\r\n      return height == null ? this.ry() * 2 : this.ry(new SVG.Number(height).divide(2))\r\n    }\r\n    // Custom size function\r\n  , size: function(width, height) {\r\n      var p = proportionalSize(this, width, height)\r\n\r\n      return this\r\n        .rx(new SVG.Number(p.width).divide(2))\r\n        .ry(new SVG.Number(p.height).divide(2))\r\n    }\r\n})\nSVG.Line = SVG.invent({\r\n  // Initialize node\r\n  create: 'line'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Get array\r\n    array: function() {\r\n      return new SVG.PointArray([\r\n        [ this.attr('x1'), this.attr('y1') ]\r\n      , [ this.attr('x2'), this.attr('y2') ]\r\n      ])\r\n    }\r\n    // Overwrite native plot() method\r\n  , plot: function(x1, y1, x2, y2) {\r\n      if (x1 == null)\r\n        return this.array()\r\n      else if (typeof y1 !== 'undefined')\r\n        x1 = { x1: x1, y1: y1, x2: x2, y2: y2 }\r\n      else\r\n        x1 = new SVG.PointArray(x1).toLine()\r\n\r\n      return this.attr(x1)\r\n    }\r\n    // Move by left top corner\r\n  , move: function(x, y) {\r\n      return this.attr(this.array().move(x, y).toLine())\r\n    }\r\n    // Set element size to given width and height\r\n  , size: function(width, height) {\r\n      var p = proportionalSize(this, width, height)\r\n\r\n      return this.attr(this.array().size(p.width, p.height).toLine())\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a line element\r\n    line: function(x1, y1, x2, y2) {\r\n      // make sure plot is called as a setter\r\n      // x1 is not necessarily a number, it can also be an array, a string and a SVG.PointArray\r\n      return SVG.Line.prototype.plot.apply(\r\n        this.put(new SVG.Line)\r\n      , x1 != null ? [x1, y1, x2, y2] : [0, 0, 0, 0]\r\n      )\r\n    }\r\n  }\r\n})\r\n\nSVG.Polyline = SVG.invent({\r\n  // Initialize node\r\n  create: 'polyline'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a wrapped polyline element\r\n    polyline: function(p) {\r\n      // make sure plot is called as a setter\r\n      return this.put(new SVG.Polyline).plot(p || new SVG.PointArray)\r\n    }\r\n  }\r\n})\r\n\r\nSVG.Polygon = SVG.invent({\r\n  // Initialize node\r\n  create: 'polygon'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a wrapped polygon element\r\n    polygon: function(p) {\r\n      // make sure plot is called as a setter\r\n      return this.put(new SVG.Polygon).plot(p || new SVG.PointArray)\r\n    }\r\n  }\r\n})\r\n\r\n// Add polygon-specific functions\r\nSVG.extend(SVG.Polyline, SVG.Polygon, {\r\n  // Get array\r\n  array: function() {\r\n    return this._array || (this._array = new SVG.PointArray(this.attr('points')))\r\n  }\r\n  // Plot new path\r\n, plot: function(p) {\r\n    return (p == null) ?\r\n      this.array() :\r\n      this.clear().attr('points', typeof p == 'string' ? p : (this._array = new SVG.PointArray(p)))\r\n  }\r\n  // Clear array cache\r\n, clear: function() {\r\n    delete this._array\r\n    return this\r\n  }\r\n  // Move by left top corner\r\n, move: function(x, y) {\r\n    return this.attr('points', this.array().move(x, y))\r\n  }\r\n  // Set element size to given width and height\r\n, size: function(width, height) {\r\n    var p = proportionalSize(this, width, height)\r\n\r\n    return this.attr('points', this.array().size(p.width, p.height))\r\n  }\r\n\r\n})\r\n\n// unify all point to point elements\r\nSVG.extend(SVG.Line, SVG.Polyline, SVG.Polygon, {\r\n  // Define morphable array\r\n  morphArray:  SVG.PointArray\r\n  // Move by left top corner over x-axis\r\n, x: function(x) {\r\n    return x == null ? this.bbox().x : this.move(x, this.bbox().y)\r\n  }\r\n  // Move by left top corner over y-axis\r\n, y: function(y) {\r\n    return y == null ? this.bbox().y : this.move(this.bbox().x, y)\r\n  }\r\n  // Set width of element\r\n, width: function(width) {\r\n    var b = this.bbox()\r\n\r\n    return width == null ? b.width : this.size(width, b.height)\r\n  }\r\n  // Set height of element\r\n, height: function(height) {\r\n    var b = this.bbox()\r\n\r\n    return height == null ? b.height : this.size(b.width, height)\r\n  }\r\n})\nSVG.Path = SVG.invent({\r\n  // Initialize node\r\n  create: 'path'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Define morphable array\r\n    morphArray:  SVG.PathArray\r\n    // Get array\r\n  , array: function() {\r\n      return this._array || (this._array = new SVG.PathArray(this.attr('d')))\r\n    }\r\n    // Plot new path\r\n  , plot: function(d) {\r\n      return (d == null) ?\r\n        this.array() :\r\n        this.clear().attr('d', typeof d == 'string' ? d : (this._array = new SVG.PathArray(d)))\r\n    }\r\n    // Clear array cache\r\n  , clear: function() {\r\n      delete this._array\r\n      return this\r\n    }\r\n    // Move by left top corner\r\n  , move: function(x, y) {\r\n      return this.attr('d', this.array().move(x, y))\r\n    }\r\n    // Move by left top corner over x-axis\r\n  , x: function(x) {\r\n      return x == null ? this.bbox().x : this.move(x, this.bbox().y)\r\n    }\r\n    // Move by left top corner over y-axis\r\n  , y: function(y) {\r\n      return y == null ? this.bbox().y : this.move(this.bbox().x, y)\r\n    }\r\n    // Set element size to given width and height\r\n  , size: function(width, height) {\r\n      var p = proportionalSize(this, width, height)\r\n\r\n      return this.attr('d', this.array().size(p.width, p.height))\r\n    }\r\n    // Set width of element\r\n  , width: function(width) {\r\n      return width == null ? this.bbox().width : this.size(width, this.bbox().height)\r\n    }\r\n    // Set height of element\r\n  , height: function(height) {\r\n      return height == null ? this.bbox().height : this.size(this.bbox().width, height)\r\n    }\r\n\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a wrapped path element\r\n    path: function(d) {\r\n      // make sure plot is called as a setter\r\n      return this.put(new SVG.Path).plot(d || new SVG.PathArray)\r\n    }\r\n  }\r\n})\r\n\nSVG.Image = SVG.invent({\r\n  // Initialize node\r\n  create: 'image'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // (re)load image\r\n    load: function(url) {\r\n      if (!url) return this\r\n\r\n      var self = this\r\n        , img  = new window.Image()\r\n\r\n      // preload image\r\n      SVG.on(img, 'load', function() {\r\n        SVG.off(img)\r\n\r\n        var p = self.parent(SVG.Pattern)\r\n\r\n        if(p === null) return\r\n\r\n        // ensure image size\r\n        if (self.width() == 0 && self.height() == 0)\r\n          self.size(img.width, img.height)\r\n\r\n        // ensure pattern size if not set\r\n        if (p && p.width() == 0 && p.height() == 0)\r\n          p.size(self.width(), self.height())\r\n\r\n        // callback\r\n        if (typeof self._loaded === 'function')\r\n          self._loaded.call(self, {\r\n            width:  img.width\r\n          , height: img.height\r\n          , ratio:  img.width / img.height\r\n          , url:    url\r\n          })\r\n      })\r\n\r\n      SVG.on(img, 'error', function(e){\r\n        SVG.off(img)\r\n\r\n        if (typeof self._error === 'function'){\r\n            self._error.call(self, e)\r\n        }\r\n      })\r\n\r\n      return this.attr('href', (img.src = this.src = url), SVG.xlink)\r\n    }\r\n    // Add loaded callback\r\n  , loaded: function(loaded) {\r\n      this._loaded = loaded\r\n      return this\r\n    }\r\n\r\n  , error: function(error) {\r\n      this._error = error\r\n      return this\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // create image element, load image and set its size\r\n    image: function(source, width, height) {\r\n      return this.put(new SVG.Image).load(source).size(width || 0, height || width || 0)\r\n    }\r\n  }\r\n\r\n})\nSVG.Text = SVG.invent({\r\n  // Initialize node\r\n  create: function() {\r\n    this.constructor.call(this, SVG.create('text'))\r\n\r\n    this.dom.leading = new SVG.Number(1.3)    // store leading value for rebuilding\r\n    this._rebuild = true                      // enable automatic updating of dy values\r\n    this._build   = false                     // disable build mode for adding multiple lines\r\n\r\n    // set default font\r\n    this.attr('font-family', SVG.defaults.attrs['font-family'])\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Move over x-axis\r\n    x: function(x) {\r\n      // act as getter\r\n      if (x == null)\r\n        return this.attr('x')\r\n\r\n      return this.attr('x', x)\r\n    }\r\n    // Move over y-axis\r\n  , y: function(y) {\r\n      var oy = this.attr('y')\r\n        , o  = typeof oy === 'number' ? oy - this.bbox().y : 0\r\n\r\n      // act as getter\r\n      if (y == null)\r\n        return typeof oy === 'number' ? oy - o : oy\r\n\r\n      return this.attr('y', typeof y.valueOf() === 'number' ? y + o : y)\r\n    }\r\n    // Move center over x-axis\r\n  , cx: function(x) {\r\n      return x == null ? this.bbox().cx : this.x(x - this.bbox().width / 2)\r\n    }\r\n    // Move center over y-axis\r\n  , cy: function(y) {\r\n      return y == null ? this.bbox().cy : this.y(y - this.bbox().height / 2)\r\n    }\r\n    // Set the text content\r\n  , text: function(text) {\r\n      // act as getter\r\n      if (typeof text === 'undefined'){\r\n        var text = ''\r\n        var children = this.node.childNodes\r\n        for(var i = 0, len = children.length; i < len; ++i){\r\n\r\n          // add newline if its not the first child and newLined is set to true\r\n          if(i != 0 && children[i].nodeType != 3 && SVG.adopt(children[i]).dom.newLined == true){\r\n            text += '\\n'\r\n          }\r\n\r\n          // add content of this node\r\n          text += children[i].textContent\r\n        }\r\n\r\n        return text\r\n      }\r\n\r\n      // remove existing content\r\n      this.clear().build(true)\r\n\r\n      if (typeof text === 'function') {\r\n        // call block\r\n        text.call(this, this)\r\n\r\n      } else {\r\n        // store text and make sure text is not blank\r\n        text = text.split('\\n')\r\n\r\n        // build new lines\r\n        for (var i = 0, il = text.length; i < il; i++)\r\n          this.tspan(text[i]).newLine()\r\n      }\r\n\r\n      // disable build mode and rebuild lines\r\n      return this.build(false).rebuild()\r\n    }\r\n    // Set font size\r\n  , size: function(size) {\r\n      return this.attr('font-size', size).rebuild()\r\n    }\r\n    // Set / get leading\r\n  , leading: function(value) {\r\n      // act as getter\r\n      if (value == null)\r\n        return this.dom.leading\r\n\r\n      // act as setter\r\n      this.dom.leading = new SVG.Number(value)\r\n\r\n      return this.rebuild()\r\n    }\r\n    // Get all the first level lines\r\n  , lines: function() {\r\n      var node = (this.textPath && this.textPath() || this).node\r\n\r\n      // filter tspans and map them to SVG.js instances\r\n      var lines = SVG.utils.map(SVG.utils.filterSVGElements(node.childNodes), function(el){\r\n        return SVG.adopt(el)\r\n      })\r\n\r\n      // return an instance of SVG.set\r\n      return new SVG.Set(lines)\r\n    }\r\n    // Rebuild appearance type\r\n  , rebuild: function(rebuild) {\r\n      // store new rebuild flag if given\r\n      if (typeof rebuild == 'boolean')\r\n        this._rebuild = rebuild\r\n\r\n      // define position of all lines\r\n      if (this._rebuild) {\r\n        var self = this\r\n          , blankLineOffset = 0\r\n          , dy = this.dom.leading * new SVG.Number(this.attr('font-size'))\r\n\r\n        this.lines().each(function() {\r\n          if (this.dom.newLined) {\r\n            if (!self.textPath())\r\n              this.attr('x', self.attr('x'))\r\n            if(this.text() == '\\n') {\r\n              blankLineOffset += dy\r\n            }else{\r\n              this.attr('dy', dy + blankLineOffset)\r\n              blankLineOffset = 0\r\n            }\r\n          }\r\n        })\r\n\r\n        this.fire('rebuild')\r\n      }\r\n\r\n      return this\r\n    }\r\n    // Enable / disable build mode\r\n  , build: function(build) {\r\n      this._build = !!build\r\n      return this\r\n    }\r\n    // overwrite method from parent to set data properly\r\n  , setData: function(o){\r\n      this.dom = o\r\n      this.dom.leading = new SVG.Number(o.leading || 1.3)\r\n      return this\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create text element\r\n    text: function(text) {\r\n      return this.put(new SVG.Text).text(text)\r\n    }\r\n    // Create plain text element\r\n  , plain: function(text) {\r\n      return this.put(new SVG.Text).plain(text)\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.Tspan = SVG.invent({\r\n  // Initialize node\r\n  create: 'tspan'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Set text content\r\n    text: function(text) {\r\n      if(text == null) return this.node.textContent + (this.dom.newLined ? '\\n' : '')\r\n\r\n      typeof text === 'function' ? text.call(this, this) : this.plain(text)\r\n\r\n      return this\r\n    }\r\n    // Shortcut dx\r\n  , dx: function(dx) {\r\n      return this.attr('dx', dx)\r\n    }\r\n    // Shortcut dy\r\n  , dy: function(dy) {\r\n      return this.attr('dy', dy)\r\n    }\r\n    // Create new line\r\n  , newLine: function() {\r\n      // fetch text parent\r\n      var t = this.parent(SVG.Text)\r\n\r\n      // mark new line\r\n      this.dom.newLined = true\r\n\r\n      // apply new hy¡n\r\n      return this.dy(t.dom.leading * t.attr('font-size')).attr('x', t.x())\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.extend(SVG.Text, SVG.Tspan, {\r\n  // Create plain text node\r\n  plain: function(text) {\r\n    // clear if build mode is disabled\r\n    if (this._build === false)\r\n      this.clear()\r\n\r\n    // create text node\r\n    this.node.appendChild(document.createTextNode(text))\r\n\r\n    return this\r\n  }\r\n  // Create a tspan\r\n, tspan: function(text) {\r\n    var node  = (this.textPath && this.textPath() || this).node\r\n      , tspan = new SVG.Tspan\r\n\r\n    // clear if build mode is disabled\r\n    if (this._build === false)\r\n      this.clear()\r\n\r\n    // add new tspan\r\n    node.appendChild(tspan.node)\r\n\r\n    return tspan.text(text)\r\n  }\r\n  // Clear all lines\r\n, clear: function() {\r\n    var node = (this.textPath && this.textPath() || this).node\r\n\r\n    // remove existing child nodes\r\n    while (node.hasChildNodes())\r\n      node.removeChild(node.lastChild)\r\n\r\n    return this\r\n  }\r\n  // Get length of text element\r\n, length: function() {\r\n    return this.node.getComputedTextLength()\r\n  }\r\n})\r\n\nSVG.TextPath = SVG.invent({\r\n  // Initialize node\r\n  create: 'textPath'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Parent\r\n\r\n  // Define parent class\r\n, parent: SVG.Text\r\n\r\n  // Add parent method\r\n, construct: {\r\n    morphArray: SVG.PathArray\r\n    // Create path for text to run on\r\n  , path: function(d) {\r\n      // create textPath element\r\n      var path  = new SVG.TextPath\r\n        , track = this.doc().defs().path(d)\r\n\r\n      // move lines to textpath\r\n      while (this.node.hasChildNodes())\r\n        path.node.appendChild(this.node.firstChild)\r\n\r\n      // add textPath element as child node\r\n      this.node.appendChild(path.node)\r\n\r\n      // link textPath to path and add content\r\n      path.attr('href', '#' + track, SVG.xlink)\r\n\r\n      return this\r\n    }\r\n    // return the array of the path track element\r\n  , array: function() {\r\n      var track = this.track()\r\n\r\n      return track ? track.array() : null\r\n    }\r\n    // Plot path if any\r\n  , plot: function(d) {\r\n      var track = this.track()\r\n        , pathArray = null\r\n\r\n      if (track) {\r\n        pathArray = track.plot(d)\r\n      }\r\n\r\n      return (d == null) ? pathArray : this\r\n    }\r\n    // Get the path track element\r\n  , track: function() {\r\n      var path = this.textPath()\r\n\r\n      if (path)\r\n        return path.reference('href')\r\n    }\r\n    // Get the textPath child\r\n  , textPath: function() {\r\n      if (this.node.firstChild && this.node.firstChild.nodeName == 'textPath')\r\n        return SVG.adopt(this.node.firstChild)\r\n    }\r\n  }\r\n})\r\n\nSVG.Nested = SVG.invent({\r\n  // Initialize node\r\n  create: function() {\r\n    this.constructor.call(this, SVG.create('svg'))\r\n\r\n    this.style('overflow', 'visible')\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create nested svg document\r\n    nested: function() {\r\n      return this.put(new SVG.Nested)\r\n    }\r\n  }\r\n})\nSVG.A = SVG.invent({\r\n  // Initialize node\r\n  create: 'a'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Link url\r\n    to: function(url) {\r\n      return this.attr('href', url, SVG.xlink)\r\n    }\r\n    // Link show attribute\r\n  , show: function(target) {\r\n      return this.attr('show', target, SVG.xlink)\r\n    }\r\n    // Link target attribute\r\n  , target: function(target) {\r\n      return this.attr('target', target)\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a hyperlink element\r\n    link: function(url) {\r\n      return this.put(new SVG.A).to(url)\r\n    }\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Element, {\r\n  // Create a hyperlink element\r\n  linkTo: function(url) {\r\n    var link = new SVG.A\r\n\r\n    if (typeof url == 'function')\r\n      url.call(link, link)\r\n    else\r\n      link.to(url)\r\n\r\n    return this.parent().put(link).put(this)\r\n  }\r\n\r\n})\nSVG.Marker = SVG.invent({\r\n  // Initialize node\r\n  create: 'marker'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Set width of element\r\n    width: function(width) {\r\n      return this.attr('markerWidth', width)\r\n    }\r\n    // Set height of element\r\n  , height: function(height) {\r\n      return this.attr('markerHeight', height)\r\n    }\r\n    // Set marker refX and refY\r\n  , ref: function(x, y) {\r\n      return this.attr('refX', x).attr('refY', y)\r\n    }\r\n    // Update marker\r\n  , update: function(block) {\r\n      // remove all content\r\n      this.clear()\r\n\r\n      // invoke passed block\r\n      if (typeof block == 'function')\r\n        block.call(this, this)\r\n\r\n      return this\r\n    }\r\n    // Return the fill id\r\n  , toString: function() {\r\n      return 'url(#' + this.id() + ')'\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    marker: function(width, height, block) {\r\n      // Create marker element in defs\r\n      return this.defs().marker(width, height, block)\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.extend(SVG.Defs, {\r\n  // Create marker\r\n  marker: function(width, height, block) {\r\n    // Set default viewbox to match the width and height, set ref to cx and cy and set orient to auto\r\n    return this.put(new SVG.Marker)\r\n      .size(width, height)\r\n      .ref(width / 2, height / 2)\r\n      .viewbox(0, 0, width, height)\r\n      .attr('orient', 'auto')\r\n      .update(block)\r\n  }\r\n\r\n})\r\n\r\nSVG.extend(SVG.Line, SVG.Polyline, SVG.Polygon, SVG.Path, {\r\n  // Create and attach markers\r\n  marker: function(marker, width, height, block) {\r\n    var attr = ['marker']\r\n\r\n    // Build attribute name\r\n    if (marker != 'all') attr.push(marker)\r\n    attr = attr.join('-')\r\n\r\n    // Set marker attribute\r\n    marker = arguments[1] instanceof SVG.Marker ?\r\n      arguments[1] :\r\n      this.doc().marker(width, height, block)\r\n\r\n    return this.attr(attr, marker)\r\n  }\r\n\r\n})\n// Define list of available attributes for stroke and fill\r\nvar sugar = {\r\n  stroke: ['color', 'width', 'opacity', 'linecap', 'linejoin', 'miterlimit', 'dasharray', 'dashoffset']\r\n, fill:   ['color', 'opacity', 'rule']\r\n, prefix: function(t, a) {\r\n    return a == 'color' ? t : t + '-' + a\r\n  }\r\n}\r\n\r\n// Add sugar for fill and stroke\r\n;['fill', 'stroke'].forEach(function(m) {\r\n  var i, extension = {}\r\n\r\n  extension[m] = function(o) {\r\n    if (typeof o == 'undefined')\r\n      return this\r\n    if (typeof o == 'string' || SVG.Color.isRgb(o) || (o && typeof o.fill === 'function'))\r\n      this.attr(m, o)\r\n\r\n    else\r\n      // set all attributes from sugar.fill and sugar.stroke list\r\n      for (i = sugar[m].length - 1; i >= 0; i--)\r\n        if (o[sugar[m][i]] != null)\r\n          this.attr(sugar.prefix(m, sugar[m][i]), o[sugar[m][i]])\r\n\r\n    return this\r\n  }\r\n\r\n  SVG.extend(SVG.Element, SVG.FX, extension)\r\n\r\n})\r\n\r\nSVG.extend(SVG.Element, SVG.FX, {\r\n  // Map rotation to transform\r\n  rotate: function(d, cx, cy) {\r\n    return this.transform({ rotation: d, cx: cx, cy: cy })\r\n  }\r\n  // Map skew to transform\r\n, skew: function(x, y, cx, cy) {\r\n    return arguments.length == 1  || arguments.length == 3 ?\r\n      this.transform({ skew: x, cx: y, cy: cx }) :\r\n      this.transform({ skewX: x, skewY: y, cx: cx, cy: cy })\r\n  }\r\n  // Map scale to transform\r\n, scale: function(x, y, cx, cy) {\r\n    return arguments.length == 1  || arguments.length == 3 ?\r\n      this.transform({ scale: x, cx: y, cy: cx }) :\r\n      this.transform({ scaleX: x, scaleY: y, cx: cx, cy: cy })\r\n  }\r\n  // Map translate to transform\r\n, translate: function(x, y) {\r\n    return this.transform({ x: x, y: y })\r\n  }\r\n  // Map flip to transform\r\n, flip: function(a, o) {\r\n    o = typeof a == 'number' ? a : o\r\n    return this.transform({ flip: a || 'both', offset: o })\r\n  }\r\n  // Map matrix to transform\r\n, matrix: function(m) {\r\n    return this.attr('transform', new SVG.Matrix(arguments.length == 6 ? [].slice.call(arguments) : m))\r\n  }\r\n  // Opacity\r\n, opacity: function(value) {\r\n    return this.attr('opacity', value)\r\n  }\r\n  // Relative move over x axis\r\n, dx: function(x) {\r\n    return this.x(new SVG.Number(x).plus(this instanceof SVG.FX ? 0 : this.x()), true)\r\n  }\r\n  // Relative move over y axis\r\n, dy: function(y) {\r\n    return this.y(new SVG.Number(y).plus(this instanceof SVG.FX ? 0 : this.y()), true)\r\n  }\r\n  // Relative move over x and y axes\r\n, dmove: function(x, y) {\r\n    return this.dx(x).dy(y)\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Rect, SVG.Ellipse, SVG.Circle, SVG.Gradient, SVG.FX, {\r\n  // Add x and y radius\r\n  radius: function(x, y) {\r\n    var type = (this._target || this).type;\r\n    return type == 'radial' || type == 'circle' ?\r\n      this.attr('r', new SVG.Number(x)) :\r\n      this.rx(x).ry(y == null ? x : y)\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Path, {\r\n  // Get path length\r\n  length: function() {\r\n    return this.node.getTotalLength()\r\n  }\r\n  // Get point at length\r\n, pointAt: function(length) {\r\n    return this.node.getPointAtLength(length)\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Parent, SVG.Text, SVG.Tspan, SVG.FX, {\r\n  // Set font\r\n  font: function(a, v) {\r\n    if (typeof a == 'object') {\r\n      for (v in a) this.font(v, a[v])\r\n    }\r\n\r\n    return a == 'leading' ?\r\n        this.leading(v) :\r\n      a == 'anchor' ?\r\n        this.attr('text-anchor', v) :\r\n      a == 'size' || a == 'family' || a == 'weight' || a == 'stretch' || a == 'variant' || a == 'style' ?\r\n        this.attr('font-'+ a, v) :\r\n        this.attr(a, v)\r\n  }\r\n})\r\n\nSVG.Set = SVG.invent({\r\n  // Initialize\r\n  create: function(members) {\r\n    if (members instanceof SVG.Set) {\r\n      this.members = members.members.slice()\r\n    } else {\r\n      Array.isArray(members) ? this.members = members : this.clear()\r\n    }\r\n  }\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Add element to set\r\n    add: function() {\r\n      var i, il, elements = [].slice.call(arguments)\r\n\r\n      for (i = 0, il = elements.length; i < il; i++)\r\n        this.members.push(elements[i])\r\n\r\n      return this\r\n    }\r\n    // Remove element from set\r\n  , remove: function(element) {\r\n      var i = this.index(element)\r\n\r\n      // remove given child\r\n      if (i > -1)\r\n        this.members.splice(i, 1)\r\n\r\n      return this\r\n    }\r\n    // Iterate over all members\r\n  , each: function(block) {\r\n      for (var i = 0, il = this.members.length; i < il; i++)\r\n        block.apply(this.members[i], [i, this.members])\r\n\r\n      return this\r\n    }\r\n    // Restore to defaults\r\n  , clear: function() {\r\n      // initialize store\r\n      this.members = []\r\n\r\n      return this\r\n    }\r\n    // Get the length of a set\r\n  , length: function() {\r\n      return this.members.length\r\n    }\r\n    // Checks if a given element is present in set\r\n  , has: function(element) {\r\n      return this.index(element) >= 0\r\n    }\r\n    // retuns index of given element in set\r\n  , index: function(element) {\r\n      return this.members.indexOf(element)\r\n    }\r\n    // Get member at given index\r\n  , get: function(i) {\r\n      return this.members[i]\r\n    }\r\n    // Get first member\r\n  , first: function() {\r\n      return this.get(0)\r\n    }\r\n    // Get last member\r\n  , last: function() {\r\n      return this.get(this.members.length - 1)\r\n    }\r\n    // Default value\r\n  , valueOf: function() {\r\n      return this.members\r\n    }\r\n    // Get the bounding box of all members included or empty box if set has no items\r\n  , bbox: function(){\r\n      // return an empty box of there are no members\r\n      if (this.members.length == 0)\r\n        return new SVG.RBox()\r\n\r\n      // get the first rbox and update the target bbox\r\n      var rbox = this.members[0].rbox(this.members[0].doc())\r\n\r\n      this.each(function() {\r\n        // user rbox for correct position and visual representation\r\n        rbox = rbox.merge(this.rbox(this.doc()))\r\n      })\r\n\r\n      return rbox\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a new set\r\n    set: function(members) {\r\n      return new SVG.Set(members)\r\n    }\r\n  }\r\n})\r\n\r\nSVG.FX.Set = SVG.invent({\r\n  // Initialize node\r\n  create: function(set) {\r\n    // store reference to set\r\n    this.set = set\r\n  }\r\n\r\n})\r\n\r\n// Alias methods\r\nSVG.Set.inherit = function() {\r\n  var m\r\n    , methods = []\r\n\r\n  // gather shape methods\r\n  for(var m in SVG.Shape.prototype)\r\n    if (typeof SVG.Shape.prototype[m] == 'function' && typeof SVG.Set.prototype[m] != 'function')\r\n      methods.push(m)\r\n\r\n  // apply shape aliasses\r\n  methods.forEach(function(method) {\r\n    SVG.Set.prototype[method] = function() {\r\n      for (var i = 0, il = this.members.length; i < il; i++)\r\n        if (this.members[i] && typeof this.members[i][method] == 'function')\r\n          this.members[i][method].apply(this.members[i], arguments)\r\n\r\n      return method == 'animate' ? (this.fx || (this.fx = new SVG.FX.Set(this))) : this\r\n    }\r\n  })\r\n\r\n  // clear methods for the next round\r\n  methods = []\r\n\r\n  // gather fx methods\r\n  for(var m in SVG.FX.prototype)\r\n    if (typeof SVG.FX.prototype[m] == 'function' && typeof SVG.FX.Set.prototype[m] != 'function')\r\n      methods.push(m)\r\n\r\n  // apply fx aliasses\r\n  methods.forEach(function(method) {\r\n    SVG.FX.Set.prototype[method] = function() {\r\n      for (var i = 0, il = this.set.members.length; i < il; i++)\r\n        this.set.members[i].fx[method].apply(this.set.members[i].fx, arguments)\r\n\r\n      return this\r\n    }\r\n  })\r\n}\r\n\n\r\nSVG.extend(SVG.Element, {\r\n  // Store data values on svg nodes\r\n  data: function(a, v, r) {\r\n    if (typeof a == 'object') {\r\n      for (v in a)\r\n        this.data(v, a[v])\r\n\r\n    } else if (arguments.length < 2) {\r\n      try {\r\n        return JSON.parse(this.attr('data-' + a))\r\n      } catch(e) {\r\n        return this.attr('data-' + a)\r\n      }\r\n\r\n    } else {\r\n      this.attr(\r\n        'data-' + a\r\n      , v === null ?\r\n          null :\r\n        r === true || typeof v === 'string' || typeof v === 'number' ?\r\n          v :\r\n          JSON.stringify(v)\r\n      )\r\n    }\r\n\r\n    return this\r\n  }\r\n})\nSVG.extend(SVG.Element, {\r\n  // Remember arbitrary data\r\n  remember: function(k, v) {\r\n    // remember every item in an object individually\r\n    if (typeof arguments[0] == 'object')\r\n      for (var v in k)\r\n        this.remember(v, k[v])\r\n\r\n    // retrieve memory\r\n    else if (arguments.length == 1)\r\n      return this.memory()[k]\r\n\r\n    // store memory\r\n    else\r\n      this.memory()[k] = v\r\n\r\n    return this\r\n  }\r\n\r\n  // Erase a given memory\r\n, forget: function() {\r\n    if (arguments.length == 0)\r\n      this._memory = {}\r\n    else\r\n      for (var i = arguments.length - 1; i >= 0; i--)\r\n        delete this.memory()[arguments[i]]\r\n\r\n    return this\r\n  }\r\n\r\n  // Initialize or return local memory object\r\n, memory: function() {\r\n    return this._memory || (this._memory = {})\r\n  }\r\n\r\n})\n// Method for getting an element by id\r\nSVG.get = function(id) {\r\n  var node = document.getElementById(idFromReference(id) || id)\r\n  return SVG.adopt(node)\r\n}\r\n\r\n// Select elements by query string\r\nSVG.select = function(query, parent) {\r\n  return new SVG.Set(\r\n    SVG.utils.map((parent || document).querySelectorAll(query), function(node) {\r\n      return SVG.adopt(node)\r\n    })\r\n  )\r\n}\r\n\r\nSVG.extend(SVG.Parent, {\r\n  // Scoped select method\r\n  select: function(query) {\r\n    return SVG.select(query, this.node)\r\n  }\r\n\r\n})\nfunction pathRegReplace(a, b, c, d) {\r\n  return c + d.replace(SVG.regex.dots, ' .')\r\n}\r\n\r\n// creates deep clone of array\r\nfunction array_clone(arr){\r\n  var clone = arr.slice(0)\r\n  for(var i = clone.length; i--;){\r\n    if(Array.isArray(clone[i])){\r\n      clone[i] = array_clone(clone[i])\r\n    }\r\n  }\r\n  return clone\r\n}\r\n\r\n// tests if a given element is instance of an object\r\nfunction is(el, obj){\r\n  return el instanceof obj\r\n}\r\n\r\n// tests if a given selector matches an element\r\nfunction matches(el, selector) {\r\n  return (el.matches || el.matchesSelector || el.msMatchesSelector || el.mozMatchesSelector || el.webkitMatchesSelector || el.oMatchesSelector).call(el, selector);\r\n}\r\n\r\n// Convert dash-separated-string to camelCase\r\nfunction camelCase(s) {\r\n  return s.toLowerCase().replace(/-(.)/g, function(m, g) {\r\n    return g.toUpperCase()\r\n  })\r\n}\r\n\r\n// Capitalize first letter of a string\r\nfunction capitalize(s) {\r\n  return s.charAt(0).toUpperCase() + s.slice(1)\r\n}\r\n\r\n// Ensure to six-based hex\r\nfunction fullHex(hex) {\r\n  return hex.length == 4 ?\r\n    [ '#',\r\n      hex.substring(1, 2), hex.substring(1, 2)\r\n    , hex.substring(2, 3), hex.substring(2, 3)\r\n    , hex.substring(3, 4), hex.substring(3, 4)\r\n    ].join('') : hex\r\n}\r\n\r\n// Component to hex value\r\nfunction compToHex(comp) {\r\n  var hex = comp.toString(16)\r\n  return hex.length == 1 ? '0' + hex : hex\r\n}\r\n\r\n// Calculate proportional width and height values when necessary\r\nfunction proportionalSize(element, width, height) {\r\n  if (width == null || height == null) {\r\n    var box = element.bbox()\r\n\r\n    if (width == null)\r\n      width = box.width / box.height * height\r\n    else if (height == null)\r\n      height = box.height / box.width * width\r\n  }\r\n\r\n  return {\r\n    width:  width\r\n  , height: height\r\n  }\r\n}\r\n\r\n// Delta transform point\r\nfunction deltaTransformPoint(matrix, x, y) {\r\n  return {\r\n    x: x * matrix.a + y * matrix.c + 0\r\n  , y: x * matrix.b + y * matrix.d + 0\r\n  }\r\n}\r\n\r\n// Map matrix array to object\r\nfunction arrayToMatrix(a) {\r\n  return { a: a[0], b: a[1], c: a[2], d: a[3], e: a[4], f: a[5] }\r\n}\r\n\r\n// Parse matrix if required\r\nfunction parseMatrix(matrix) {\r\n  if (!(matrix instanceof SVG.Matrix))\r\n    matrix = new SVG.Matrix(matrix)\r\n\r\n  return matrix\r\n}\r\n\r\n// Add centre point to transform object\r\nfunction ensureCentre(o, target) {\r\n  o.cx = o.cx == null ? target.bbox().cx : o.cx\r\n  o.cy = o.cy == null ? target.bbox().cy : o.cy\r\n}\r\n\r\n// PathArray Helpers\r\nfunction arrayToString(a) {\r\n  for (var i = 0, il = a.length, s = ''; i < il; i++) {\r\n    s += a[i][0]\r\n\r\n    if (a[i][1] != null) {\r\n      s += a[i][1]\r\n\r\n      if (a[i][2] != null) {\r\n        s += ' '\r\n        s += a[i][2]\r\n\r\n        if (a[i][3] != null) {\r\n          s += ' '\r\n          s += a[i][3]\r\n          s += ' '\r\n          s += a[i][4]\r\n\r\n          if (a[i][5] != null) {\r\n            s += ' '\r\n            s += a[i][5]\r\n            s += ' '\r\n            s += a[i][6]\r\n\r\n            if (a[i][7] != null) {\r\n              s += ' '\r\n              s += a[i][7]\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return s + ' '\r\n}\r\n\r\n// Deep new id assignment\r\nfunction assignNewId(node) {\r\n  // do the same for SVG child nodes as well\r\n  for (var i = node.childNodes.length - 1; i >= 0; i--)\r\n    if (node.childNodes[i] instanceof window.SVGElement)\r\n      assignNewId(node.childNodes[i])\r\n\r\n  return SVG.adopt(node).id(SVG.eid(node.nodeName))\r\n}\r\n\r\n// Add more bounding box properties\r\nfunction fullBox(b) {\r\n  if (b.x == null) {\r\n    b.x      = 0\r\n    b.y      = 0\r\n    b.width  = 0\r\n    b.height = 0\r\n  }\r\n\r\n  b.w  = b.width\r\n  b.h  = b.height\r\n  b.x2 = b.x + b.width\r\n  b.y2 = b.y + b.height\r\n  b.cx = b.x + b.width / 2\r\n  b.cy = b.y + b.height / 2\r\n\r\n  return b\r\n}\r\n\r\n// Get id from reference string\r\nfunction idFromReference(url) {\r\n  var m = (url || '').toString().match(SVG.regex.reference)\r\n\r\n  if (m) return m[1]\r\n}\r\n\r\n// If values like 1e-88 are passed, this is not a valid 32 bit float,\r\n// but in those cases, we are so close to 0 that 0 works well!\r\nfunction float32String(v) {\r\n  return Math.abs(v) > 1e-37 ? v : 0\r\n}\r\n\r\n// Create matrix array for looping\r\nvar abcdef = 'abcdef'.split('')\r\n\n// Add CustomEvent to IE9 and IE10\r\nif (typeof window.CustomEvent !== 'function') {\r\n  // Code from: https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent\r\n  var CustomEventPoly = function(event, options) {\r\n    options = options || { bubbles: false, cancelable: false, detail: undefined }\r\n    var e = document.createEvent('CustomEvent')\r\n    e.initCustomEvent(event, options.bubbles, options.cancelable, options.detail)\r\n    return e\r\n  }\r\n\r\n  CustomEventPoly.prototype = window.Event.prototype\r\n\r\n  SVG.CustomEvent = CustomEventPoly\r\n} else {\r\n  SVG.CustomEvent = window.CustomEvent\r\n}\r\n\r\n// requestAnimationFrame / cancelAnimationFrame Polyfill with fallback based on Paul Irish\r\n(function(w) {\r\n  var lastTime = 0\r\n  var vendors = ['moz', 'webkit']\r\n\r\n  for(var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\r\n    w.requestAnimationFrame = w[vendors[x] + 'RequestAnimationFrame']\r\n    w.cancelAnimationFrame  = w[vendors[x] + 'CancelAnimationFrame'] ||\r\n                              w[vendors[x] + 'CancelRequestAnimationFrame']\r\n  }\r\n\r\n  w.requestAnimationFrame = w.requestAnimationFrame ||\r\n    function(callback) {\r\n      var currTime = new Date().getTime()\r\n      var timeToCall = Math.max(0, 16 - (currTime - lastTime))\r\n\r\n      var id = w.setTimeout(function() {\r\n        callback(currTime + timeToCall)\r\n      }, timeToCall)\r\n\r\n      lastTime = currTime + timeToCall\r\n      return id\r\n    }\r\n\r\n  w.cancelAnimationFrame = w.cancelAnimationFrame || w.clearTimeout;\r\n\r\n}(window))\r\n\r\nreturn SVG\r\n\r\n}));\r"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}