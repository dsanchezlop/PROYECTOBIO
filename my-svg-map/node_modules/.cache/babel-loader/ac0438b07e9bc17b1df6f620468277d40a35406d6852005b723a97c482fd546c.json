{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport * as d3 from \"d3\";\nexport default {\n  data() {\n    return {\n      selectedStates: ref([])\n    };\n  },\n  mounted() {\n    const svg = d3.select(this.$refs.chart).append(\"svg\").attr(\"width\", \"1009.6727\").attr(\"height\", \"665.96301\");\n\n    // Aquí es donde se carga el archivo world.svg y se agrega al SVG\n    d3.xml(require(\"@/assets/world.svg\")).then(data => {\n      const importedNode = document.importNode(data.documentElement, true);\n      svg.node().appendChild(importedNode);\n\n      // Obtener todos los elementos \"path\" del SVG\n      const paths = svg.selectAll('path');\n\n      // Asignar las funciones \"changeColorOnClick\", \"changeColorOnHover\" y \"restoreColorOnHover\" a los eventos correspondientes de cada elemento \"path\"\n      paths.on('click', this.changeColorOnClick).on('mouseover', this.changeColorOnHover).on('mouseout', this.restoreColorOnHover);\n    }).catch(error => {\n      console.error(error);\n    });\n  },\n  methods: {\n    // Función para cambiar el color de fondo de un elemento \"path\" a verde al hacer clic en él\n    changeColorOnClick(event) {\n      const path = event.target;\n      if (path.classList.contains('selectedPath')) {\n        // si ya está seleccionado, se quita el color\n        path.style.fill = 'black';\n        path.classList.remove('selectedPath');\n        // se elimina el país de la lista de países seleccionados\n        this.selectedStates = this.selectedStates.filter(state => state.id !== path.id);\n      } else {\n        // si no está seleccionado, se agrega el color\n        path.style.fill = 'green';\n        path.classList.add('selectedPath');\n        // se agrega el país a la lista de países seleccionados\n        this.selectedStates.push({\n          id: path.id,\n          title: path.getAttribute('title')\n        });\n        console.log(this.selectedStates);\n      }\n    },\n    // Función para cambiar el color de fondo de un elemento \"path\" a púrpura al pasar el mouse por encima\n    changeColorOnHover(event) {\n      const path = event.target;\n      if (!path.classList.contains('selectedPath')) {\n        path.style.fill = 'purple';\n        document.getElementById(\"hover-value2\").textContent = path.getAttribute('title');\n      }\n    },\n    // Función para restaurar el color de fondo de un elemento \"path\" al dejar de pasar el mouse por encima\n    restoreColorOnHover(event) {\n      const path = event.target;\n      if (!path.classList.contains('selectedPath')) {\n        path.style.fill = 'black';\n      }\n    }\n  }\n};","map":{"version":3,"names":["ref","d3","data","selectedStates","mounted","svg","select","$refs","chart","append","attr","xml","require","then","importedNode","document","importNode","documentElement","node","appendChild","paths","selectAll","on","changeColorOnClick","changeColorOnHover","restoreColorOnHover","catch","error","console","methods","event","path","target","classList","contains","style","fill","remove","filter","state","id","add","push","title","getAttribute","log","getElementById","textContent"],"sources":["/home/lasmas/GitHub/PROYECTOBIO/my-svg-map/src/components/SVGMap.vue"],"sourcesContent":["<template>\n   <button class=\"button-zoom\" @click=\"zoomIn\">+</button>\n   <button class=\"button-zoom\" @click=\"zoomOut\">-</button>\n   <br>\n   <button class=\"button-container\" @click=\"clearSelection\"> Clear Selection </button>\n\n   <div>\n      <h2>Selected Countries:</h2>\n      <div style=\"display:inline\">\n         <!-- up to down -->\n         <h4 v-for=\"state in selectedStates\" :key=\"state.id\">\n            {{ state.id }}: {{ state.title }}\n         </h4>\n\n         <h4 style=\"display:inline; margin:10px;\" v-for=\"state in selectedStates\" :key=\"state.id\"> {{ state.id }} :\n           {{ state.title }} </h4>\n      </div>\n      <div style=\"display:flex; text-align: center; align-items: center;\">\n         <h2>Hovered Country:</h2>\n         <h3 style=\"color: black\" id=\"hover-value2\">Move your mouse</h3>\n      </div>\n   </div>\n   <div ref=\"chart\">\n      <svg></svg>\n   </div>\n</template>\n\n\n<script>\nimport { ref } from 'vue';\nimport * as d3 from \"d3\";\n\nexport default {\n   data() {\n      return {\n         selectedStates: ref([])\n      }\n   },\n   mounted() {\n      const svg = d3.select(this.$refs.chart)\n         .append(\"svg\")\n         .attr(\"width\", \"1009.6727\")\n         .attr(\"height\", \"665.96301\");\n\n      // Aquí es donde se carga el archivo world.svg y se agrega al SVG\n      d3.xml(require(\"@/assets/world.svg\"))\n         .then(data => {\n            const importedNode = document.importNode(data.documentElement, true);\n            svg.node().appendChild(importedNode);\n\n            // Obtener todos los elementos \"path\" del SVG\n            const paths = svg.selectAll('path');\n\n            // Asignar las funciones \"changeColorOnClick\", \"changeColorOnHover\" y \"restoreColorOnHover\" a los eventos correspondientes de cada elemento \"path\"\n            paths\n               .on('click', this.changeColorOnClick)\n               .on('mouseover', this.changeColorOnHover)\n               .on('mouseout', this.restoreColorOnHover);\n         })\n         .catch(error => {\n            console.error(error);\n         });\n   },\n   methods: {\n      // Función para cambiar el color de fondo de un elemento \"path\" a verde al hacer clic en él\n      changeColorOnClick(event) {\n         const path = event.target;\n\n         if (path.classList.contains('selectedPath')) {\n            // si ya está seleccionado, se quita el color\n            path.style.fill = 'black';\n            path.classList.remove('selectedPath');\n            // se elimina el país de la lista de países seleccionados\n            this.selectedStates = this.selectedStates.filter(state => state.id !== path.id);\n         } else {\n            // si no está seleccionado, se agrega el color\n            path.style.fill = 'green';\n            path.classList.add('selectedPath');\n            // se agrega el país a la lista de países seleccionados\n            this.selectedStates.push({ id: path.id, title: path.getAttribute('title') });\n            console.log(this.selectedStates);\n         }\n      },\n\n      // Función para cambiar el color de fondo de un elemento \"path\" a púrpura al pasar el mouse por encima\n      changeColorOnHover(event) {\n         const path = event.target;\n         if (!path.classList.contains('selectedPath')) {\n            path.style.fill = 'purple';\n            document.getElementById(\"hover-value2\").textContent = path.getAttribute('title');\n         }\n      },\n\n      // Función para restaurar el color de fondo de un elemento \"path\" al dejar de pasar el mouse por encima\n      restoreColorOnHover(event) {\n         const path = event.target;\n\n         if (!path.classList.contains('selectedPath')) {\n            path.style.fill = 'black';\n         }\n      }\n   }\n}\n</script>\n\n\n<style scoped>\n.selectedPath {\n   animation-name: slowchange;\n   animation-duration: 1.5s;\n   animation-fill-mode: forwards;\n}\n\npath:hover {\n   animation-name: hoverChange;\n   animation-duration: 1s;\n   animation-fill-mode: forwards;\n}\n\n.map-container {\n   width: 100vw;\n   /* ancho al 100% de la ventana */\n   /* height: 100vh; altura al 100% de la ventana */\n   display: flex;\n   justify-content: center;\n   /* centro horizontal */\n   align-items: center;\n   /* centro vertical */\n}\n\n.button-container {\n   position: relative;\n   z-index: 1;\n   margin-right: auto;\n   width: fit-content;\n   height: fit-content;\n}\n\n.button-zoom {\n   position: relative;\n   z-index: 1;\n   margin-right: auto;\n   width: 2%;\n   height: 2%;\n}\n\n.draggeable {\n   cursor: move;\n}\n\n.selected {\n   fill: green;\n}\n\npath {\n   fill: black;\n   transition: fill 0.5s ease-in-out;\n}\n\n.selectedPath {\n   animation-name: slowchange;\n   animation-duration: 1.5s;\n   animation-fill-mode: forwards;\n   transition: fill 0.5s ease-in-out;\n}\n\npath:hover {\n   animation-name: hoverChange;\n   animation-duration: 1s;\n   animation-fill-mode: forwards;\n   transition: fill 0.5s ease-in-out;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}