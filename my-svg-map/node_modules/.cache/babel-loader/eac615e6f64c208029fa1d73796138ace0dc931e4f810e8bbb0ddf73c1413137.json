{"ast":null,"code":"import * as d3 from \"d3\";\nexport default {\n  data() {\n    return {\n      data: [{\n        date: \"2022-01-01\",\n        value: 100\n      }, {\n        date: \"2022-02-01\",\n        value: 150\n      }, {\n        date: \"2022-03-01\",\n        value: 200\n      }, {\n        date: \"2022-04-01\",\n        value: 250\n      }, {\n        date: \"2022-05-01\",\n        value: 300\n      }, {\n        date: \"2022-06-01\",\n        value: 350\n      }],\n      lines: []\n    };\n  },\n  mounted() {\n    this.createChart();\n  },\n  methods: {\n    createChart() {\n      const svg = d3.select(\"#chart\").append(\"svg\").attr(\"width\", 600).attr(\"height\", 400);\n      const margin = {\n        top: 20,\n        right: 20,\n        bottom: 30,\n        left: 50\n      };\n      const width = +svg.attr(\"width\") - margin.left - margin.right;\n      const height = +svg.attr(\"height\") - margin.top - margin.bottom;\n      const g = svg.append(\"g\").attr(\"transform\", `translate(${margin.left},${margin.top})`);\n      const xScale = d3.scaleTime().domain(d3.extent(this.data, d => new Date(d.date))).range([0, width]);\n      const yScale = d3.scaleLinear().domain([0, d3.max(this.data, d => d.value)]).range([height, 0]);\n      const line = d3.line().x(d => xScale(new Date(d.date))).y(d => yScale(d.value));\n      g.append(\"g\").attr(\"transform\", `translate(0,${height})`).call(d3.axisBottom(xScale).tickFormat(d3.timeFormat(\"%Y-%m-%d\")));\n      g.append(\"g\").call(d3.axisLeft(yScale));\n      g.append(\"path\").datum(this.data).attr(\"fill\", \"none\").attr(\"stroke\", \"steelblue\").attr(\"stroke-width\", 2).attr(\"d\", line);\n    }\n  }\n};","map":{"version":3,"names":["d3","data","date","value","lines","mounted","createChart","methods","svg","select","append","attr","margin","top","right","bottom","left","width","height","g","xScale","scaleTime","domain","extent","d","Date","range","yScale","scaleLinear","max","line","x","y","call","axisBottom","tickFormat","timeFormat","axisLeft","datum"],"sources":["C:\\Users\\daniv\\Documents\\GitHub\\PROYECTOBIO\\my-svg-map\\src\\components\\Charts.vue"],"sourcesContent":["<template>\n  <div id=\"chart\"></div>\n</template>\n\n<script>\nimport * as d3 from \"d3\";\n\nexport default {\n  data() {\n    return {\n      data: [\n        { date: \"2022-01-01\", value: 100 },\n        { date: \"2022-02-01\", value: 150 },\n        { date: \"2022-03-01\", value: 200 },\n        { date: \"2022-04-01\", value: 250 },\n        { date: \"2022-05-01\", value: 300 },\n        { date: \"2022-06-01\", value: 350 },\n      ],\n      lines: [],\n    };\n  },\n\n  mounted() {\n    this.createChart();\n  },\n\n  methods: {\n    createChart() {\n      const svg = d3\n        .select(\"#chart\")\n        .append(\"svg\")\n        .attr(\"width\", 600)\n        .attr(\"height\", 400);\n\n      const margin = { top: 20, right: 20, bottom: 30, left: 50 };\n      const width = +svg.attr(\"width\") - margin.left - margin.right;\n      const height = +svg.attr(\"height\") - margin.top - margin.bottom;\n      const g = svg\n        .append(\"g\")\n        .attr(\"transform\", `translate(${margin.left},${margin.top})`);\n\n      const xScale = d3\n        .scaleTime()\n        .domain(d3.extent(this.data, (d) => new Date(d.date)))\n        .range([0, width]);\n\n      const yScale = d3\n        .scaleLinear()\n        .domain([0, d3.max(this.data, (d) => d.value)])\n        .range([height, 0]);\n\n      const line = d3\n        .line()\n        .x((d) => xScale(new Date(d.date)))\n        .y((d) => yScale(d.value));\n\n      g.append(\"g\")\n        .attr(\"transform\", `translate(0,${height})`)\n        .call(d3.axisBottom(xScale).tickFormat(d3.timeFormat(\"%Y-%m-%d\")));\n\n      g.append(\"g\").call(d3.axisLeft(yScale));\n\n      g.append(\"path\")\n        .datum(this.data)\n        .attr(\"fill\", \"none\")\n        .attr(\"stroke\", \"steelblue\")\n        .attr(\"stroke-width\", 2)\n        .attr(\"d\", line);\n    },\n  },\n};\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}