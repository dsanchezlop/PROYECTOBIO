{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  ref: \"canvas\",\n  width: \"600\",\n  height: \"400\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"canvas\", _hoisted_1, null, 512 /* NEED_PATCH */)]);\n}","map":{"version":3,"names":["ref","width","height","_createElementBlock","_createElementVNode","_hoisted_1"],"sources":["C:\\Users\\daniv\\Documents\\GitHub\\PROYECTOBIO\\my-svg-map\\src\\components\\Charts.vue"],"sourcesContent":["<template>\n  <div>\n    <canvas ref=\"canvas\" width=\"600\" height=\"400\"></canvas>\n  </div>\n</template>\n\n\n<script>\nimport * as d3 from 'd3';\n\nexport default {\n  mounted() {\n    const canvas = this.$refs.canvas;\n    const context = canvas.getContext('2d');\n    \n    const width = canvas.width = 600;\n    const height = canvas.height = 400;\n\n    const data = [\n      { x: 0, y: 10 },\n      { x: 1, y: 20 },\n      { x: 2, y: 30 },\n      { x: 3, y: 40 },\n      { x: 4, y: 50 },\n    ];\n\n    const xScale = d3.scaleLinear()\n      .domain([0, d3.max(data, d => d.x)])\n      .range([0, width]);\n\n    const yScale = d3.scaleLinear()\n      .domain([0, d3.max(data, d => d.y)])\n      .range([height, 0]);\n\n    const line = d3.line()\n      .x(d => xScale(d.x))\n      .y(d => yScale(d.y));\n\n    context.beginPath();\n    context.lineWidth = 2;\n    context.strokeStyle = '#333';\n    line(data);\n    context.stroke();\n  }\n};\n</script>\n"],"mappings":";;EAEYA,GAAG,EAAC,QAAQ;EAACC,KAAK,EAAC,KAAK;EAACC,MAAM,EAAC;;;uBAD1CC,mBAAA,CAEM,cADJC,mBAAA,CAAuD,UAAvDC,UAAuD,8B"},"metadata":{},"sourceType":"module","externalDependencies":[]}