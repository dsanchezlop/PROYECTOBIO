{"ast":null,"code":"import { ref } from 'vue';\nimport * as d3 from \"d3\";\nexport default {\n  mounted() {\n    const svg = d3.select(this.$refs.chart).append(\"svg\").attr(\"width\", \"1009.6727\").attr(\"height\", \"665.96301\");\n\n    // Aquí es donde se carga el archivo world.svg y se agrega al SVG\n    d3.xml(require(\"@/assets/world.svg\")).then(data => {\n      const importedNode = document.importNode(data.documentElement, true);\n      svg.node().appendChild(importedNode);\n\n      // Obtener todos los elementos \"path\" del SVG\n      const paths = svg.selectAll('path');\n\n      // Asignar las funciones \"changeColorOnClick\", \"changeColorOnHover\" y \"restoreColorOnHover\" a los eventos correspondientes de cada elemento \"path\"\n      paths.on('click', changeColorOnClick).on('mouseover', changeColorOnHover).on('mouseout', restoreColorOnHover);\n\n      // Crear el objeto de zoom\n      const zoom = d3.zoom().scaleExtent([1, 8]).on(\"zoom\", () => {\n        // Actualizar la escala y el desplazamiento del SVG\n        svg.attr(\"transform\", d3.event.transform);\n      });\n\n      // Agregar el objeto de zoom al SVG\n      svg.call(zoom);\n    }).catch(error => {\n      console.error(error);\n    });\n  },\n  methods: {\n    zoomIn() {\n      const svg = d3.select(this.$refs.chart).select(\"svg\");\n      const zoom = d3.zoom().scaleBy(svg.transition().duration(750), 1.5);\n      zoom.filter(() => d3.event.button === 0 || d3.event.button === 1);\n      svg.call(zoom);\n    },\n    zoomOut() {\n      const svg = d3.select(this.$refs.chart).select(\"svg\");\n      const zoom = d3.zoom().scaleBy(svg.transition().duration(750), 1 / 1.5);\n      zoom.filter(() => d3.event.button === 0 || d3.event.button === 1);\n      svg.call(zoom);\n    },\n    clearSelection() {\n      selectedStates.value = [];\n      d3.select(this.$refs.chart).selectAll('.selectedPath').each(function () {\n        d3.select(this).style('fill', 'black').classed('selectedPath', false);\n      });\n    }\n  }\n};","map":{"version":3,"names":["ref","d3","mounted","svg","select","$refs","chart","append","attr","xml","require","then","data","importedNode","document","importNode","documentElement","node","appendChild","paths","selectAll","on","changeColorOnClick","changeColorOnHover","restoreColorOnHover","zoom","scaleExtent","event","transform","call","catch","error","console","methods","zoomIn","scaleBy","transition","duration","filter","button","zoomOut","clearSelection","selectedStates","value","each","style","classed"],"sources":["/home/lasmas/GitHub/PROYECTOBIO/my-svg-map/src/components/SVGMap.vue"],"sourcesContent":["<template>\n   <button class=\"button-zoom\" @click=\"zoomIn\">+</button>\n   <button class=\"button-zoom\" @click=\"zoomOut\">-</button>\n   <br>\n   <button class=\"button-container\" @click=\"clearSelection\"> Clear Selection </button>\n\n   <div>\n      <h2>Selected Countries:</h2>\n      <div style=\"display:inline\">\n         <h4 v-for=\"state in selectedStates\" :key=\"state.id\">\n            {{ state.id }}: {{ state.title }}\n         </h4>\n\n      </div>\n      <div style=\"display:flex; text-align: center; align-items: center;\">\n         <h2>Hovered Country:</h2>\n         <h3 style=\"color: black\" id=\"hover-value\">Move your mouse</h3>\n      </div>\n   </div>\n   <div ref=\"chart\">\n      <svg></svg>\n   </div>\n</template>\n\n\n<script>\nimport { ref } from 'vue';\nimport * as d3 from \"d3\";\n\nexport default {\n   mounted() {\n      const svg = d3.select(this.$refs.chart)\n         .append(\"svg\")\n         .attr(\"width\", \"1009.6727\")\n         .attr(\"height\", \"665.96301\");\n\n      // Aquí es donde se carga el archivo world.svg y se agrega al SVG\n      d3.xml(require(\"@/assets/world.svg\"))\n         .then(data => {\n            const importedNode = document.importNode(data.documentElement, true);\n            svg.node().appendChild(importedNode);\n\n            // Obtener todos los elementos \"path\" del SVG\n            const paths = svg.selectAll('path');\n\n            // Asignar las funciones \"changeColorOnClick\", \"changeColorOnHover\" y \"restoreColorOnHover\" a los eventos correspondientes de cada elemento \"path\"\n            paths\n               .on('click', changeColorOnClick)\n               .on('mouseover', changeColorOnHover)\n               .on('mouseout', restoreColorOnHover);\n\n            // Crear el objeto de zoom\n            const zoom = d3.zoom()\n               .scaleExtent([1, 8])\n               .on(\"zoom\", () => {\n                  // Actualizar la escala y el desplazamiento del SVG\n                  svg.attr(\"transform\", d3.event.transform);\n               });\n\n            // Agregar el objeto de zoom al SVG\n            svg.call(zoom);\n         })\n         .catch(error => {\n            console.error(error);\n         });\n   },\n\n   methods: {\n      zoomIn() {\n         const svg = d3.select(this.$refs.chart).select(\"svg\");\n         const zoom = d3.zoom().scaleBy(svg.transition().duration(750), 1.5);\n         zoom.filter(() => d3.event.button === 0 || d3.event.button === 1)\n         svg.call(zoom);\n      },\n\n      zoomOut() {\n         const svg = d3.select(this.$refs.chart).select(\"svg\");\n         const zoom = d3.zoom().scaleBy(svg.transition().duration(750), 1 / 1.5);\n         zoom.filter(() => d3.event.button === 0 || d3.event.button === 1)\n         svg.call(zoom);\n      },\n\n      clearSelection() {\n         selectedStates.value = [];\n         d3.select(this.$refs.chart).selectAll('.selectedPath').each(function () {\n            d3.select(this).style('fill', 'black').classed('selectedPath', false);\n         });\n      },\n   }\n}\n\n\n</script>\n\n<style scoped>\n.selectedPath {\n   animation-name: slowchange;\n   animation-duration: 1.5s;\n   animation-fill-mode: forwards;\n}\n\npath:hover {\n   animation-name: hoverChange;\n   animation-duration: 1s;\n   animation-fill-mode: forwards;\n}\n\n.logo {\n   height: 6em;\n   padding: 1.5em;\n   will-change: filter;\n}\n\n.logo:hover {\n   filter: drop-shadow(0 0 2em #646cffaa);\n}\n\n.logo.vue:hover {\n   filter: drop-shadow(0 0 2em #42b883aa);\n}\n\n.map-container {\n   width: 100vw;\n   /* ancho al 100% de la ventana */\n   /* height: 100vh; altura al 100% de la ventana */\n   display: flex;\n   justify-content: center;\n   /* centro horizontal */\n   align-items: center;\n   /* centro vertical */\n}\n\n.button-container {\n   position: relative;\n   z-index: 1;\n   margin-right: auto;\n   width: fit-content;\n   height: fit-content;\n}\n\n.button-zoom {\n   position: relative;\n   z-index: 1;\n   margin-right: auto;\n   width: 2%;\n   height: 2%;\n}\n\n.draggeable {\n   cursor: move;\n}\n\n.selected {\n   fill: green;\n}\n\npath {\n   fill: black;\n   transition: fill 0.5s ease-in-out;\n}\n\n.selectedPath {\n   animation-name: slowchange;\n   animation-duration: 1.5s;\n   animation-fill-mode: forwards;\n   transition: fill 0.5s ease-in-out;\n}\n\npath:hover {\n   animation-name: hoverChange;\n   animation-duration: 1s;\n   animation-fill-mode: forwards;\n   transition: fill 0.5s ease-in-out;\n}\n</style>\n"],"mappings":"AA0BA,SAASA,GAAE,QAAS,KAAK;AACzB,OAAO,KAAKC,EAAC,MAAO,IAAI;AAExB,eAAe;EACZC,OAAOA,CAAA,EAAG;IACP,MAAMC,GAAE,GAAIF,EAAE,CAACG,MAAM,CAAC,IAAI,CAACC,KAAK,CAACC,KAAK,EAClCC,MAAM,CAAC,KAAK,EACZC,IAAI,CAAC,OAAO,EAAE,WAAW,EACzBA,IAAI,CAAC,QAAQ,EAAE,WAAW,CAAC;;IAE/B;IACAP,EAAE,CAACQ,GAAG,CAACC,OAAO,CAAC,oBAAoB,CAAC,EAChCC,IAAI,CAACC,IAAG,IAAK;MACX,MAAMC,YAAW,GAAIC,QAAQ,CAACC,UAAU,CAACH,IAAI,CAACI,eAAe,EAAE,IAAI,CAAC;MACpEb,GAAG,CAACc,IAAI,EAAE,CAACC,WAAW,CAACL,YAAY,CAAC;;MAEpC;MACA,MAAMM,KAAI,GAAIhB,GAAG,CAACiB,SAAS,CAAC,MAAM,CAAC;;MAEnC;MACAD,KAAI,CACAE,EAAE,CAAC,OAAO,EAAEC,kBAAkB,EAC9BD,EAAE,CAAC,WAAW,EAAEE,kBAAkB,EAClCF,EAAE,CAAC,UAAU,EAAEG,mBAAmB,CAAC;;MAEvC;MACA,MAAMC,IAAG,GAAIxB,EAAE,CAACwB,IAAI,EAAC,CACjBC,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAClBL,EAAE,CAAC,MAAM,EAAE,MAAM;QACf;QACAlB,GAAG,CAACK,IAAI,CAAC,WAAW,EAAEP,EAAE,CAAC0B,KAAK,CAACC,SAAS,CAAC;MAC5C,CAAC,CAAC;;MAEL;MACAzB,GAAG,CAAC0B,IAAI,CAACJ,IAAI,CAAC;IACjB,CAAC,EACAK,KAAK,CAACC,KAAI,IAAK;MACbC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACvB,CAAC,CAAC;EACR,CAAC;EAEDE,OAAO,EAAE;IACNC,MAAMA,CAAA,EAAG;MACN,MAAM/B,GAAE,GAAIF,EAAE,CAACG,MAAM,CAAC,IAAI,CAACC,KAAK,CAACC,KAAK,CAAC,CAACF,MAAM,CAAC,KAAK,CAAC;MACrD,MAAMqB,IAAG,GAAIxB,EAAE,CAACwB,IAAI,EAAE,CAACU,OAAO,CAAChC,GAAG,CAACiC,UAAU,EAAE,CAACC,QAAQ,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC;MACnEZ,IAAI,CAACa,MAAM,CAAC,MAAMrC,EAAE,CAAC0B,KAAK,CAACY,MAAK,KAAM,KAAKtC,EAAE,CAAC0B,KAAK,CAACY,MAAK,KAAM,CAAC;MAChEpC,GAAG,CAAC0B,IAAI,CAACJ,IAAI,CAAC;IACjB,CAAC;IAEDe,OAAOA,CAAA,EAAG;MACP,MAAMrC,GAAE,GAAIF,EAAE,CAACG,MAAM,CAAC,IAAI,CAACC,KAAK,CAACC,KAAK,CAAC,CAACF,MAAM,CAAC,KAAK,CAAC;MACrD,MAAMqB,IAAG,GAAIxB,EAAE,CAACwB,IAAI,EAAE,CAACU,OAAO,CAAChC,GAAG,CAACiC,UAAU,EAAE,CAACC,QAAQ,CAAC,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC;MACvEZ,IAAI,CAACa,MAAM,CAAC,MAAMrC,EAAE,CAAC0B,KAAK,CAACY,MAAK,KAAM,KAAKtC,EAAE,CAAC0B,KAAK,CAACY,MAAK,KAAM,CAAC;MAChEpC,GAAG,CAAC0B,IAAI,CAACJ,IAAI,CAAC;IACjB,CAAC;IAEDgB,cAAcA,CAAA,EAAG;MACdC,cAAc,CAACC,KAAI,GAAI,EAAE;MACzB1C,EAAE,CAACG,MAAM,CAAC,IAAI,CAACC,KAAK,CAACC,KAAK,CAAC,CAACc,SAAS,CAAC,eAAe,CAAC,CAACwB,IAAI,CAAC,YAAY;QACrE3C,EAAE,CAACG,MAAM,CAAC,IAAI,CAAC,CAACyC,KAAK,CAAC,MAAM,EAAE,OAAO,CAAC,CAACC,OAAO,CAAC,cAAc,EAAE,KAAK,CAAC;MACxE,CAAC,CAAC;IACL;EACH;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}