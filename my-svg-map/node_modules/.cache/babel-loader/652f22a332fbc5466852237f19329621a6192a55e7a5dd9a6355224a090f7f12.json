{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport hello from \"./components/HelloWorld.vue\";\nimport map from \"./components/SVGMap.vue\";\nimport login from \"./components/Login.vue\";\nimport database from \"./components/Database.vue\";\nimport register from \"./components/Register.vue\";\nimport logout from \"./components/Logout.vue\";\nimport charts from \"./components/Charts.vue\";\nimport contact from \"./components/Contact.vue\";\n\n//Routes\nconst _routes = [{\n  path: \"/\",\n  name: \"hello\",\n  component: hello\n}, {\n  path: \"/map\",\n  name: \"map\",\n  component: map\n}, {\n  path: \"/login\",\n  name: \"login\",\n  component: login,\n  meta: {\n    requiresGuest: true // add this meta property to mark this route as requiring a guest user\n  }\n}, {\n  path: '/database',\n  name: 'database',\n  component: database,\n  beforeEnter: (to, from, next) => {\n    const isLoggedIn = document.cookie.includes('isLoggedIn=true');\n    const userRoleCookie = document.cookie.split(';').find(cookie => cookie.trim().startsWith('role='));\n    if (isLoggedIn && userRoleCookie) {\n      const userRole = parseInt(userRoleCookie.split('=')[1].trim());\n      if (userRole === 1) {\n        next();\n        return;\n      }\n    }\n    next('/login');\n  }\n}, {\n  path: \"/register\",\n  name: \"register\",\n  component: register,\n  meta: {\n    requiresGuest: true // add this meta property to mark this route as requiring a guest user\n  }\n}, {\n  path: \"/profile\",\n  name: \"profile\",\n  component: profile,\n  meta: {\n    requiresAuth: true // add this meta property to mark this route as requiring an authenticated user\n  }\n}, {\n  path: \"/logout\",\n  name: \"logout\",\n  component: logout\n}, {\n  path: \"/charts\",\n  name: \"charts\",\n  component: charts\n}, {\n  path: \"/contact\",\n  name: \"contact\",\n  component: contact\n}];\n\n//Create router\nconst router = createRouter({\n  history: createWebHistory(),\n  routes: _routes\n});\n\n// authentication check\nrouter.beforeEach((to, from, next) => {\n  const loggedIn = document.cookie.includes('isLoggedIn=true');\n\n  // redirect to login page if user is not logged in and trying to access a protected page\n  if (to.matched.some(record => record.meta.requiresAuth) && !loggedIn) {\n    next('/login');\n    return;\n  }\n\n  // redirect to home page if user is logged in and trying to access login/register page\n  if (to.matched.some(record => record.meta.requiresGuest) && loggedIn) {\n    next('/');\n    return;\n  }\n  next();\n});\n\n//Export router\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","hello","map","login","database","register","logout","charts","contact","_routes","path","name","component","meta","requiresGuest","beforeEnter","to","from","next","isLoggedIn","document","cookie","includes","userRoleCookie","split","find","trim","startsWith","userRole","parseInt","profile","requiresAuth","router","history","routes","beforeEach","loggedIn","matched","some","record"],"sources":["C:/Users/daniv/Documents/GitHub/PROYECTOBIO/my-svg-map/src/router.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router';\r\nimport hello from \"./components/HelloWorld.vue\";\r\nimport map from \"./components/SVGMap.vue\";\r\nimport login from \"./components/Login.vue\";\r\nimport database from \"./components/Database.vue\";\r\nimport register from \"./components/Register.vue\";\r\nimport logout from \"./components/Logout.vue\";\r\nimport charts from \"./components/Charts.vue\";\r\nimport contact from \"./components/Contact.vue\";\r\n\r\n\r\n//Routes\r\nconst _routes = [\r\n{\r\n    path:\"/\",\r\n    name:\"hello\",\r\n    component:hello,\r\n},\r\n{\r\n    path:\"/map\",\r\n    name:\"map\",\r\n    component:map\r\n},\r\n{\r\n    path:\"/login\",\r\n    name:\"login\",\r\n    component:login,\r\n    meta: {\r\n        requiresGuest: true // add this meta property to mark this route as requiring a guest user\r\n      }\r\n},\r\n{\r\n    path: '/database',\r\n    name: 'database',\r\n    component: database,\r\n    beforeEnter: (to, from, next) => {\r\n        const isLoggedIn = document.cookie.includes('isLoggedIn=true');\r\n        const userRoleCookie = document.cookie.split(';').find(cookie => cookie.trim().startsWith('role='));\r\n        \r\n        if (isLoggedIn && userRoleCookie) {\r\n          const userRole = parseInt(userRoleCookie.split('=')[1].trim());\r\n          if (userRole === 1) {\r\n            next();\r\n            return;\r\n          }\r\n        }\r\n      \r\n        next('/login');\r\n      },\r\n  },\r\n{\r\n    path:\"/register\",\r\n    name:\"register\",\r\n    component:register,\r\n    meta: {\r\n        requiresGuest: true // add this meta property to mark this route as requiring a guest user\r\n      }\r\n},\r\n{\r\n    path:\"/profile\",\r\n    name:\"profile\",\r\n    component:profile,\r\n    meta: {\r\n        requiresAuth: true // add this meta property to mark this route as requiring an authenticated user\r\n      }\r\n},\r\n{\r\n    path:\"/logout\",\r\n    name:\"logout\",\r\n    component:logout\r\n},\r\n{\r\n    path:\"/charts\",\r\n    name:\"charts\",\r\n    component:charts\r\n},\r\n{\r\n    path:\"/contact\",\r\n    name:\"contact\",\r\n    component:contact\r\n}\r\n\r\n];\r\n\r\n//Create router\r\nconst router = createRouter({\r\n    history:createWebHistory(),\r\n    routes: _routes,\r\n});\r\n\r\n// authentication check\r\nrouter.beforeEach((to, from, next) => {\r\n    const loggedIn = document.cookie.includes('isLoggedIn=true');\r\n  \r\n    // redirect to login page if user is not logged in and trying to access a protected page\r\n    if (to.matched.some(record => record.meta.requiresAuth) && !loggedIn) {\r\n      next('/login');\r\n      return;\r\n    }\r\n  \r\n    // redirect to home page if user is logged in and trying to access login/register page\r\n    if (to.matched.some(record => record.meta.requiresGuest) && loggedIn) {\r\n      next('/');\r\n      return;\r\n    }\r\n  \r\n    next();\r\n  });\r\n\r\n//Export router\r\nexport default router;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}