{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"chart\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1);\n}","map":{"version":3,"names":["id","_createElementBlock","_hoisted_1"],"sources":["C:\\Users\\daniv\\Documents\\GitHub\\PROYECTOBIO\\my-svg-map\\src\\components\\Charts.vue"],"sourcesContent":["<template>\n  <div id=\"chart\"></div>\n</template>\n\n<script>\nexport default {\n  name: \"Charts\",\n  data() {\n    return {\n      countries: [],\n    };\n  },\n  created() {\n    // Get the countries from the url\n    this.countries = this.$route.query.countries.split(\",\");\n    // console.log(this.countries);\n  },\n  getDataFromAPI() {\n      const apiUrl = `http://49.12.36.190/api/fertilizers-${selectedFertilizer.value}-year?year=${this.selectedYear}`;\n\n      axios\n        .get(apiUrl)\n        .then((response) => {\n          const data = response.data;\n          this.updateMapValues(data);\n          console.log(data);\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    },\n    updateMapValues(data) {\n      const paths = document.querySelectorAll(\"path\");\n      const tooltip = document.createElement(\"div\"); // Creates the div element for the tooltip\n      tooltip.style.position = \"absolute\";\n      tooltip.style.backgroundColor = \"white\";\n      tooltip.style.border = \"1px solid gray\";\n      tooltip.style.padding = \"5px\";\n      tooltip.style.pointerEvents = \"none\";\n      tooltip.style.display = \"none\"; // Hides the tooltip by default\n      document.body.appendChild(tooltip); // Adds the tooltip to the body\n\n      paths.forEach((path) => {\n        const code = path.getAttribute(\"id\");\n        const value = data.find((item) => item.code === code)?.amount ?? 0;\n        path.setAttribute(\"amount\", value);\n\n        path.addEventListener(\"mouseover\", () => {\n          // Gets the mouse position and updates the tooltip\n          const x = event.clientX;\n          const y = event.clientY;\n          tooltip.style.top = `${y}px`;\n          tooltip.style.left = `${x}px`;\n          tooltip.style.display = \"block\"; // Shows the tooltip\n          tooltip.textContent = `${path.getAttribute(\"title\")}: ${value}`;\n        });\n\n        path.addEventListener(\"mousemove\", () => {\n          // Updates the tooltip while the mouse moves inside the \"path\"\n          const x = event.clientX;\n          const y = event.clientY;\n          tooltip.style.top = `${y}px`;\n          tooltip.style.left = `${x}px`;\n        });\n\n        path.addEventListener(\"mouseout\", () => {\n          // Hide the tooltip when the mouse leaves the \"path\" element\n          tooltip.style.display = \"none\";\n        });\n      });\n    }\n};\n\n</script>\n"],"mappings":";;EACOA,EAAE,EAAC;AAAO;;uBAAfC,mBAAA,CAAsB,OAAtBC,UAAsB"},"metadata":{},"sourceType":"module","externalDependencies":[]}