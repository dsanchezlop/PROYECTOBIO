{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, Fragment as _Fragment, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-46f53af0\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_2 = {\n  class: \"map-container\"\n};\nconst _hoisted_3 = {\n  ref: \"svg\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"button\", {\n    class: \"button-zoom\",\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.zoomIn && _ctx.zoomIn(...args))\n  }, \"+\"), _createElementVNode(\"button\", {\n    class: \"button-zoom\",\n    onClick: _cache[1] || (_cache[1] = (...args) => _ctx.zoomOut && _ctx.zoomOut(...args))\n  }, \"-\"), _hoisted_1, _createElementVNode(\"button\", {\n    class: \"button-container\",\n    onClick: _cache[2] || (_cache[2] = (...args) => _ctx.clearSelection && _ctx.clearSelection(...args))\n  }, \" Clear Selection \"), _createCommentVNode(\" <div>\\n      <h2> Selected Countries :</h2>\\n      <div style=\\\"display:inline\\\">\\n         <h4 style=\\\"display:inline; margin:10px;\\\" v-for=\\\"state in selectedStates\\\" :key=\\\"state.id\\\"> {{ state.id }} :\\n            {{ state.title }} </h4>\\n      </div>\\n      <div style=\\\"display:flex; text-align: center; align-items: center;\\\">\\n         <h2>Hovered Country:</h2>\\n         <h3 style=\\\"color: black\\\"> {{ hoverValue }} </h3>\\n      </div>\\n   </div> \"), _createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" intentar que los path sean devuelto por la API \"), _createCommentVNode(\" <svg xmlns:mapsvg=\\\"http://mapsvg.com\\\" version=\\\"1.1\\\" id=\\\"svg2\\\" ref=\\\"svgMap\\\"\\n         mapsvg:geoViewBox=\\\"68.184010 37.084109 97.418146 6.753659\\\" width=\\\"1009.6727\\\" height=\\\"665.96301\\\"\\n         :style=\\\"{ transform: `scale(${zoomLevel})` }\\\" @mouseover=\\\"changeHoverValue\\\" @click=\\\"setSelectedPath\\\"\\n        >\\n      </svg> \"), (_openBlock(), _createElementBlock(\"svg\", _hoisted_3, null, 512 /* NEED_PATCH */))])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","class","ref","onClick","_cache","args","_ctx","zoomIn","zoomOut","_hoisted_1","clearSelection","_createCommentVNode","_hoisted_2","_createElementBlock","_hoisted_3"],"sources":["/home/lasmas/GitHub/PROYECTOBIO/my-svg-map/src/components/SVGMap.vue"],"sourcesContent":["<template>\n   <button class=\"button-zoom\" @click=\"zoomIn\">+</button>\n   <button class=\"button-zoom\" @click=\"zoomOut\">-</button>\n   <br>\n   <button class=\"button-container\" @click=\"clearSelection\"> Clear Selection </button>\n\n   <!-- <div>\n      <h2> Selected Countries :</h2>\n      <div style=\"display:inline\">\n         <h4 style=\"display:inline; margin:10px;\" v-for=\"state in selectedStates\" :key=\"state.id\"> {{ state.id }} :\n            {{ state.title }} </h4>\n      </div>\n      <div style=\"display:flex; text-align: center; align-items: center;\">\n         <h2>Hovered Country:</h2>\n         <h3 style=\"color: black\"> {{ hoverValue }} </h3>\n      </div>\n   </div> -->\n   <div class=\"map-container\">\n      <!-- intentar que los path sean devuelto por la API -->\n      <!-- <svg xmlns:mapsvg=\"http://mapsvg.com\" version=\"1.1\" id=\"svg2\" ref=\"svgMap\"\n         mapsvg:geoViewBox=\"68.184010 37.084109 97.418146 6.753659\" width=\"1009.6727\" height=\"665.96301\"\n         :style=\"{ transform: `scale(${zoomLevel})` }\" @mouseover=\"changeHoverValue\" @click=\"setSelectedPath\"\n        >\n      </svg> -->\n      <svg ref=\"svg\"></svg>\n\n   </div>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\nimport axios from 'axios';\nimport SVG from 'svg.js';\n\nconst MyComponent = {\n  data() {\n    return {\n      paths: []\n    };\n  },\n  mounted() {\n    // Hacer una llamada a la API para obtener los paths\n    axios.post('/svg-paths', { svgContent: require('../assets/world.svg') })\n      .then(response => {\n        this.paths = response.data.paths;\n        this.drawMap();\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  },\n  methods: {\n    drawMap() {\n      // Crear un objeto SVG y aÃ±adirlo al elemento SVG del componente\n      const svg = SVG(this.$refs.svg).size(800, 600);\n\n      // Dibujar cada path en el mapa\n      this.paths.forEach(path => {\n        svg.path(path).fill('none').stroke({ width: 2, color: '#000' });\n      });\n    }\n  }\n};\n</script>\n\n<style scoped>\n@keyframes slowchange {\n   to {\n      fill: indianred;\n   }\n}\n\n@keyframes hoverChange {\n   to {\n      fill: purple;\n   }\n}\n\npath {\n   fill: black;\n}\n\n.selectedPath {\n   animation-name: slowchange;\n   animation-duration: 1.5s;\n   animation-fill-mode: forwards;\n}\n\npath:hover {\n   animation-name: hoverChange;\n   animation-duration: 1s;\n   animation-fill-mode: forwards;\n}\n\n.logo {\n   height: 6em;\n   padding: 1.5em;\n   will-change: filter;\n}\n\n.logo:hover {\n   filter: drop-shadow(0 0 2em #646cffaa);\n}\n\n.logo.vue:hover {\n   filter: drop-shadow(0 0 2em #42b883aa);\n}\n\n.map-container {\n   width: 100vw;\n   /* ancho al 100% de la ventana */\n   /* height: 100vh; altura al 100% de la ventana */\n   display: flex;\n   justify-content: center;\n   /* centro horizontal */\n   align-items: center;\n   /* centro vertical */\n}\n\n.button-container {\n   position: relative;\n   z-index: 1;\n   margin-right: auto;\n   width: fit-content;\n   height: fit-content;\n}\n\n.button-zoom {\n   position: relative;\n   z-index: 1;\n   margin-right: auto;\n   width: 2%;\n   height: 2%;\n}\n\n.draggeable {\n   cursor: move;\n}\n</style>\n"],"mappings":";;gEAGGA,mBAAA,CAAI;;EAcCC,KAAK,EAAC;AAAe;;EAOlBC,GAAG,EAAC;AAAK;;6DAvBjBF,mBAAA,CAAsD;IAA9CC,KAAK,EAAC,aAAa;IAAEE,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,IAAA,CAAAC,MAAA,IAAAD,IAAA,CAAAC,MAAA,IAAAF,IAAA,CAAM;KAAE,GAAC,GAC7CL,mBAAA,CAAuD;IAA/CC,KAAK,EAAC,aAAa;IAAEE,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,IAAA,CAAAE,OAAA,IAAAF,IAAA,CAAAE,OAAA,IAAAH,IAAA,CAAO;KAAE,GAAC,GAC9CI,UAAI,EACJT,mBAAA,CAAmF;IAA3EC,KAAK,EAAC,kBAAkB;IAAEE,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,IAAA,CAAAI,cAAA,IAAAJ,IAAA,CAAAI,cAAA,IAAAL,IAAA,CAAc;KAAE,mBAAiB,GAE1EM,mBAAA,6cAUU,EACVX,mBAAA,CASM,OATNY,UASM,GARHD,mBAAA,oDAAuD,EACvDA,mBAAA,sVAIU,G,cACVE,mBAAA,CAAqB,OAArBC,UAAqB,+B"},"metadata":{},"sourceType":"module","externalDependencies":[]}