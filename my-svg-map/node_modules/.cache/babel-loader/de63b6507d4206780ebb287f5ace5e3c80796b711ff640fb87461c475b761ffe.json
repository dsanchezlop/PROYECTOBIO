{"ast":null,"code":"export default {\n  name: \"Charts\",\n  data() {\n    return {\n      countries: []\n    };\n  },\n  created() {\n    // Get the countries from the url\n    this.countries = this.$route.query.countries.split(\",\");\n    // console.log(this.countries);\n  },\n\n  getDataFromAPI() {\n    const apiUrl = `http://49.12.36.190/api/fertilizers-${selectedFertilizer.value}-year?year=${this.selectedYear}`;\n    axios.get(apiUrl).then(response => {\n      const data = response.data;\n      this.updateMapValues(data);\n    }).catch(error => {\n      console.error(error);\n    });\n  },\n  updateMapValues(data) {\n    const paths = document.querySelectorAll(\"path\");\n    const tooltip = document.createElement(\"div\"); // Creates the div element for the tooltip\n    tooltip.style.position = \"absolute\";\n    tooltip.style.backgroundColor = \"white\";\n    tooltip.style.border = \"1px solid gray\";\n    tooltip.style.padding = \"5px\";\n    tooltip.style.pointerEvents = \"none\";\n    tooltip.style.display = \"none\"; // Hides the tooltip by default\n    document.body.appendChild(tooltip); // Adds the tooltip to the body\n\n    paths.forEach(path => {\n      const code = path.getAttribute(\"id\");\n      const value = data.find(item => item.code === code)?.amount ?? 0;\n      path.setAttribute(\"amount\", value);\n      path.addEventListener(\"mouseover\", () => {\n        // Gets the mouse position and updates the tooltip\n        const x = event.clientX;\n        const y = event.clientY;\n        tooltip.style.top = `${y}px`;\n        tooltip.style.left = `${x}px`;\n        tooltip.style.display = \"block\"; // Shows the tooltip\n        tooltip.textContent = `${path.getAttribute(\"title\")}: ${value}`;\n      });\n      path.addEventListener(\"mousemove\", () => {\n        // Updates the tooltip while the mouse moves inside the \"path\"\n        const x = event.clientX;\n        const y = event.clientY;\n        tooltip.style.top = `${y}px`;\n        tooltip.style.left = `${x}px`;\n      });\n      path.addEventListener(\"mouseout\", () => {\n        // Hide the tooltip when the mouse leaves the \"path\" element\n        tooltip.style.display = \"none\";\n      });\n      console.log(data);\n    });\n  }\n};","map":{"version":3,"names":["name","data","countries","created","$route","query","split","getDataFromAPI","apiUrl","selectedFertilizer","value","selectedYear","axios","get","then","response","updateMapValues","catch","error","console","paths","document","querySelectorAll","tooltip","createElement","style","position","backgroundColor","border","padding","pointerEvents","display","body","appendChild","forEach","path","code","getAttribute","find","item","amount","setAttribute","addEventListener","x","event","clientX","y","clientY","top","left","textContent","log"],"sources":["C:\\Users\\daniv\\Documents\\GitHub\\PROYECTOBIO\\my-svg-map\\src\\components\\Charts.vue"],"sourcesContent":["<template>\n  <div id=\"chart\"></div>\n</template>\n\n<script>\nexport default {\n  name: \"Charts\",\n  data() {\n    return {\n      countries: [],\n    };\n  },\n  created() {\n    // Get the countries from the url\n    this.countries = this.$route.query.countries.split(\",\");\n    // console.log(this.countries);\n  },\n  getDataFromAPI() {\n      const apiUrl = `http://49.12.36.190/api/fertilizers-${selectedFertilizer.value}-year?year=${this.selectedYear}`;\n\n      axios\n        .get(apiUrl)\n        .then((response) => {\n          const data = response.data;\n          this.updateMapValues(data);\n          \n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    },\n    updateMapValues(data) {\n      const paths = document.querySelectorAll(\"path\");\n      const tooltip = document.createElement(\"div\"); // Creates the div element for the tooltip\n      tooltip.style.position = \"absolute\";\n      tooltip.style.backgroundColor = \"white\";\n      tooltip.style.border = \"1px solid gray\";\n      tooltip.style.padding = \"5px\";\n      tooltip.style.pointerEvents = \"none\";\n      tooltip.style.display = \"none\"; // Hides the tooltip by default\n      document.body.appendChild(tooltip); // Adds the tooltip to the body\n\n      paths.forEach((path) => {\n        const code = path.getAttribute(\"id\");\n        const value = data.find((item) => item.code === code)?.amount ?? 0;\n        path.setAttribute(\"amount\", value);\n\n        path.addEventListener(\"mouseover\", () => {\n          // Gets the mouse position and updates the tooltip\n          const x = event.clientX;\n          const y = event.clientY;\n          tooltip.style.top = `${y}px`;\n          tooltip.style.left = `${x}px`;\n          tooltip.style.display = \"block\"; // Shows the tooltip\n          tooltip.textContent = `${path.getAttribute(\"title\")}: ${value}`;\n        });\n\n        path.addEventListener(\"mousemove\", () => {\n          // Updates the tooltip while the mouse moves inside the \"path\"\n          const x = event.clientX;\n          const y = event.clientY;\n          tooltip.style.top = `${y}px`;\n          tooltip.style.left = `${x}px`;\n        });\n\n        path.addEventListener(\"mouseout\", () => {\n          // Hide the tooltip when the mouse leaves the \"path\" element\n          tooltip.style.display = \"none\";\n        });\n      console.log(data);\n\n      });\n    }\n};\n\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}