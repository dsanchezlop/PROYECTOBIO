{"ast":null,"code":"import * as d3 from 'd3';\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      data: [],\n      lines: []\n    };\n  },\n  mounted() {\n    axios.get('/api/regions-fertilizers').then(response => {\n      this.data = response.data;\n      this.createChart();\n    }).catch(error => console.error(error));\n  },\n  methods: {\n    createChart() {\n      const svg = d3.select('#chart').append('svg').attr('width', 600).attr('height', 400);\n      const xScale = d3.scaleTime().domain(d3.extent(this.data, d => new Date(d.date))).range([50, 550]);\n      const yScale = d3.scaleLinear().domain([0, d3.max(this.data, d => d.value)]).range([350, 50]);\n      const line = d3.line().x(d => xScale(new Date(d.date))).y(d => yScale(d.value));\n      this.lines = svg.selectAll('path').data([this.data]).enter().append('path').attr('fill', 'none').attr('stroke', 'steelblue').attr('stroke-width', 2).attr('d', line);\n    }\n  }\n};","map":{"version":3,"names":["d3","axios","data","lines","mounted","get","then","response","createChart","catch","error","console","methods","svg","select","append","attr","xScale","scaleTime","domain","extent","d","Date","date","range","yScale","scaleLinear","max","value","line","x","y","selectAll","enter"],"sources":["C:\\Users\\daniv\\Documents\\GitHub\\PROYECTOBIO\\my-svg-map\\src\\components\\Charts.vue"],"sourcesContent":["<template>\n  <div id=\"chart\"></div>\n</template>\n\n<script>\nimport * as d3 from 'd3';\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      data: [],\n      lines: [],\n    };\n  },\n\n  mounted() {\n    axios.get('/api/regions-fertilizers')\n      .then(response => {\n        this.data = response.data;\n        this.createChart();\n      })\n      .catch(error => console.error(error));\n  },\n\n  methods: {\n    createChart() {\n      const svg = d3.select('#chart')\n        .append('svg')\n        .attr('width', 600)\n        .attr('height', 400);\n\n      const xScale = d3.scaleTime()\n        .domain(d3.extent(this.data, d => new Date(d.date)))\n        .range([50, 550]);\n\n      const yScale = d3.scaleLinear()\n        .domain([0, d3.max(this.data, d => d.value)])\n        .range([350, 50]);\n\n      const line = d3.line()\n        .x(d => xScale(new Date(d.date)))\n        .y(d => yScale(d.value));\n\n      this.lines = svg.selectAll('path')\n        .data([this.data])\n        .enter()\n        .append('path')\n        .attr('fill', 'none')\n        .attr('stroke', 'steelblue')\n        .attr('stroke-width', 2)\n        .attr('d', line);\n    },\n  },\n};\n</script>"],"mappings":"AAKA,OAAO,KAAKA,EAAC,MAAO,IAAI;AACxB,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLA,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE;IACT,CAAC;EACH,CAAC;EAEDC,OAAOA,CAAA,EAAG;IACRH,KAAK,CAACI,GAAG,CAAC,0BAA0B,EACjCC,IAAI,CAACC,QAAO,IAAK;MAChB,IAAI,CAACL,IAAG,GAAIK,QAAQ,CAACL,IAAI;MACzB,IAAI,CAACM,WAAW,EAAE;IACpB,CAAC,EACAC,KAAK,CAACC,KAAI,IAAKC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EACzC,CAAC;EAEDE,OAAO,EAAE;IACPJ,WAAWA,CAAA,EAAG;MACZ,MAAMK,GAAE,GAAIb,EAAE,CAACc,MAAM,CAAC,QAAQ,EAC3BC,MAAM,CAAC,KAAK,EACZC,IAAI,CAAC,OAAO,EAAE,GAAG,EACjBA,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC;MAEtB,MAAMC,MAAK,GAAIjB,EAAE,CAACkB,SAAS,EAAC,CACzBC,MAAM,CAACnB,EAAE,CAACoB,MAAM,CAAC,IAAI,CAAClB,IAAI,EAAEmB,CAAA,IAAK,IAAIC,IAAI,CAACD,CAAC,CAACE,IAAI,CAAC,CAAC,EAClDC,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;MAEnB,MAAMC,MAAK,GAAIzB,EAAE,CAAC0B,WAAW,EAAC,CAC3BP,MAAM,CAAC,CAAC,CAAC,EAAEnB,EAAE,CAAC2B,GAAG,CAAC,IAAI,CAACzB,IAAI,EAAEmB,CAAA,IAAKA,CAAC,CAACO,KAAK,CAAC,CAAC,EAC3CJ,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;MAEnB,MAAMK,IAAG,GAAI7B,EAAE,CAAC6B,IAAI,EAAC,CAClBC,CAAC,CAACT,CAAA,IAAKJ,MAAM,CAAC,IAAIK,IAAI,CAACD,CAAC,CAACE,IAAI,CAAC,CAAC,EAC/BQ,CAAC,CAACV,CAAA,IAAKI,MAAM,CAACJ,CAAC,CAACO,KAAK,CAAC,CAAC;MAE1B,IAAI,CAACzB,KAAI,GAAIU,GAAG,CAACmB,SAAS,CAAC,MAAM,EAC9B9B,IAAI,CAAC,CAAC,IAAI,CAACA,IAAI,CAAC,EAChB+B,KAAK,EAAC,CACNlB,MAAM,CAAC,MAAM,EACbC,IAAI,CAAC,MAAM,EAAE,MAAM,EACnBA,IAAI,CAAC,QAAQ,EAAE,WAAW,EAC1BA,IAAI,CAAC,cAAc,EAAE,CAAC,EACtBA,IAAI,CAAC,GAAG,EAAEa,IAAI,CAAC;IACpB;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}