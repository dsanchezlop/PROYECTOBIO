{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-46f53af0\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Selected Countries:\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  key: 0\n};\nconst _hoisted_4 = {\n  key: 1\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"No states selected.\", -1 /* HOISTED */));\nconst _hoisted_6 = [_hoisted_5];\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  style: {\n    \"display\": \"flex\",\n    \"text-align\": \"center\",\n    \"align-items\": \"center\"\n  }\n}, [/*#__PURE__*/_createElementVNode(\"h2\", null, \"Hovered Country:\"), /*#__PURE__*/_createElementVNode(\"h3\", {\n  style: {\n    \"color\": \"black\"\n  },\n  id: \"hover-value\"\n}, \"Move your mouse\")], -1 /* HOISTED */));\nconst _hoisted_8 = {\n  ref: \"chart\"\n};\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"svg\", null, null, -1 /* HOISTED */));\nconst _hoisted_10 = [_hoisted_9];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"button\", {\n    class: \"button-zoom\",\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.zoomIn && _ctx.zoomIn(...args))\n  }, \"+\"), _createElementVNode(\"button\", {\n    class: \"button-zoom\",\n    onClick: _cache[1] || (_cache[1] = (...args) => _ctx.zoomOut && _ctx.zoomOut(...args))\n  }, \"-\"), _hoisted_1, _createElementVNode(\"button\", {\n    class: \"button-container\",\n    onClick: _cache[2] || (_cache[2] = (...args) => _ctx.clearSelection && _ctx.clearSelection(...args))\n  }, \" Clear Selection \"), _createElementVNode(\"div\", null, [_hoisted_2, _ctx.selectedStates.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.selectedStates, state => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: state.id\n    }, _toDisplayString(state.title), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_4, _hoisted_6)), _hoisted_7]), _createElementVNode(\"div\", _hoisted_8, _hoisted_10, 512 /* NEED_PATCH */)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","_hoisted_5","style","id","ref","_hoisted_9","class","onClick","_cache","args","_ctx","zoomIn","zoomOut","_hoisted_1","clearSelection","_hoisted_2","selectedStates","length","_createElementBlock","_hoisted_3","_Fragment","_renderList","state","key","title","_hoisted_4","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_10"],"sources":["/home/lasmas/GitHub/PROYECTOBIO/my-svg-map/src/components/SVGMap.vue"],"sourcesContent":["<template>\n   <button class=\"button-zoom\" @click=\"zoomIn\">+</button>\n   <button class=\"button-zoom\" @click=\"zoomOut\">-</button>\n   <br>\n   <button class=\"button-container\" @click=\"clearSelection\"> Clear Selection </button>\n\n   <div>\n      <h2>Selected Countries:</h2>\n      <div v-if=\"selectedStates.length\">\n         <ul>\n            <li v-for=\"state in selectedStates\" :key=\"state.id\">\n               {{ state.title }}\n            </li>\n         </ul>\n      </div>\n      <div v-else>\n         <p>No states selected.</p>\n      </div>\n      <div style=\"display:flex; text-align: center; align-items: center;\">\n         <h2>Hovered Country:</h2>\n         <h3 style=\"color: black\" id=\"hover-value\">Move your mouse</h3>\n      </div>\n   </div>\n   <div ref=\"chart\">\n      <svg></svg>\n   </div>\n</template>\n\n\n<script>\nimport { ref } from 'vue';\nimport * as d3 from \"d3\";\n\nconst selectedStates = { value: [] };\n\n\nexport default {\n   mounted() {\n      const svg = d3.select(this.$refs.chart)\n         .append(\"svg\")\n         .attr(\"width\", \"1009.6727\")\n         .attr(\"height\", \"665.96301\");\n\n      // Aquí es donde se carga el archivo world.svg y se agrega al SVG\n      d3.xml(require(\"@/assets/world.svg\"))\n         .then(data => {\n            const importedNode = document.importNode(data.documentElement, true);\n            svg.node().appendChild(importedNode);\n\n            // Obtener todos los elementos \"path\" del SVG\n            const paths = svg.selectAll('path');\n\n            // Asignar las funciones \"changeColorOnClick\", \"changeColorOnHover\" y \"restoreColorOnHover\" a los eventos correspondientes de cada elemento \"path\"\n            paths\n               .on('click', changeColorOnClick)\n               .on('mouseover', changeColorOnHover)\n               .on('mouseout', restoreColorOnHover);\n         })\n         .catch(error => {\n            console.error(error);\n         });\n   },\n}\n\n// Función para cambiar el color de fondo de un elemento \"path\" a verde al hacer clic en él\nfunction changeColorOnClick(event) {\n   const path = event.target;\n\n   if (path.classList.contains('selectedPath')) {\n      // si ya está seleccionado, se quita el color\n      path.style.fill = 'black';\n      path.classList.remove('selectedPath');\n      // se elimina el país de la lista de países seleccionados\n      selectedStates.value = selectedStates.value.filter(state => state.id !== path.id);\n   } else {\n      // si no está seleccionado, se agrega el color\n      path.style.fill = 'green';\n      path.classList.add('selectedPath');\n      // se agrega el país a la lista de países seleccionados\n      // selectedStates.value.push({ id: path.id, title: path.getAttribute('title') });\n      selectedStates.value = selectedStates.value.filter(state => state.id !== path.id);\n\n      console.log(selectedStates.value);\n   }\n}\n\n// Función para cambiar el color de fondo de un elemento \"path\" a púrpura al pasar el mouse por encima\nfunction changeColorOnHover(event) {\n   const path = event.target;\n   if (!path.classList.contains('selectedPath')) {\n      path.style.fill = 'purple';\n      document.getElementById(\"hover-value\").textContent = path.getAttribute('title');\n   }\n}\n\n// Función para restaurar el color de fondo de un elemento \"path\" al dejar de pasar el mouse por encima\nfunction restoreColorOnHover(event) {\n   const path = event.target;\n\n   if (!path.classList.contains('selectedPath')) {\n      path.style.fill = 'black';\n   }\n}\n\n</script>\n\n<style scoped>\n.selectedPath {\n   animation-name: slowchange;\n   animation-duration: 1.5s;\n   animation-fill-mode: forwards;\n}\n\npath:hover {\n   animation-name: hoverChange;\n   animation-duration: 1s;\n   animation-fill-mode: forwards;\n}\n\n.map-container {\n   width: 100vw;\n   /* ancho al 100% de la ventana */\n   /* height: 100vh; altura al 100% de la ventana */\n   display: flex;\n   justify-content: center;\n   /* centro horizontal */\n   align-items: center;\n   /* centro vertical */\n}\n\n.button-container {\n   position: relative;\n   z-index: 1;\n   margin-right: auto;\n   width: fit-content;\n   height: fit-content;\n}\n\n.button-zoom {\n   position: relative;\n   z-index: 1;\n   margin-right: auto;\n   width: 2%;\n   height: 2%;\n}\n\n.draggeable {\n   cursor: move;\n}\n\n.selected {\n   fill: green;\n}\n\npath {\n   fill: black;\n   transition: fill 0.5s ease-in-out;\n}\n\n.selectedPath {\n   animation-name: slowchange;\n   animation-duration: 1.5s;\n   animation-fill-mode: forwards;\n   transition: fill 0.5s ease-in-out;\n}\n\npath:hover {\n   animation-name: hoverChange;\n   animation-duration: 1s;\n   animation-fill-mode: forwards;\n   transition: fill 0.5s ease-in-out;\n}\n</style>\n"],"mappings":";;gEAGGA,mBAAA,CAAI;gEAIDA,mBAAA,CAA4B,YAAxB,qBAAmB;;;;;;;gEASpBA,mBAAA,CAA0B,WAAvB,qBAAmB;oBAAtBC,UAA0B,C;gEAE7BD,mBAAA,CAGM;EAHDE,KAA8D,EAA9D;IAAA;IAAA;IAAA;EAAA;AAA8D,I,aAChEF,mBAAA,CAAyB,YAArB,kBAAgB,G,aACpBA,mBAAA,CAA8D;EAA1DE,KAAoB,EAApB;IAAA;EAAA,CAAoB;EAACC,EAAE,EAAC;GAAc,iBAAe,E;;EAG1DC,GAAG,EAAC;AAAO;gEACbJ,mBAAA,CAAW;qBAAXK,UAAW,C;;6DAvBdL,mBAAA,CAAsD;IAA9CM,KAAK,EAAC,aAAa;IAAEC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,IAAA,CAAAC,MAAA,IAAAD,IAAA,CAAAC,MAAA,IAAAF,IAAA,CAAM;KAAE,GAAC,GAC7CT,mBAAA,CAAuD;IAA/CM,KAAK,EAAC,aAAa;IAAEC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,IAAA,CAAAE,OAAA,IAAAF,IAAA,CAAAE,OAAA,IAAAH,IAAA,CAAO;KAAE,GAAC,GAC9CI,UAAI,EACJb,mBAAA,CAAmF;IAA3EM,KAAK,EAAC,kBAAkB;IAAEC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,IAAA,CAAAI,cAAA,IAAAJ,IAAA,CAAAI,cAAA,IAAAL,IAAA,CAAc;KAAE,mBAAiB,GAE1ET,mBAAA,CAgBM,cAfHe,UAA4B,EACjBL,IAAA,CAAAM,cAAc,CAACC,MAAM,I,cAAhCC,mBAAA,CAMM,OAAAC,UAAA,GALHnB,mBAAA,CAIK,c,kBAHFkB,mBAAA,CAEKE,SAAA,QAAAC,WAAA,CAFeX,IAAA,CAAAM,cAAc,EAAvBM,KAAK;yBAAhBJ,mBAAA,CAEK;MAFgCK,GAAG,EAAED,KAAK,CAACnB;wBAC1CmB,KAAK,CAACE,KAAK;uDAIvBN,mBAAA,CAEM,OAAAO,UAAA,EAAAC,UAAA,IACNC,UAGM,C,GAET3B,mBAAA,CAEM,OAFN4B,UAEM,EAAAC,WAAA,wB"},"metadata":{},"sourceType":"module","externalDependencies":[]}