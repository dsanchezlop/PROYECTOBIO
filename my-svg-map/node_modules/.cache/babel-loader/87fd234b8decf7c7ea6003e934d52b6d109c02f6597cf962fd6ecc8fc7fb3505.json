{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-46f53af0\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"svg-map\"\n};\nconst _hoisted_2 = [\"width\", \"height\"];\nconst _hoisted_3 = [\"href\"];\nconst _hoisted_4 = [\"d\", \"fill\", \"onMouseover\", \"onMouseleave\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(), _createElementBlock(\"svg\", {\n    width: $data.width,\n    height: $data.height\n  }, [_createElementVNode(\"g\", null, [_createElementVNode(\"image\", {\n    href: $data.mapPath\n  }, null, 8 /* PROPS */, _hoisted_3), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.countries, (country, index) => {\n    return _openBlock(), _createElementBlock(\"path\", {\n      key: index,\n      d: country.path,\n      fill: country.fill,\n      onMouseover: $event => $options.handleCountryHover(index),\n      onMouseleave: $event => $options.handleCountryLeave(index)\n    }, null, 40 /* PROPS, HYDRATE_EVENTS */, _hoisted_4);\n  }), 128 /* KEYED_FRAGMENT */))])], 8 /* PROPS */, _hoisted_2))]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","width","$data","height","_createElementVNode","href","mapPath","_hoisted_3","_Fragment","_renderList","countries","country","index","key","d","path","fill","onMouseover","$event","$options","handleCountryHover","onMouseleave","handleCountryLeave"],"sources":["C:\\Users\\daniv\\Desktop\\pruebas\\prueba2\\my-svg-map\\src\\components\\SVGMap.vue"],"sourcesContent":["<template>\r\n  <div class=\"svg-map\">\r\n    <svg :width=\"width\" :height=\"height\">\r\n      <g>\r\n        <image :href=\"mapPath\" />\r\n        <path\r\n          v-for=\"(country, index) in countries\"\r\n          :key=\"index\"\r\n          :d=\"country.path\"\r\n          :fill=\"country.fill\"\r\n          @mouseover=\"handleCountryHover(index)\"\r\n          @mouseleave=\"handleCountryLeave(index)\"\r\n        />\r\n      </g>\r\n    </svg>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport mapPath from '@/assets/world.svg';\r\nimport countriesData from '@/assets/countries.json';\r\n\r\nexport default {\r\n  name: 'SVGMap',\r\n  data() {\r\n    return {\r\n      width: 1010,\r\n      height: 665.96301,\r\n      mapPath,\r\n      countries: countriesData.map((country) => ({\r\n        ...country,\r\n        fill: '#ccc'\r\n      }))\r\n    };\r\n  },\r\n  methods: {\r\n    handleCountryHover(index) {\r\n      this.countries[index].fill = 'blue';\r\n    },\r\n    handleCountryLeave(index) {\r\n      this.countries[index].fill = '#ccc';\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.svg-map {\r\n  display: block;\r\n  margin: 0 auto;\r\n  max-width: 100%;\r\n}\r\n</style>\r\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAS;;;;;uBAApBC,mBAAA,CAcM,OAdNC,UAcM,I,cAbJD,mBAAA,CAYM;IAZAE,KAAK,EAAEC,KAAA,CAAAD,KAAK;IAAGE,MAAM,EAAED,KAAA,CAAAC;MAC3BC,mBAAA,CAUI,YATFA,mBAAA,CAAyB;IAAjBC,IAAI,EAAEH,KAAA,CAAAI;EAAO,wBAAAC,UAAA,I,kBACrBR,mBAAA,CAOES,SAAA,QAAAC,WAAA,CAN2BP,KAAA,CAAAQ,SAAS,GAA5BC,OAAO,EAAEC,KAAK;yBADxBb,mBAAA,CAOE;MALCc,GAAG,EAAED,KAAK;MACVE,CAAC,EAAEH,OAAO,CAACI,IAAI;MACfC,IAAI,EAAEL,OAAO,CAACK,IAAI;MAClBC,WAAS,EAAAC,MAAA,IAAEC,QAAA,CAAAC,kBAAkB,CAACR,KAAK;MACnCS,YAAU,EAAAH,MAAA,IAAEC,QAAA,CAAAG,kBAAkB,CAACV,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}