{"ast":null,"code":"import { createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"hello\"\n}, [/*#__PURE__*/_createElementVNode(\"br\"), /*#__PURE__*/_createElementVNode(\"h1\", null, \"Contact\")], -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", null, [/*#__PURE__*/_createElementVNode(\"form\", {\n  method: \"POST\",\n  class: \"contact-form\"\n}, [/*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"name\"\n}, \"Name:\"), /*#__PURE__*/_createElementVNode(\"input\", {\n  type: \"text\",\n  id: \"name\",\n  name: \"name\",\n  required: \"\"\n}), /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"email\"\n}, \"Email:\"), /*#__PURE__*/_createElementVNode(\"input\", {\n  type: \"email\",\n  id: \"email\",\n  name: \"email\",\n  required: \"\"\n}), /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"subject\"\n}, \"Subject:\"), /*#__PURE__*/_createElementVNode(\"input\", {\n  type: \"text\",\n  id: \"subject\",\n  name: \"subject\",\n  required: \"\"\n}), /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"message\"\n}, \"Message:\"), /*#__PURE__*/_createElementVNode(\"textarea\", {\n  id: \"message\",\n  name: \"message\",\n  rows: \"5\",\n  required: \"\"\n}), /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"Send\")])], -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _hoisted_2], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","class","method","for","type","id","name","required","rows","_hoisted_1","_hoisted_2"],"sources":["C:\\Users\\daniv\\Documents\\GitHub\\PROYECTOBIO\\my-svg-map\\src\\components\\Contact.vue"],"sourcesContent":["<template>\r\n    <div class=\"hello\">\r\n      <br>\r\n      <h1>Contact</h1>\r\n    </div>\r\n    <div>\r\n      <form method=\"POST\" class=\"contact-form\">\r\n        <label for=\"name\">Name:</label>\r\n        <input type=\"text\" id=\"name\" name=\"name\" required>\r\n      \r\n        <label for=\"email\">Email:</label>\r\n        <input type=\"email\" id=\"email\" name=\"email\" required>\r\n      \r\n        <label for=\"subject\">Subject:</label>\r\n        <input type=\"text\" id=\"subject\" name=\"subject\" required>\r\n      \r\n        <label for=\"message\">Message:</label>\r\n        <textarea id=\"message\" name=\"message\" rows=\"5\" required></textarea>\r\n      \r\n        <button type=\"submit\">Send</button>\r\n      </form>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name:'Contact',\r\n  data() {\r\n    return {\r\n      name: '',\r\n      email: '',\r\n      message: ''\r\n    }\r\n  },\r\n  methods: {\r\n  submitForm() {\r\n    const payload = {\r\n      name: this.name,\r\n      email: this.email,\r\n      subject: this.subject,\r\n      message: this.message\r\n    };\r\n    axios.post('http://127.0.0.1:5000/contact', payload)\r\n      .then(response => {\r\n        console.log(response);\r\n        alert('Your message has been sent!');\r\n        this.name = '';\r\n        this.email = '';\r\n        this.subject = '';\r\n        this.message = '';\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n        alert('There was an error sending your message. Please try again later.');\r\n      });\r\n  }\r\n}\r\n\r\n}\r\n</script>\r\n\r\n  \r\n  <style>\r\n  .contact-form {\r\n    display: flex;\r\n    flex-direction: column;\r\n    max-width: 600px;\r\n    margin: 0 auto;\r\n    padding: 20px;\r\n    background-color: #f8f8f8;\r\n    border-radius: 5px;\r\n  }\r\n  \r\n  .contact-form label {\r\n    font-weight: bold;\r\n    margin-bottom: 10px;\r\n  }\r\n  \r\n  .contact-form input[type=\"text\"],\r\n  .contact-form input[type=\"email\"],\r\n  .contact-form textarea {\r\n    padding: 10px;\r\n    margin-bottom: 20px;\r\n    border: none;\r\n    border-radius: 5px;\r\n    font-size: 16px;\r\n    background-color: #fff;\r\n    box-shadow: 0 0 5px rgba(0, 0, 0, 0.1);\r\n  }\r\n  \r\n  .contact-form textarea {\r\n    height: 150px;\r\n  }\r\n  \r\n  .contact-form button[type=\"submit\"] {\r\n    background-color: #4CAF50;\r\n    color: #fff;\r\n    border: none;\r\n    border-radius: 5px;\r\n    padding: 10px;\r\n    font-size: 16px;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .contact-form button[type=\"submit\"]:hover {\r\n    background-color: #3e8e41;\r\n  }\r\n  \r\n  </style>\r\n  "],"mappings":";gCACIA,mBAAA,CAGM;EAHDC,KAAK,EAAC;AAAO,I,aAChBD,mBAAA,CAAI,O,aACJA,mBAAA,CAAgB,YAAZ,SAAO,E;gCAEbA,mBAAA,CAgBM,c,aAfJA,mBAAA,CAcO;EAdDE,MAAM,EAAC,MAAM;EAACD,KAAK,EAAC;iBACxBD,mBAAA,CAA+B;EAAxBG,GAAG,EAAC;AAAM,GAAC,OAAK,G,aACvBH,mBAAA,CAAkD;EAA3CI,IAAI,EAAC,MAAM;EAACC,EAAE,EAAC,MAAM;EAACC,IAAI,EAAC,MAAM;EAACC,QAAQ,EAAR;iBAEzCP,mBAAA,CAAiC;EAA1BG,GAAG,EAAC;AAAO,GAAC,QAAM,G,aACzBH,mBAAA,CAAqD;EAA9CI,IAAI,EAAC,OAAO;EAACC,EAAE,EAAC,OAAO;EAACC,IAAI,EAAC,OAAO;EAACC,QAAQ,EAAR;iBAE5CP,mBAAA,CAAqC;EAA9BG,GAAG,EAAC;AAAS,GAAC,UAAQ,G,aAC7BH,mBAAA,CAAwD;EAAjDI,IAAI,EAAC,MAAM;EAACC,EAAE,EAAC,SAAS;EAACC,IAAI,EAAC,SAAS;EAACC,QAAQ,EAAR;iBAE/CP,mBAAA,CAAqC;EAA9BG,GAAG,EAAC;AAAS,GAAC,UAAQ,G,aAC7BH,mBAAA,CAAmE;EAAzDK,EAAE,EAAC,SAAS;EAACC,IAAI,EAAC,SAAS;EAACE,IAAI,EAAC,GAAG;EAACD,QAAQ,EAAR;iBAE/CP,mBAAA,CAAmC;EAA3BI,IAAI,EAAC;AAAQ,GAAC,MAAI,E;;;6DAlB9BK,UAGM,EACNC,UAgBM,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}