{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"chart\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1);\n}","map":{"version":3,"names":["id","_createElementBlock","_hoisted_1"],"sources":["C:\\Users\\daniv\\Documents\\GitHub\\PROYECTOBIO\\my-svg-map\\src\\components\\Charts.vue"],"sourcesContent":["<template>\n  <div id=\"chart\"></div>\n</template>\n\n<script>\nimport * as d3 from 'd3';\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      data: [],\n      lines: [],\n    };\n  },\n\n  mounted() {\n    axios.get('https://api.example.com/data')\n      .then(response => {\n        this.data = response.data;\n        this.createChart();\n      })\n      .catch(error => console.error(error));\n  },\n\n  methods: {\n    createChart() {\n      const svg = d3.select('#chart')\n        .append('svg')\n        .attr('width', 600)\n        .attr('height', 400);\n\n      const xScale = d3.scaleTime()\n        .domain(d3.extent(this.data, d => new Date(d.date)))\n        .range([50, 550]);\n\n      const yScale = d3.scaleLinear()\n        .domain([0, d3.max(this.data, d => d.value)])\n        .range([350, 50]);\n\n      const line = d3.line()\n        .x(d => xScale(new Date(d.date)))\n        .y(d => yScale(d.value));\n\n      this.lines = svg.selectAll('path')\n        .data([this.data])\n        .enter()\n        .append('path')\n        .attr('fill', 'none')\n        .attr('stroke', 'steelblue')\n        .attr('stroke-width', 2)\n        .attr('d', line);\n    },\n  },\n};\n</script>"],"mappings":";;EACOA,EAAE,EAAC;AAAO;;uBAAfC,mBAAA,CAAsB,OAAtBC,UAAsB"},"metadata":{},"sourceType":"module","externalDependencies":[]}