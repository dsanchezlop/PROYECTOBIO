{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport * as d3 from \"d3\";\nconst hoverValue = ref(\"Mouse your mouse\");\nconst selectedStates = ref([]);\n// const zoomLevel = ref(1);\n// const dragInfo = ref(null);\n\nexport default {\n  mounted() {\n    const svg = d3.select(this.$refs.chart).append(\"svg\").attr(\"width\", \"1009.6727\").attr(\"height\", \"665.96301\");\n\n    // Aquí es donde se carga el archivo world.svg y se agrega al SVG\n    d3.xml(require(\"@/assets/world.svg\")).then(data => {\n      const importedNode = document.importNode(data.documentElement, true);\n      svg.node().appendChild(importedNode);\n\n      // Obtener todos los elementos \"path\" del SVG\n      const paths = svg.selectAll('path');\n\n      // Asignar la función \"changeColorOnClick\" al evento \"click\" de cada elemento \"path\"\n      paths.on('click', changeColorOnClick);\n\n      // Agregar oyente de eventos de mouseover a cada elemento \"path\"\n      paths.on('mouseover', function () {\n        hoverValue.value = this.getAttribute('title');\n      });\n\n      // Agregar oyente de eventos de mouseout para limpiar el valor de hoverValue cuando el mouse sale del elemento \"path\"\n      paths.on('mouseout', function () {\n        hoverValue.value = 'Move your mouse';\n      });\n    }).catch(error => {\n      console.error(error);\n    });\n  }\n};\n// Función para cambiar el color de fondo de un elemento \"path\" a verde al hacer clic en él\nfunction changeColorOnClick(event) {\n  const path = event.target;\n  if (path.classList.contains('selectedPath')) {\n    // si ya está seleccionado, se quita el color\n    path.style.fill = 'black';\n    path.classList.remove('selectedPath');\n    // se elimina el país de la lista de países seleccionados\n    selectedStates.value = selectedStates.value.filter(state => state.id !== path.id);\n  } else {\n    // si no está seleccionado, se agrega el color\n    path.style.fill = 'green';\n    path.classList.add('selectedPath');\n    // se agrega el país a la lista de países seleccionados\n    selectedStates.value.push({\n      id: path.id,\n      title: path.getAttribute('title')\n    });\n  }\n}","map":{"version":3,"names":["ref","d3","hoverValue","selectedStates","mounted","svg","select","$refs","chart","append","attr","xml","require","then","data","importedNode","document","importNode","documentElement","node","appendChild","paths","selectAll","on","changeColorOnClick","value","getAttribute","catch","error","console","event","path","target","classList","contains","style","fill","remove","filter","state","id","add","push","title"],"sources":["/home/lasmas/GitHub/PROYECTOBIO/my-svg-map/src/components/SVGMap.vue"],"sourcesContent":["<template>\n   <button class=\"button-zoom\" @click=\"zoomIn\">+</button>\n   <button class=\"button-zoom\" @click=\"zoomOut\">-</button>\n   <br>\n   <button class=\"button-container\" @click=\"clearSelection\"> Clear Selection </button>\n\n   <div>\n      <h2> Selected Countries :</h2>\n      <div style=\"display:inline\">\n         <h4 style=\"display:inline; margin:10px;\" v-for=\"state in selectedStates\" :key=\"state.id\"> {{ state.id }} :\n            {{ state.title }} </h4>\n      </div>\n      <div style=\"display:flex; text-align: center; align-items: center;\">\n  <h2>Hovered Country:</h2>\n  <h3 style=\"color: black\"> {{ hoverValue }}</h3>\n</div>\n   </div>\n   <div ref=\"chart\">\n      <svg></svg>\n   </div>\n</template>\n\n<script>\nimport { ref } from 'vue';\nimport * as d3 from \"d3\";\n\nconst hoverValue = ref(\"Mouse your mouse\");\nconst selectedStates = ref([]);\n// const zoomLevel = ref(1);\n// const dragInfo = ref(null);\n\nexport default {\n   mounted() {\n  const svg = d3.select(this.$refs.chart)\n    .append(\"svg\")\n    .attr(\"width\", \"1009.6727\")\n    .attr(\"height\", \"665.96301\");\n\n  // Aquí es donde se carga el archivo world.svg y se agrega al SVG\n  d3.xml(require(\"@/assets/world.svg\"))\n    .then(data => {\n      const importedNode = document.importNode(data.documentElement, true);\n      svg.node().appendChild(importedNode);\n\n      // Obtener todos los elementos \"path\" del SVG\n      const paths = svg.selectAll('path');\n\n      // Asignar la función \"changeColorOnClick\" al evento \"click\" de cada elemento \"path\"\n      paths.on('click', changeColorOnClick);\n\n      // Agregar oyente de eventos de mouseover a cada elemento \"path\"\n      paths.on('mouseover', function() {\n        hoverValue.value = this.getAttribute('title');\n      });\n\n      // Agregar oyente de eventos de mouseout para limpiar el valor de hoverValue cuando el mouse sale del elemento \"path\"\n      paths.on('mouseout', function() {\n        hoverValue.value = 'Move your mouse';\n      });\n    })\n    .catch(error => {\n      console.error(error);\n    })\n   }};\n// Función para cambiar el color de fondo de un elemento \"path\" a verde al hacer clic en él\nfunction changeColorOnClick(event) {\n  const path = event.target;\n\n  if (path.classList.contains('selectedPath')) {\n    // si ya está seleccionado, se quita el color\n    path.style.fill = 'black';\n    path.classList.remove('selectedPath');\n    // se elimina el país de la lista de países seleccionados\n    selectedStates.value = selectedStates.value.filter(state => state.id !== path.id);\n  } else {\n    // si no está seleccionado, se agrega el color\n    path.style.fill = 'green';\n    path.classList.add('selectedPath');\n    // se agrega el país a la lista de países seleccionados\n    selectedStates.value.push({id: path.id, title: path.getAttribute('title')});\n  }\n}\n</script>\n\n<style scoped>\n@keyframes slowchange {\n   to {\n      fill: indianred;\n   }\n}\n\n@keyframes hoverChange {\n   to {\n      fill: purple;\n   }\n}\n\npath {\n   fill: black;\n}\n\n.selectedPath {\n   animation-name: slowchange;\n   animation-duration: 1.5s;\n   animation-fill-mode: forwards;\n}\n\npath:hover {\n   animation-name: hoverChange;\n   animation-duration: 1s;\n   animation-fill-mode: forwards;\n}\n\n.logo {\n   height: 6em;\n   padding: 1.5em;\n   will-change: filter;\n}\n\n.logo:hover {\n   filter: drop-shadow(0 0 2em #646cffaa);\n}\n\n.logo.vue:hover {\n   filter: drop-shadow(0 0 2em #42b883aa);\n}\n\n.map-container {\n   width: 100vw;\n   /* ancho al 100% de la ventana */\n   /* height: 100vh; altura al 100% de la ventana */\n   display: flex;\n   justify-content: center;\n   /* centro horizontal */\n   align-items: center;\n   /* centro vertical */\n}\n\n.button-container {\n   position: relative;\n   z-index: 1;\n   margin-right: auto;\n   width: fit-content;\n   height: fit-content;\n}\n\n.button-zoom {\n   position: relative;\n   z-index: 1;\n   margin-right: auto;\n   width: 2%;\n   height: 2%;\n}\n\n.draggeable {\n   cursor: move;\n}\n.selected {\n  fill: green;\n}\n\npath {\n   fill: black;\n   transition: fill 0.5s ease-in-out;\n}\n\n.selectedPath {\n   animation-name: slowchange;\n   animation-duration: 1.5s;\n   animation-fill-mode: forwards;\n   transition: fill 0.5s ease-in-out;\n}\n\npath:hover {\n   animation-name: hoverChange;\n   animation-duration: 1s;\n   animation-fill-mode: forwards;\n   transition: fill 0.5s ease-in-out;\n}\n</style>\n"],"mappings":";AAuBA,SAASA,GAAE,QAAS,KAAK;AACzB,OAAO,KAAKC,EAAC,MAAO,IAAI;AAExB,MAAMC,UAAS,GAAIF,GAAG,CAAC,kBAAkB,CAAC;AAC1C,MAAMG,cAAa,GAAIH,GAAG,CAAC,EAAE,CAAC;AAC9B;AACA;;AAEA,eAAe;EACZI,OAAOA,CAAA,EAAG;IACX,MAAMC,GAAE,GAAIJ,EAAE,CAACK,MAAM,CAAC,IAAI,CAACC,KAAK,CAACC,KAAK,EACnCC,MAAM,CAAC,KAAK,EACZC,IAAI,CAAC,OAAO,EAAE,WAAW,EACzBA,IAAI,CAAC,QAAQ,EAAE,WAAW,CAAC;;IAE9B;IACAT,EAAE,CAACU,GAAG,CAACC,OAAO,CAAC,oBAAoB,CAAC,EACjCC,IAAI,CAACC,IAAG,IAAK;MACZ,MAAMC,YAAW,GAAIC,QAAQ,CAACC,UAAU,CAACH,IAAI,CAACI,eAAe,EAAE,IAAI,CAAC;MACpEb,GAAG,CAACc,IAAI,EAAE,CAACC,WAAW,CAACL,YAAY,CAAC;;MAEpC;MACA,MAAMM,KAAI,GAAIhB,GAAG,CAACiB,SAAS,CAAC,MAAM,CAAC;;MAEnC;MACAD,KAAK,CAACE,EAAE,CAAC,OAAO,EAAEC,kBAAkB,CAAC;;MAErC;MACAH,KAAK,CAACE,EAAE,CAAC,WAAW,EAAE,YAAW;QAC/BrB,UAAU,CAACuB,KAAI,GAAI,IAAI,CAACC,YAAY,CAAC,OAAO,CAAC;MAC/C,CAAC,CAAC;;MAEF;MACAL,KAAK,CAACE,EAAE,CAAC,UAAU,EAAE,YAAW;QAC9BrB,UAAU,CAACuB,KAAI,GAAI,iBAAiB;MACtC,CAAC,CAAC;IACJ,CAAC,EACAE,KAAK,CAACC,KAAI,IAAK;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC;EACF;AAAC,CAAC;AACL;AACA,SAASJ,kBAAkBA,CAACM,KAAK,EAAE;EACjC,MAAMC,IAAG,GAAID,KAAK,CAACE,MAAM;EAEzB,IAAID,IAAI,CAACE,SAAS,CAACC,QAAQ,CAAC,cAAc,CAAC,EAAE;IAC3C;IACAH,IAAI,CAACI,KAAK,CAACC,IAAG,GAAI,OAAO;IACzBL,IAAI,CAACE,SAAS,CAACI,MAAM,CAAC,cAAc,CAAC;IACrC;IACAlC,cAAc,CAACsB,KAAI,GAAItB,cAAc,CAACsB,KAAK,CAACa,MAAM,CAACC,KAAI,IAAKA,KAAK,CAACC,EAAC,KAAMT,IAAI,CAACS,EAAE,CAAC;EACnF,OAAO;IACL;IACAT,IAAI,CAACI,KAAK,CAACC,IAAG,GAAI,OAAO;IACzBL,IAAI,CAACE,SAAS,CAACQ,GAAG,CAAC,cAAc,CAAC;IAClC;IACAtC,cAAc,CAACsB,KAAK,CAACiB,IAAI,CAAC;MAACF,EAAE,EAAET,IAAI,CAACS,EAAE;MAAEG,KAAK,EAAEZ,IAAI,CAACL,YAAY,CAAC,OAAO;IAAC,CAAC,CAAC;EAC7E;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}