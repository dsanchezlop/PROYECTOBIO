{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Register\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"username\"\n}, \"Username: \", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"password\"\n}, \"Password: \", -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"name\"\n}, \"Name: \", -1 /* HOISTED */);\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"surname\"\n}, \"Surname: \", -1 /* HOISTED */);\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"email\"\n}, \"Email: \", -1 /* HOISTED */);\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"Register\", -1 /* HOISTED */);\nconst _hoisted_8 = {\n  key: 0,\n  class: \"error\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"form\", {\n    onSubmit: _cache[5] || (_cache[5] = _withModifiers((...args) => $options.registerUser && $options.registerUser(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", null, [_hoisted_2, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"username\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.username = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.username]])]), _createElementVNode(\"div\", null, [_hoisted_3, _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    id: \"password\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.password = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.password]])]), _createElementVNode(\"div\", null, [_hoisted_4, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"name\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.name = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.name]])]), _createElementVNode(\"div\", null, [_hoisted_5, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"surname\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.surname = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.surname]])]), _createElementVNode(\"div\", null, [_hoisted_6, _withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    id: \"email\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.email = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.email]])]), _hoisted_7], 32 /* HYDRATE_EVENTS */), $data.error ? (_openBlock(), _createElementBlock(\"p\", _hoisted_8, _toDisplayString($data.error), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["_createElementVNode","for","type","class","_createElementBlock","_hoisted_1","onSubmit","_cache","_withModifiers","args","$options","registerUser","_hoisted_2","id","$data","username","$event","required","_hoisted_3","password","_hoisted_4","name","_hoisted_5","surname","_hoisted_6","email","_hoisted_7","error","_hoisted_8","_toDisplayString"],"sources":["C:\\Users\\daniv\\Documents\\GitHub\\PROYECTOBIO\\my-svg-map\\src\\components\\Register.vue"],"sourcesContent":["<template>\n    <div>\n      <h1>Register</h1>\n      <form @submit.prevent=\"registerUser\">\n        <div>\n          <label for=\"username\">Username: </label>\n          <input type=\"text\" id=\"username\" v-model=\"username\" required>\n        </div>\n        <div>\n          <label for=\"password\">Password: </label>\n          <input type=\"password\" id=\"password\" v-model=\"password\" required>\n        </div>\n        <div>\n          <label for=\"name\">Name: </label>\n          <input type=\"text\" id=\"name\" v-model=\"name\" required>\n        </div>\n        <div>\n          <label for=\"surname\">Surname: </label>\n          <input type=\"text\" id=\"surname\" v-model=\"surname\" required>\n        </div>\n        <div>\n          <label for=\"email\">Email: </label>\n          <input type=\"email\" id=\"email\" v-model=\"email\" required>\n        </div>\n        <button type=\"submit\">Register</button>\n      </form>\n      <p v-if=\"error\" class=\"error\">{{ error }}</p>\n    </div>\n  </template>\n\n  <script>\n  import axios from 'axios';\n\n  export default {\n    data() {\n      return {\n        username: '',\n        password: '',\n        name: '',\n        surname: '',\n        email: '',\n        error: '',\n      };\n    },\n    methods: {\n      // Name checks\n      registerUser() {\n        if (!/^[a-zA-Z\\s]+$/.test(this.name)) {\n        this.error = 'Name must not contain numbers';\n        return;\n      }\n\n      if (!/^[a-zA-Z\\s]+$/.test(this.surname)) {\n        this.error = 'Surname must not contain numbers';\n        return;\n      }\n        // API POST Calling\n        axios.post('/register', {\n          username: this.username,\n          password: this.password,\n          name: this.name,\n          surname: this.surname,\n          email: this.email,\n        })\n          .then(response => {\n            console.log(response);\n            this.$router.push('/login');\n          })\n          .catch(error => {\n            console.log(error);\n            this.error = error.response.data.error;\n          });\n      },\n    },\n  };\n  </script>\n\n<style>\nform {\n  display: flex;\n  flex-direction: column;\n  max-width: 600px;\n  margin: 0 auto;\n  padding: 20px;\n  background-color: #f8f8f8;\n  border-radius: 5px;\n}\n\nform label {\n  font-weight: bold;\n  margin-bottom: 10px;\n}\n\nform input[type=\"text\"],\nform input[type=\"email\"],\nform input[type=\"password\"],\nform textarea {\n  padding: 10px;\n  margin-bottom: 20px;\n  border: none;\n  border-radius: 5px;\n  font-size: 16px;\n  background-color: #fff;\n  box-shadow: 0 0 5px rgba(0, 0, 0, 0.1);\n  width: fill;\n}\n\nform textarea {\n  height: 150px;\n}\n\nform button[type=\"submit\"] {\n  background-color: #4CAF50;\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n  padding: 10px;\n  font-size: 16px;\n  cursor: pointer;\n}\n\nform button[type=\"submit\"]:hover {\n  background-color: #3e8e41;\n}\n</style>"],"mappings":";gCAEMA,mBAAA,CAAiB,YAAb,UAAQ;gCAGRA,mBAAA,CAAwC;EAAjCC,GAAG,EAAC;AAAU,GAAC,YAAU;gCAIhCD,mBAAA,CAAwC;EAAjCC,GAAG,EAAC;AAAU,GAAC,YAAU;gCAIhCD,mBAAA,CAAgC;EAAzBC,GAAG,EAAC;AAAM,GAAC,QAAM;gCAIxBD,mBAAA,CAAsC;EAA/BC,GAAG,EAAC;AAAS,GAAC,WAAS;gCAI9BD,mBAAA,CAAkC;EAA3BC,GAAG,EAAC;AAAO,GAAC,SAAO;gCAG5BD,mBAAA,CAAuC;EAA/BE,IAAI,EAAC;AAAQ,GAAC,UAAQ;;;EAEhBC,KAAK,EAAC;;;uBAzBxBC,mBAAA,CA0BM,cAzBJC,UAAiB,EACjBL,mBAAA,CAsBO;IAtBAM,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAAAC,cAAA,KAAAC,IAAA,KAAUC,QAAA,CAAAC,YAAA,IAAAD,QAAA,CAAAC,YAAA,IAAAF,IAAA,CAAY;MACjCT,mBAAA,CAGM,cAFJY,UAAwC,E,gBACxCZ,mBAAA,CAA6D;IAAtDE,IAAI,EAAC,MAAM;IAACW,EAAE,EAAC,UAAU;+DAAUC,KAAA,CAAAC,QAAQ,GAAAC,MAAA;IAAEC,QAAQ,EAAR;iDAAVH,KAAA,CAAAC,QAAQ,E,KAEpDf,mBAAA,CAGM,cAFJkB,UAAwC,E,gBACxClB,mBAAA,CAAiE;IAA1DE,IAAI,EAAC,UAAU;IAACW,EAAE,EAAC,UAAU;+DAAUC,KAAA,CAAAK,QAAQ,GAAAH,MAAA;IAAEC,QAAQ,EAAR;iDAAVH,KAAA,CAAAK,QAAQ,E,KAExDnB,mBAAA,CAGM,cAFJoB,UAAgC,E,gBAChCpB,mBAAA,CAAqD;IAA9CE,IAAI,EAAC,MAAM;IAACW,EAAE,EAAC,MAAM;+DAAUC,KAAA,CAAAO,IAAI,GAAAL,MAAA;IAAEC,QAAQ,EAAR;iDAANH,KAAA,CAAAO,IAAI,E,KAE5CrB,mBAAA,CAGM,cAFJsB,UAAsC,E,gBACtCtB,mBAAA,CAA2D;IAApDE,IAAI,EAAC,MAAM;IAACW,EAAE,EAAC,SAAS;+DAAUC,KAAA,CAAAS,OAAO,GAAAP,MAAA;IAAEC,QAAQ,EAAR;iDAATH,KAAA,CAAAS,OAAO,E,KAElDvB,mBAAA,CAGM,cAFJwB,UAAkC,E,gBAClCxB,mBAAA,CAAwD;IAAjDE,IAAI,EAAC,OAAO;IAACW,EAAE,EAAC,OAAO;+DAAUC,KAAA,CAAAW,KAAK,GAAAT,MAAA;IAAEC,QAAQ,EAAR;iDAAPH,KAAA,CAAAW,KAAK,E,KAE/CC,UAAuC,C,4BAEhCZ,KAAA,CAAAa,KAAK,I,cAAdvB,mBAAA,CAA6C,KAA7CwB,UAA6C,EAAAC,gBAAA,CAAZf,KAAA,CAAAa,KAAK,oB"},"metadata":{},"sourceType":"module","externalDependencies":[]}