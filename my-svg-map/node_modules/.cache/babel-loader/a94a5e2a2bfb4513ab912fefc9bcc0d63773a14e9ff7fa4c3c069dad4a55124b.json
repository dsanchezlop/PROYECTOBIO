{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, normalizeStyle as _normalizeStyle, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-46f53af0\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \" Selected Countries :\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  style: {\n    \"display\": \"inline\"\n  }\n};\nconst _hoisted_4 = {\n  style: {\n    \"display\": \"flex\",\n    \"text-align\": \"center\",\n    \"align-items\": \"center\"\n  }\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Hovered Country:\", -1 /* HOISTED */));\nconst _hoisted_6 = {\n  style: {\n    \"color\": \"black\"\n  }\n};\nconst _hoisted_7 = {\n  ref: \"chart\"\n};\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"button\", {\n    class: \"button-zoom\",\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.zoomIn && _ctx.zoomIn(...args))\n  }, \"+\"), _createElementVNode(\"button\", {\n    class: \"button-zoom\",\n    onClick: _cache[1] || (_cache[1] = (...args) => _ctx.zoomOut && _ctx.zoomOut(...args))\n  }, \"-\"), _hoisted_1, _createElementVNode(\"button\", {\n    class: \"button-container\",\n    onClick: _cache[2] || (_cache[2] = (...args) => _ctx.clearSelection && _ctx.clearSelection(...args))\n  }, \" Clear Selection \"), _createElementVNode(\"div\", null, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.selectedStates, state => {\n    return _openBlock(), _createElementBlock(\"h4\", {\n      style: {\n        \"display\": \"inline\",\n        \"margin\": \"10px\"\n      },\n      key: state.id\n    }, _toDisplayString(state.id) + \" : \" + _toDisplayString(state.title), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"div\", _hoisted_4, [_hoisted_5, _createElementVNode(\"h3\", _hoisted_6, _toDisplayString(_ctx.hoverValue), 1 /* TEXT */)])]), _createElementVNode(\"div\", _hoisted_7, [_createCommentVNode(\" intentar que los path sean devuelto por la API \"), (_openBlock(), _createElementBlock(\"svg\", {\n    style: _normalizeStyle({\n      transform: `scale(${_ctx.zoomLevel})`\n    }),\n    onMouseover: _cache[3] || (_cache[3] = (...args) => _ctx.changeHoverValue && _ctx.changeHoverValue(...args)),\n    onClick: _cache[4] || (_cache[4] = (...args) => _ctx.setSelectedPath && _ctx.setSelectedPath(...args))\n  }, null, 36 /* STYLE, HYDRATE_EVENTS */))], 512 /* NEED_PATCH */)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","style","ref","class","onClick","_cache","args","_ctx","zoomIn","zoomOut","_hoisted_1","clearSelection","_hoisted_2","_hoisted_3","_createElementBlock","_Fragment","_renderList","selectedStates","state","key","id","_toDisplayString","title","_hoisted_4","_hoisted_5","_hoisted_6","hoverValue","_hoisted_7","_createCommentVNode","_normalizeStyle","transform","zoomLevel","onMouseover","changeHoverValue","setSelectedPath"],"sources":["/home/lasmas/GitHub/PROYECTOBIO/my-svg-map/src/components/SVGMap.vue"],"sourcesContent":["<template>\n   <button class=\"button-zoom\" @click=\"zoomIn\">+</button>\n   <button class=\"button-zoom\" @click=\"zoomOut\">-</button>\n   <br>\n   <button class=\"button-container\" @click=\"clearSelection\"> Clear Selection </button>\n\n   <div>\n      <h2> Selected Countries :</h2>\n      <div style=\"display:inline\">\n         <h4 style=\"display:inline; margin:10px;\" v-for=\"state in selectedStates\" :key=\"state.id\"> {{ state.id }} :\n            {{ state.title }} </h4>\n      </div>\n      <div style=\"display:flex; text-align: center; align-items: center;\">\n         <h2>Hovered Country:</h2>\n         <h3 style=\"color: black\"> {{ hoverValue }} </h3>\n      </div>\n   </div>\n   <div ref=\"chart\">\n\n   \n      \n      <!-- intentar que los path sean devuelto por la API -->\n      <svg\n        :style=\"{ transform: `scale(${zoomLevel})` }\" @mouseover=\"changeHoverValue\" @click=\"setSelectedPath\"\n        >\n         \n      </svg>\n\n\n   </div>\n</template>\n\n<script>\nimport { ref } from 'vue';\nimport SVG from 'svg.js';\nimport * as d3 from \"d3\";\n\nconst hoverValue = ref(\"Mouse your mouse\");\nconst selectedStates = ref([]);\nconst zoomLevel = ref(1);\nconst dragInfo = ref(null);\n\n\nfunction clearSelection() {\n   // Vaciar el array de países seleccionados\n   selectedStates.value.splice(0);\n\n   // Deseleccionar todos los elementos del DOM que tengan la clase \"selectedPath\"\n   const selectedPaths = document.querySelectorAll(\".selectedPath\");\n   selectedPaths.forEach(element => {\n      element.classList.remove(\"selectedPath\");\n   });\n}\n\n//Adds to the path array a\nfunction setSelectedPath(hvalue) {\n   if (hvalue.target.attributes[\"title\"]) {\n      if (hvalue != null && hvalue.target != null) {\n         // Verificar si el valor ya está seleccionado\n         const title = hvalue.target.attributes[\"title\"].value;\n         const id = hvalue.target.attributes[\"id\"].value;\n         const isSelected = selectedStates.value.some(item => item.id === id);\n\n         if (isSelected) {\n            // Si el valor ya está seleccionado, eliminarlo del array y eliminar la clase\n            selectedStates.value = selectedStates.value.filter(item => item.id !== id);\n            hvalue.target.classList.remove(\"selectedPath\");\n         } else {\n            // Si el valor no está seleccionado, agregarlo al array y agregar la clase\n            selectedStates.value.push({ id, title });\n            hvalue.target.classList.add(\"selectedPath\");\n         }\n      }\n   }\n}\n\n\nfunction changeHoverValue(hvalue) {\n   if (hvalue != null && hvalue.target != null) {\n      let title = hvalue.target.attributes[\"title\"];\n      if (title != null) {\n         hoverValue.value = title.value;\n      }\n   }\n}\n\nfunction zoomIn() {\n   zoomLevel.value /= 0.90;\n}\n\nfunction zoomOut() {\n   if (zoomLevel.value <= 0.6) {\n\n   }\n   else {\n      zoomLevel.value *= 0.90;\n   }\n}\n\nfunction getMousePosition(evt) {\n   var CTM = svg.getScreenCTM();\n   return {\n      x: (evt.clientX - CTM.e) / CTM.a,\n      y: (evt.clientY - CTM.f) / CTM.d\n   };\n}\n\n// function startDrag(evt) {\n//   // store the initial mouse position and map position\n//   dragInfo.value = {\n//     x: evt.clientX,\n//     y: evt.clientY,\n//     mapX: parseFloat($refs.svgMap.style.left) || 0,\n//     mapY: parseFloat($refs.svgMap.style.top) || 0,\n//   };\n//   // set cursor to grabbing\n//   evt.target.style.cursor = 'grabbing';\n// }\n\n// function drag(evt) {\n//   if (dragInfo.value) {\n//     // calculate the offset between the current mouse position and the initial mouse position\n//     const dx = evt.clientX - dragInfo.value.x;\n//     const dy = evt.clientY - dragInfo.value.y;\n//     // set the new map position based on the offset\n//     $refs.svgMap.style.left = `${dragInfo.value.mapX + dx}px`;\n//     $refs.svgMap.style.top = `${dragInfo.value.mapY + dy}px`;\n//   }\n// }\n\n// function endDrag(evt) {\n//   dragInfo.value = null;\n//   evt.target.style.cursor = 'grab';\n// }\n\n \nexport default {\n  mounted() {\n    const svg = d3.select(this.$refs.chart)\n      .append(\"svg\")\n      .attr(\"width\", \"1009.6727\")\n      .attr(\"height\", \"665.96301\");\n\n    // Aquí es donde se carga el archivo world.svg y se agrega al SVG\n    d3.xml(require(\"@/assets/world.svg\"))\n      .then(data => {\n        const importedNode = document.importNode(data.documentElement, true);\n        svg.node().appendChild(importedNode);\n\n        // Llamar a la función para hacer los países clicables\n        this.makeCountriesClickable(svg);\n      })\n      .catch(error => {\n        console.error(error);\n      });\n   };\n\n</script>\n\n<style scoped>\n@keyframes slowchange {\n   to {\n      fill: indianred;\n   }\n}\n\n@keyframes hoverChange {\n   to {\n      fill: purple;\n   }\n}\n\npath {\n   fill: black;\n}\n\n.selectedPath {\n   animation-name: slowchange;\n   animation-duration: 1.5s;\n   animation-fill-mode: forwards;\n}\n\npath:hover {\n   animation-name: hoverChange;\n   animation-duration: 1s;\n   animation-fill-mode: forwards;\n}\n\n.logo {\n   height: 6em;\n   padding: 1.5em;\n   will-change: filter;\n}\n\n.logo:hover {\n   filter: drop-shadow(0 0 2em #646cffaa);\n}\n\n.logo.vue:hover {\n   filter: drop-shadow(0 0 2em #42b883aa);\n}\n\n.map-container {\n   width: 100vw;\n   /* ancho al 100% de la ventana */\n   /* height: 100vh; altura al 100% de la ventana */\n   display: flex;\n   justify-content: center;\n   /* centro horizontal */\n   align-items: center;\n   /* centro vertical */\n}\n\n.button-container {\n   position: relative;\n   z-index: 1;\n   margin-right: auto;\n   width: fit-content;\n   height: fit-content;\n}\n\n.button-zoom {\n   position: relative;\n   z-index: 1;\n   margin-right: auto;\n   width: 2%;\n   height: 2%;\n}\n\n.draggeable {\n   cursor: move;\n}\n</style>\n"],"mappings":";;gEAGGA,mBAAA,CAAI;gEAIDA,mBAAA,CAA8B,YAA1B,uBAAqB;;EACpBC,KAAsB,EAAtB;IAAA;EAAA;AAAsB;;EAItBA,KAA8D,EAA9D;IAAA;IAAA;IAAA;EAAA;AAA8D;gEAChED,mBAAA,CAAyB,YAArB,kBAAgB;;EAChBC,KAAoB,EAApB;IAAA;EAAA;AAAoB;;EAGzBC,GAAG,EAAC;AAAO;;6DAhBhBF,mBAAA,CAAsD;IAA9CG,KAAK,EAAC,aAAa;IAAEC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,IAAA,CAAAC,MAAA,IAAAD,IAAA,CAAAC,MAAA,IAAAF,IAAA,CAAM;KAAE,GAAC,GAC7CN,mBAAA,CAAuD;IAA/CG,KAAK,EAAC,aAAa;IAAEC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,IAAA,CAAAE,OAAA,IAAAF,IAAA,CAAAE,OAAA,IAAAH,IAAA,CAAO;KAAE,GAAC,GAC9CI,UAAI,EACJV,mBAAA,CAAmF;IAA3EG,KAAK,EAAC,kBAAkB;IAAEC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,IAAA,CAAAI,cAAA,IAAAJ,IAAA,CAAAI,cAAA,IAAAL,IAAA,CAAc;KAAE,mBAAiB,GAE1EN,mBAAA,CAUM,cATHY,UAA8B,EAC9BZ,mBAAA,CAGM,OAHNa,UAGM,I,kBAFHC,mBAAA,CAC0BC,SAAA,QAAAC,WAAA,CAD+BT,IAAA,CAAAU,cAAc,EAAvBC,KAAK;yBAArDJ,mBAAA,CAC0B;MADtBb,KAAoC,EAApC;QAAA;QAAA;MAAA,CAAoC;MAAkCkB,GAAG,EAAED,KAAK,CAACE;wBAAQF,KAAK,CAACE,EAAE,IAAG,KACrG,GAAAC,gBAAA,CAAGH,KAAK,CAACI,KAAK;oCAEpBtB,mBAAA,CAGM,OAHNuB,UAGM,GAFHC,UAAyB,EACzBxB,mBAAA,CAAgD,MAAhDyB,UAAgD,EAAAJ,gBAAA,CAAnBd,IAAA,CAAAmB,UAAU,iB,KAG7C1B,mBAAA,CAYM,OAZN2B,UAYM,GARHC,mBAAA,oDAAuD,G,cACvDd,mBAAA,CAIM;IAHHb,KAAK,EAAA4B,eAAA;MAAAC,SAAA,WAAwBvB,IAAA,CAAAwB,SAAS;IAAA;IAAQC,WAAS,EAAA3B,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,IAAA,CAAA0B,gBAAA,IAAA1B,IAAA,CAAA0B,gBAAA,IAAA3B,IAAA,CAAgB;IAAGF,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,IAAA,CAAA2B,eAAA,IAAA3B,IAAA,CAAA2B,eAAA,IAAA5B,IAAA,CAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}