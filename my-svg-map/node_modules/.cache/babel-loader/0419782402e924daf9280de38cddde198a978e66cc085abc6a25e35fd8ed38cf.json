{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-46f53af0\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Selected Countries:\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  style: {\n    \"display\": \"inline\"\n  }\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  style: {\n    \"display\": \"flex\",\n    \"text-align\": \"center\",\n    \"align-items\": \"center\"\n  }\n}, [/*#__PURE__*/_createElementVNode(\"h2\", null, \"Hovered Country:\"), /*#__PURE__*/_createElementVNode(\"h3\", {\n  style: {\n    \"color\": \"black\"\n  },\n  id: \"hover-value\"\n}, \"Move your mouse\")], -1 /* HOISTED */));\nconst _hoisted_5 = {\n  ref: \"chart\"\n};\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"svg\", null, null, -1 /* HOISTED */));\nconst _hoisted_7 = [_hoisted_6];\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"button\", {\n    class: \"button-zoom\",\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.zoomIn && _ctx.zoomIn(...args))\n  }, \"+\"), _createElementVNode(\"button\", {\n    class: \"button-zoom\",\n    onClick: _cache[1] || (_cache[1] = (...args) => _ctx.zoomOut && _ctx.zoomOut(...args))\n  }, \"-\"), _hoisted_1, _createElementVNode(\"button\", {\n    class: \"button-container\",\n    onClick: _cache[2] || (_cache[2] = (...args) => _ctx.clearSelection && _ctx.clearSelection(...args))\n  }, \" Clear Selection \"), _createElementVNode(\"div\", null, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_createCommentVNode(\" <h4 v-for=\\\"state in selectedStates\\\" :key=\\\"state.id\\\">\\n            {{ state.id }}: {{ state.title }}\\n         </h4> \"), _createElementVNode(\"h4\", null, _toDisplayString(_ctx.selectedStatesFormatted), 1 /* TEXT */)]), _hoisted_4]), _createElementVNode(\"div\", _hoisted_5, _hoisted_7, 512 /* NEED_PATCH */)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","style","id","ref","_hoisted_6","class","onClick","_cache","args","_ctx","zoomIn","zoomOut","_hoisted_1","clearSelection","_hoisted_2","_hoisted_3","_createCommentVNode","_toDisplayString","selectedStatesFormatted","_hoisted_4","_hoisted_5","_hoisted_7"],"sources":["/home/lasmas/GitHub/PROYECTOBIO/my-svg-map/src/components/SVGMap.vue"],"sourcesContent":["<template>\n   <button class=\"button-zoom\" @click=\"zoomIn\">+</button>\n   <button class=\"button-zoom\" @click=\"zoomOut\">-</button>\n   <br>\n   <button class=\"button-container\" @click=\"clearSelection\"> Clear Selection </button>\n\n   <div>\n      <h2>Selected Countries:</h2>\n      <div style=\"display:inline\">\n         <!-- <h4 v-for=\"state in selectedStates\" :key=\"state.id\">\n            {{ state.id }}: {{ state.title }}\n         </h4> -->\n         <h4>{{ selectedStatesFormatted }}</h4>\n      </div>\n      <div style=\"display:flex; text-align: center; align-items: center;\">\n         <h2>Hovered Country:</h2>\n         <h3 style=\"color: black\" id=\"hover-value\">Move your mouse</h3>\n      </div>\n   </div>\n   <div ref=\"chart\">\n      <svg></svg>\n   </div>\n</template>\n\n\n<script>\nimport { ref } from 'vue';\nimport * as d3 from \"d3\";\n\nconst selectedStates = ref([]);\nexport default {\n   \n   mounted() {\n      const svg = d3.select(this.$refs.chart)\n         .append(\"svg\")\n         .attr(\"width\", \"1009.6727\")\n         .attr(\"height\", \"665.96301\");\n\n      // Aquí es donde se carga el archivo world.svg y se agrega al SVG\n      d3.xml(require(\"@/assets/world.svg\"))\n         .then(data => {\n            const importedNode = document.importNode(data.documentElement, true);\n            svg.node().appendChild(importedNode);\n\n            // Obtener todos los elementos \"path\" del SVG\n            const paths = svg.selectAll('path');\n\n            // Asignar las funciones \"changeColorOnClick\", \"changeColorOnHover\" y \"restoreColorOnHover\" a los eventos correspondientes de cada elemento \"path\"\n            paths\n               .on('click', changeColorOnClick)\n               .on('mouseover', changeColorOnHover)\n               .on('mouseout', restoreColorOnHover);\n         })\n         .catch(error => {\n            console.error(error);\n         });\n      },\n         computed: {\n      selectedStatesFormatted() {\n         return this.selectedStates.map(state => `${state.id}: ${state.title}`).join(', ');\n      };\n   \n};\n\n// Función para cambiar el color de fondo de un elemento \"path\" a verde al hacer clic en él\nfunction changeColorOnClick(event) {\n   const path = event.target;\n\n   if (path.classList.contains('selectedPath')) {\n      // si ya está seleccionado, se quita el color\n      path.style.fill = 'black';\n      path.classList.remove('selectedPath');\n      // se elimina el país de la lista de países seleccionados\n      selectedStates.value = selectedStates.value.filter(state => state.id !== path.id);\n   } else {\n      // si no está seleccionado, se agrega el color\n      path.style.fill = 'green';\n      path.classList.add('selectedPath');\n      // se agrega el país a la lista de países seleccionados\n      selectedStates.value.push({ id: path.id, title: path.getAttribute('title') });\n\n      console.log(selectedStates.value);\n   }\n}\n\n// Función para cambiar el color de fondo de un elemento \"path\" a púrpura al pasar el mouse por encima\nfunction changeColorOnHover(event) {\n   const path = event.target;\n   if (!path.classList.contains('selectedPath')) {\n      path.style.fill = 'purple';\n      document.getElementById(\"hover-value\").textContent = path.getAttribute('title');\n   }\n}\n\n// Función para restaurar el color de fondo de un elemento \"path\" al dejar de pasar el mouse por encima\nfunction restoreColorOnHover(event) {\n   const path = event.target;\n\n   if (!path.classList.contains('selectedPath')) {\n      path.style.fill = 'black';\n   }\n}\n\n</script>\n\n<style scoped>\n.selectedPath {\n   animation-name: slowchange;\n   animation-duration: 1.5s;\n   animation-fill-mode: forwards;\n}\n\npath:hover {\n   animation-name: hoverChange;\n   animation-duration: 1s;\n   animation-fill-mode: forwards;\n}\n\n.map-container {\n   width: 100vw;\n   /* ancho al 100% de la ventana */\n   /* height: 100vh; altura al 100% de la ventana */\n   display: flex;\n   justify-content: center;\n   /* centro horizontal */\n   align-items: center;\n   /* centro vertical */\n}\n\n.button-container {\n   position: relative;\n   z-index: 1;\n   margin-right: auto;\n   width: fit-content;\n   height: fit-content;\n}\n\n.button-zoom {\n   position: relative;\n   z-index: 1;\n   margin-right: auto;\n   width: 2%;\n   height: 2%;\n}\n\n.draggeable {\n   cursor: move;\n}\n\n.selected {\n   fill: green;\n}\n\npath {\n   fill: black;\n   transition: fill 0.5s ease-in-out;\n}\n\n.selectedPath {\n   animation-name: slowchange;\n   animation-duration: 1.5s;\n   animation-fill-mode: forwards;\n   transition: fill 0.5s ease-in-out;\n}\n\npath:hover {\n   animation-name: hoverChange;\n   animation-duration: 1s;\n   animation-fill-mode: forwards;\n   transition: fill 0.5s ease-in-out;\n}\n</style>\n"],"mappings":";;gEAGGA,mBAAA,CAAI;gEAIDA,mBAAA,CAA4B,YAAxB,qBAAmB;;EAClBC,KAAsB,EAAtB;IAAA;EAAA;AAAsB;gEAM3BD,mBAAA,CAGM;EAHDC,KAA8D,EAA9D;IAAA;IAAA;IAAA;EAAA;AAA8D,I,aAChED,mBAAA,CAAyB,YAArB,kBAAgB,G,aACpBA,mBAAA,CAA8D;EAA1DC,KAAoB,EAApB;IAAA;EAAA,CAAoB;EAACC,EAAE,EAAC;GAAc,iBAAe,E;;EAG1DC,GAAG,EAAC;AAAO;gEACbH,mBAAA,CAAW;oBAAXI,UAAW,C;;6DAnBdJ,mBAAA,CAAsD;IAA9CK,KAAK,EAAC,aAAa;IAAEC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,IAAA,CAAAC,MAAA,IAAAD,IAAA,CAAAC,MAAA,IAAAF,IAAA,CAAM;KAAE,GAAC,GAC7CR,mBAAA,CAAuD;IAA/CK,KAAK,EAAC,aAAa;IAAEC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,IAAA,CAAAE,OAAA,IAAAF,IAAA,CAAAE,OAAA,IAAAH,IAAA,CAAO;KAAE,GAAC,GAC9CI,UAAI,EACJZ,mBAAA,CAAmF;IAA3EK,KAAK,EAAC,kBAAkB;IAAEC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,IAAA,CAAAI,cAAA,IAAAJ,IAAA,CAAAI,cAAA,IAAAL,IAAA,CAAc;KAAE,mBAAiB,GAE1ER,mBAAA,CAYM,cAXHc,UAA4B,EAC5Bd,mBAAA,CAKM,OALNe,UAKM,GAJHC,mBAAA,6HAES,EACThB,mBAAA,CAAsC,YAAAiB,gBAAA,CAA/BR,IAAA,CAAAS,uBAAuB,iB,GAEjCC,UAGM,C,GAETnB,mBAAA,CAEM,OAFNoB,UAEM,EAAAC,UAAA,wB"},"metadata":{},"sourceType":"module","externalDependencies":[]}